{
    "name": "kops",
    "displayName": "kOps",
    "description": "A Pulumi package for creating and managing kops resources.",
    "keywords": [
        "pulumi",
        "kops",
        "category/infrastructure",
        "kubernetes"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`kops` Terraform Provider](https://github.com/eddycharly/terraform-provider-kops).",
    "repository": "https://github.com/ederst/pulumi-kops",
    "publisher": "ederst",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-kops/sdk/go/kops"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing kops resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/eddycharly/terraform-provider-kops)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-kops` repo](https://github.com/ederst/pulumi-kops/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-kops` repo](https://github.com/eddycharly/terraform-provider-kops/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/eddycharly/terraform-provider-kops)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-kops` repo](https://github.com/ederst/pulumi-kops/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-kops` repo](https://github.com/eddycharly/terraform-provider-kops/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "aws": {
                "$ref": "#/types/kops:config/aws:aws"
            },
            "featureFlags": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "klog": {
                "$ref": "#/types/kops:config/klog:klog"
            },
            "mock": {
                "type": "boolean"
            },
            "openstack": {
                "$ref": "#/types/kops:config/openstack:openstack"
            },
            "stateStore": {
                "type": "string"
            }
        },
        "defaults": [
            "stateStore"
        ]
    },
    "types": {
        "kops:config/aws:aws": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "assumeRole": {
                    "$ref": "#/types/kops:config/awsAssumeRole:awsAssumeRole"
                },
                "profile": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "s3AccessKey": {
                    "type": "string"
                },
                "s3Endpoint": {
                    "type": "string"
                },
                "s3Region": {
                    "type": "string"
                },
                "s3SecretKey": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "skipRegionCheck": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "kops:config/awsAssumeRole:awsAssumeRole": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:config/klog:klog": {
            "properties": {
                "verbosity": {
                    "$ref": "#/types/kops:config/klogVerbosity:klogVerbosity"
                }
            },
            "type": "object"
        },
        "kops:config/klogVerbosity:klogVerbosity": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:config/openstack:openstack": {
            "properties": {
                "applicationCredentialId": {
                    "type": "string"
                },
                "applicationCredentialSecret": {
                    "type": "string"
                },
                "authUrl": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "projectDomainId": {
                    "type": "string"
                },
                "projectDomainName": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "tenantName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAddon:ClusterAddon": {
            "properties": {
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "manifest"
            ]
        },
        "kops:index/ClusterApi:ClusterApi": {
            "properties": {
                "dns": {
                    "$ref": "#/types/kops:index/ClusterApiDns:ClusterApiDns",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadBalancer": {
                    "$ref": "#/types/kops:index/ClusterApiLoadBalancer:ClusterApiLoadBalancer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterApiDns:ClusterApiDns": {
            "type": "object"
        },
        "kops:index/ClusterApiLoadBalancer:ClusterApiLoadBalancer": {
            "properties": {
                "accessLog": {
                    "$ref": "#/types/kops:index/ClusterApiLoadBalancerAccessLog:ClusterApiLoadBalancerAccessLog",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "class": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crossZoneLoadBalancing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityGroupOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterApiLoadBalancerSubnet:ClusterApiLoadBalancerSubnet"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useForInternalApi": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "kops:index/ClusterApiLoadBalancerAccessLog:ClusterApiLoadBalancerAccessLog": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterApiLoadBalancerSubnet:ClusterApiLoadBalancerSubnet": {
            "properties": {
                "allocationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIpv4Address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAssets:ClusterAssets": {
            "properties": {
                "containerProxy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileRepository": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAuthentication:ClusterAuthentication": {
            "properties": {
                "aws": {
                    "$ref": "#/types/kops:index/ClusterAuthenticationAws:ClusterAuthenticationAws",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kopeio": {
                    "$ref": "#/types/kops:index/ClusterAuthenticationKopeio:ClusterAuthenticationKopeio",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAuthenticationAws:ClusterAuthenticationAws": {
            "properties": {
                "backendMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterAuthenticationAwsIdentityMapping:ClusterAuthenticationAwsIdentityMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAuthenticationAwsIdentityMapping:ClusterAuthenticationAwsIdentityMapping": {
            "properties": {
                "arn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAuthenticationKopeio:ClusterAuthenticationKopeio": {
            "type": "object"
        },
        "kops:index/ClusterAuthorization:ClusterAuthorization": {
            "properties": {
                "alwaysAllow": {
                    "$ref": "#/types/kops:index/ClusterAuthorizationAlwaysAllow:ClusterAuthorizationAlwaysAllow",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rbac": {
                    "$ref": "#/types/kops:index/ClusterAuthorizationRbac:ClusterAuthorizationRbac",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterAuthorizationAlwaysAllow:ClusterAuthorizationAlwaysAllow": {
            "type": "object"
        },
        "kops:index/ClusterAuthorizationRbac:ClusterAuthorizationRbac": {
            "type": "object"
        },
        "kops:index/ClusterAwsLoadBalancerController:ClusterAwsLoadBalancerController": {
            "properties": {
                "enableShield": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableWaFv2": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableWaf": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCertManager:ClusterCertManager": {
            "properties": {
                "defaultIssuer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostedZoneIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "managed"
            ]
        },
        "kops:index/ClusterCloudConfig:ClusterCloudConfig": {
            "properties": {
                "awsEbsCsiDriver": {
                    "$ref": "#/types/kops:index/ClusterCloudConfigAwsEbsCsiDriver:ClusterCloudConfigAwsEbsCsiDriver",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableSecurityGroupIngress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elbSecurityGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gceServiceAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gcpPdCsiDriver": {
                    "$ref": "#/types/kops:index/ClusterCloudConfigGcpPdCsiDriver:ClusterCloudConfigGcpPdCsiDriver",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStorageClasses": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multizone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeInstancePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeIpFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstOrientation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstProduct": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudConfigAwsEbsCsiDriver:ClusterCloudConfigAwsEbsCsiDriver": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeAttachLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudConfigGcpPdCsiDriver:ClusterCloudConfigGcpPdCsiDriver": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProvider:ClusterCloudProvider": {
            "properties": {
                "aws": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderAws:ClusterCloudProviderAws",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azure": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderAzure:ClusterCloudProviderAzure",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "do": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderDo:ClusterCloudProviderDo",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gce": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderGce:ClusterCloudProviderGce",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hetzner": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderHetzner:ClusterCloudProviderHetzner",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "openstack": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstack:ClusterCloudProviderOpenstack",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderAws:ClusterCloudProviderAws": {
            "type": "object"
        },
        "kops:index/ClusterCloudProviderAzure:ClusterCloudProviderAzure": {
            "properties": {
                "adminUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeTableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subscriptionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderDo:ClusterCloudProviderDo": {
            "type": "object"
        },
        "kops:index/ClusterCloudProviderGce:ClusterCloudProviderGce": {
            "type": "object"
        },
        "kops:index/ClusterCloudProviderHetzner:ClusterCloudProviderHetzner": {
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstack:ClusterCloudProviderOpenstack": {
            "properties": {
                "blockStorage": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackBlockStorage:ClusterCloudProviderOpenstackBlockStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureSkipVerify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadbalancer": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackLoadbalancer:ClusterCloudProviderOpenstackLoadbalancer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadata": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackMetadata:ClusterCloudProviderOpenstackMetadata",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitor": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackMonitor:ClusterCloudProviderOpenstackMonitor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackNetwork:ClusterCloudProviderOpenstackNetwork",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "router": {
                    "$ref": "#/types/kops:index/ClusterCloudProviderOpenstackRouter:ClusterCloudProviderOpenstackRouter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackBlockStorage:ClusterCloudProviderOpenstackBlockStorage": {
            "properties": {
                "createStorageClass": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "csiPluginImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "csiTopologySupport": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreAz": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideAz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackLoadbalancer:ClusterCloudProviderOpenstackLoadbalancer": {
            "properties": {
                "enableIngressHostname": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingNetwork": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingNetworkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ingressHostnameSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageSecGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useOctavia": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackMetadata:ClusterCloudProviderOpenstackMetadata": {
            "properties": {
                "configDrive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackMonitor:ClusterCloudProviderOpenstackMonitor": {
            "properties": {
                "delay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRetries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackNetwork:ClusterCloudProviderOpenstackNetwork": {
            "properties": {
                "availabilityZoneHints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalNetworkNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6SupportDisabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicNetworkNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterCloudProviderOpenstackRouter:ClusterCloudProviderOpenstackRouter": {
            "properties": {
                "availabilityZoneHints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalNetwork": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterClusterAutoscaler:ClusterClusterAutoscaler": {
            "properties": {
                "awsUseStaticInstanceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "balanceSimilarNodeGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cordonNodeBeforeTerminating": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expander": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxNodeProvisionTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newPodScaleUpDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownDelayAfterAdd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnneededTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnreadyTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUtilizationThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipNodesWithLocalStorage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipNodesWithSystemPods": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "skipNodesWithLocalStorage",
                "skipNodesWithSystemPods"
            ]
        },
        "kops:index/ClusterContainerd:ClusterContainerd": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpu": {
                    "$ref": "#/types/kops:index/ClusterContainerdNvidiaGpu:ClusterContainerdNvidiaGpu",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "$ref": "#/types/kops:index/ClusterContainerdPackages:ClusterContainerdPackages",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterContainerdRegistryMirror:ClusterContainerdRegistryMirror"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "root": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runc": {
                    "$ref": "#/types/kops:index/ClusterContainerdRunc:ClusterContainerdRunc",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterContainerdNvidiaGpu:ClusterContainerdNvidiaGpu": {
            "properties": {
                "driverPackage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterContainerdPackages:ClusterContainerdPackages": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterContainerdRegistryMirror:ClusterContainerdRegistryMirror": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "kops:index/ClusterContainerdRunc:ClusterContainerdRunc": {
            "properties": {
                "packages": {
                    "$ref": "#/types/kops:index/ClusterContainerdRuncPackages:ClusterContainerdRuncPackages",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterContainerdRuncPackages:ClusterContainerdRuncPackages": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterDocker:ClusterDocker": {
            "properties": {
                "authorizationPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bridge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bridgeIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultRuntime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultUlimits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimental": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheck": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipMasq": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipTables": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveRestore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentDownloads": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentUploads": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDownloadAttempts": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "$ref": "#/types/kops:index/ClusterDockerPackages:ClusterDockerPackages",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selinuxEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userNamespaceRemap": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterDockerPackages:ClusterDockerPackages": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterEgressProxy:ClusterEgressProxy": {
            "properties": {
                "httpProxy": {
                    "$ref": "#/types/kops:index/ClusterEgressProxyHttpProxy:ClusterEgressProxyHttpProxy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyExcludes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "httpProxy"
            ]
        },
        "kops:index/ClusterEgressProxyHttpProxy:ClusterEgressProxyHttpProxy": {
            "properties": {
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ]
        },
        "kops:index/ClusterEtcdCluster:ClusterEtcdCluster": {
            "properties": {
                "backups": {
                    "$ref": "#/types/kops:index/ClusterEtcdClusterBackups:ClusterEtcdClusterBackups",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heartbeatInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manager": {
                    "$ref": "#/types/kops:index/ClusterEtcdClusterManager:ClusterEtcdClusterManager",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterEtcdClusterMember:ClusterEtcdClusterMember"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "members",
                "name"
            ]
        },
        "kops:index/ClusterEtcdClusterBackups:ClusterEtcdClusterBackups": {
            "properties": {
                "backupStore": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backupStore",
                "image"
            ]
        },
        "kops:index/ClusterEtcdClusterManager:ClusterEtcdClusterManager": {
            "properties": {
                "backupInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "discoveryPollInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterEtcdClusterManagerEnv:ClusterEtcdClusterManagerEnv"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterEtcdClusterManagerEnv:ClusterEtcdClusterManagerEnv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "kops:index/ClusterEtcdClusterMember:ClusterEtcdClusterMember": {
            "properties": {
                "encryptedVolume": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kmsKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeIops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeThroughput": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceGroup",
                "name"
            ]
        },
        "kops:index/ClusterExternalCloudControllerManager:ClusterExternalCloudControllerManager": {
            "properties": {
                "allocateNodeCidrs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowUntaggedCloud": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidrAllocatorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCloudRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controllers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableLeaderMigration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElection": {
                    "$ref": "#/types/kops:index/ClusterExternalCloudControllerManagerLeaderElection:ClusterExternalCloudControllerManagerLeaderElection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountCredentials": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterExternalCloudControllerManagerLeaderElection:ClusterExternalCloudControllerManagerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterExternalDns:ClusterExternalDns": {
            "properties": {
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "watchIngress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "watchNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterExternalPolicy:ClusterExternalPolicy": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "kops:index/ClusterFileAsset:ClusterFileAsset": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isBase64": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "path"
            ]
        },
        "kops:index/ClusterHook:ClusterHook": {
            "properties": {
                "befores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execContainer": {
                    "$ref": "#/types/kops:index/ClusterHookExecContainer:ClusterHookExecContainer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useRawManifest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "kops:index/ClusterHookExecContainer:ClusterHookExecContainer": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "kops:index/ClusterIam:ClusterIam": {
            "properties": {
                "allowContainerRegistry": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legacy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissionsBoundary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountExternalPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterIamServiceAccountExternalPermission:ClusterIamServiceAccountExternalPermission"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountExternalPermissions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterIamServiceAccountExternalPermission:ClusterIamServiceAccountExternalPermission": {
            "properties": {
                "aws": {
                    "$ref": "#/types/kops:index/ClusterIamServiceAccountExternalPermissionAws:ClusterIamServiceAccountExternalPermissionAws",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterIamServiceAccountExternalPermissionAws:ClusterIamServiceAccountExternalPermissionAws": {
            "properties": {
                "inlinePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyArNs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKarpenter:ClusterKarpenter": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeApiServer:ClusterKubeApiServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "admissionControlConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "admissionControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "advertiseAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/ClusterKubeApiServerAnonymousAuth:ClusterKubeApiServerAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServerCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appendAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditDynamicConfiguration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxBackups": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditPolicyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchBufferSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchMaxWait": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleEnable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleQps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookInitialBackoff": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationRbacSuperUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookCacheAuthorizedTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookCacheUnauthorizedTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "corsAllowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultNotReadyTolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultUnreachableTolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAggregatorRouting": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableBootstrapAuthToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionProviderConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdQuorumRead": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServersOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalEncryptionProviderConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http2MaxStreamsPerConnection": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureBindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecurePort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCertificateAuthority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletPreferredAddressTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMutatingRequestsInflight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRequestsInflight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minRequestTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcClientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcGroupsClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcIssuerUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcUsernamePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyClientCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyClientKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderAllowedNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderClientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderExtraHeaderPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderGroupHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderUsernameHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securePort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountIssuer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountJwksuri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountKeyFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountSigningKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceClusterIpRange": {
                    "type": "string",
                    "description": "- String - ServiceClusterIPRange is the CIDR, from the internal network, where we allocate IPs for services.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceNodePortRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetRamMb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenAuthFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeApiServerAnonymousAuth:ClusterKubeApiServerAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeControllerManager:ClusterKubeControllerManager": {
            "properties": {
                "allocateNodeCidrs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attachDetachReconcileSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationAlwaysAllowPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidrAllocatorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentDeploymentSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentEndpointSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentNamespaceSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentRcSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentReplicasetSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentResourceQuotaSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentServiceSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentServiceaccountTokenSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCloudRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controllers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableAttachDetachReconcileSync": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableLeaderMigration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalClusterSigningDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalCloudVolumePlugin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerCpuInitializationPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerDownscaleDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerDownscaleStabilization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerInitialReadinessDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerTolerance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerUpscaleDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerUseRestClients": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeApiBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeApiQps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElection": {
                    "$ref": "#/types/kops:index/ClusterKubeControllerManagerLeaderElection:ClusterKubeControllerManagerLeaderElection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minResyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeCidrMaskSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeMonitorGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeMonitorPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podEvictionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "terminatedPodGcThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountCredentials": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeControllerManagerLeaderElection:ClusterKubeControllerManagerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDns:ClusterKubeDns": {
            "properties": {
                "affinity": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinity:ClusterKubeDnsAffinity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheMaxConcurrent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "coreDnsImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpaImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalCoreFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLocalDns": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsNodeLocalDns:ClusterKubeDnsNodeLocalDns",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stubDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsStubDomain:ClusterKubeDnsStubDomain"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsToleration:ClusterKubeDnsToleration"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upstreamNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinity:ClusterKubeDnsAffinity": {
            "properties": {
                "nodeAffinity": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinity:ClusterKubeDnsAffinityNodeAffinity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAffinity": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinity:ClusterKubeDnsAffinityPodAffinity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAntiAffinity": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinity:ClusterKubeDnsAffinityPodAntiAffinity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinity:ClusterKubeDnsAffinityNodeAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "preference": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField:ClusterKubeDnsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "nodeSelectorTerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField:ClusterKubeDnsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinity:ClusterKubeDnsAffinityPodAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "podAffinityTerm": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": {
            "properties": {
                "labelSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "labelSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinity:ClusterKubeDnsAffinityPodAntiAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "podAffinityTerm": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": {
            "properties": {
                "labelSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "labelSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelector": {
                    "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:ClusterKubeDnsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsNodeLocalDns:ClusterKubeDnsNodeLocalDns": {
            "properties": {
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardToKubeDns": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeDnsStubDomain:ClusterKubeDnsStubDomain": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "kops:index/ClusterKubeDnsToleration:ClusterKubeDnsToleration": {
            "properties": {
                "effect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeProxy:ClusterKubeProxy": {
            "properties": {
                "bindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conntrackMaxPerCore": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conntrackMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsExcludeCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsMinSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsScheduler": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsBindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "kops:index/ClusterKubeScheduler:ClusterKubeScheduler": {
            "properties": {
                "authenticationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationAlwaysAllowPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "burst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElection": {
                    "$ref": "#/types/kops:index/ClusterKubeSchedulerLeaderElection:ClusterKubeSchedulerLeaderElection",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPersistentVolumes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "qps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usePolicyConfigMap": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeSchedulerLeaderElection:ClusterKubeSchedulerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubelet:ClusterKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/ClusterKubeletAnonymousAuth:ClusterKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/ClusterKubeletCpuCfsQuota:ClusterKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeletAnonymousAuth:ClusterKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterKubeletCpuCfsQuota:ClusterKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterMasterKubelet:ClusterMasterKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/ClusterMasterKubeletAnonymousAuth:ClusterMasterKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/ClusterMasterKubeletCpuCfsQuota:ClusterMasterKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterMasterKubeletAnonymousAuth:ClusterMasterKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterMasterKubeletCpuCfsQuota:ClusterMasterKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterMetricsServer:ClusterMetricsServer": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "insecure"
            ]
        },
        "kops:index/ClusterNetworking:ClusterNetworking": {
            "properties": {
                "amazonVpc": {
                    "$ref": "#/types/kops:index/ClusterNetworkingAmazonVpc:ClusterNetworkingAmazonVpc",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "calico": {
                    "$ref": "#/types/kops:index/ClusterNetworkingCalico:ClusterNetworkingCalico",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canal": {
                    "$ref": "#/types/kops:index/ClusterNetworkingCanal:ClusterNetworkingCanal",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cilium": {
                    "$ref": "#/types/kops:index/ClusterNetworkingCilium:ClusterNetworkingCilium",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classic": {
                    "$ref": "#/types/kops:index/ClusterNetworkingClassic:ClusterNetworkingClassic",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cni": {
                    "$ref": "#/types/kops:index/ClusterNetworkingCni:ClusterNetworkingCni",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "external": {
                    "$ref": "#/types/kops:index/ClusterNetworkingExternal:ClusterNetworkingExternal",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flannel": {
                    "$ref": "#/types/kops:index/ClusterNetworkingFlannel:ClusterNetworkingFlannel",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gce": {
                    "$ref": "#/types/kops:index/ClusterNetworkingGce:ClusterNetworkingGce",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kopeio": {
                    "$ref": "#/types/kops:index/ClusterNetworkingKopeio:ClusterNetworkingKopeio",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubenet": {
                    "$ref": "#/types/kops:index/ClusterNetworkingKubenet:ClusterNetworkingKubenet",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kuberouter": {
                    "$ref": "#/types/kops:index/ClusterNetworkingKuberouter:ClusterNetworkingKuberouter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lyftVpc": {
                    "$ref": "#/types/kops:index/ClusterNetworkingLyftVpc:ClusterNetworkingLyftVpc",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "romana": {
                    "$ref": "#/types/kops:index/ClusterNetworkingRomana:ClusterNetworkingRomana",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weave": {
                    "$ref": "#/types/kops:index/ClusterNetworkingWeave:ClusterNetworkingWeave",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingAmazonVpc:ClusterNetworkingAmazonVpc": {
            "properties": {
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterNetworkingAmazonVpcEnv:ClusterNetworkingAmazonVpcEnv"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingAmazonVpcEnv:ClusterNetworkingAmazonVpcEnv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "kops:index/ClusterNetworkingCalico:ClusterNetworkingCalico": {
            "properties": {
                "allowIpForwarding": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "awsSrcDstCheck": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfExternalServiceMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfKubeProxyIptablesCleanupEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfLogLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chainInsertMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crossSubnet": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encapsulationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipIpMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4AutoDetectionMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6AutoDetectionMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSeverityScreen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusGoMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusProcessMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaReplicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vxlanMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wireguardEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingCanal:ClusterNetworkingCanal": {
            "properties": {
                "chainInsertMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultEndpointToHostAction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flanneldIptablesForwardRules": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSeveritySys": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusGoMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusProcessMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaReplicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingCilium:ClusterNetworkingCilium": {
            "properties": {
                "agentPodAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "agentPrometheusPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoDirectNodeRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfNeighGlobalMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfPolicyMapMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfctGlobalAnyMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfctGlobalTcpMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbMaglevTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbMapMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbSockHostNsOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfnatGlobalMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chainingMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "debug": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableCnpStatusUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableEndpointCrd": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableBpfMasquerade": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableEncryption": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableEndpointHealthChecking": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableHostReachableServices": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableL7Proxy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableNodePort": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePrometheusMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRemoteNodeIdentity": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableServiceTopology": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdManaged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hubble": {
                    "$ref": "#/types/kops:index/ClusterNetworkingCiliumHubble:ClusterNetworkingCiliumHubble",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityAllocationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityChangeGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installIptablesRules": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipam": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masquerade": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocateBpfMaps": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sidecarIstioProxyImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toFqdnsDnsRejectResponseCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toFqdnsEnablePoller": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tunnel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableRemoteNodeIdentity",
                "preallocateBpfMaps"
            ]
        },
        "kops:index/ClusterNetworkingCiliumHubble:ClusterNetworkingCiliumHubble": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingClassic:ClusterNetworkingClassic": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingCni:ClusterNetworkingCni": {
            "properties": {
                "usesSecondaryIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingExternal:ClusterNetworkingExternal": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingFlannel:ClusterNetworkingFlannel": {
            "properties": {
                "backend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesResyncSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingGce:ClusterNetworkingGce": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingKopeio:ClusterNetworkingKopeio": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingKubenet:ClusterNetworkingKubenet": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingKuberouter:ClusterNetworkingKuberouter": {
            "type": "object"
        },
        "kops:index/ClusterNetworkingLyftVpc:ClusterNetworkingLyftVpc": {
            "properties": {
                "subnetTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingRomana:ClusterNetworkingRomana": {
            "properties": {
                "daemonServiceIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServiceIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNetworkingWeave:ClusterNetworkingWeave": {
            "properties": {
                "connLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netExtraArgs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMasqLocal": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcCpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcCpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcExtraArgs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcMemoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcMemoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNodeAuthorization:ClusterNodeAuthorization": {
            "properties": {
                "nodeAuthorizer": {
                    "$ref": "#/types/kops:index/ClusterNodeAuthorizationNodeAuthorizer:ClusterNodeAuthorizationNodeAuthorizer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNodeAuthorizationNodeAuthorizer:ClusterNodeAuthorizationNodeAuthorizer": {
            "properties": {
                "authorizer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNodeProblemDetector:ClusterNodeProblemDetector": {
            "properties": {
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterNodeTerminationHandler:ClusterNodeTerminationHandler": {
            "properties": {
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePrometheusMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRebalanceDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRebalanceMonitoring": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableScheduledEventDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSpotInterruptionDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSqsTerminationDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeFromLoadBalancers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managedAsgTag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableSpotInterruptionDraining",
                "enabled"
            ]
        },
        "kops:index/ClusterNtp:ClusterNtp": {
            "properties": {
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterPodIdentityWebhook:ClusterPodIdentityWebhook": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterRollingUpdate:ClusterRollingUpdate": {
            "properties": {
                "drainAndTerminate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSurge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterSecrets:ClusterSecrets": {
            "properties": {
                "clusterCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCaKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clusterCaCert",
                        "clusterCaKey"
                    ]
                }
            }
        },
        "kops:index/ClusterServiceAccountIssuerDiscovery:ClusterServiceAccountIssuerDiscovery": {
            "properties": {
                "additionalAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "discoveryStore": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAwsOidcProvider": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterSnapshotController:ClusterSnapshotController": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installDefaultClass": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterSubnet:ClusterSubnet": {
            "properties": {
                "additionalRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterSubnetAdditionalRoute:ClusterSubnetAdditionalRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "egress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "providerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "providerId",
                "type",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "name",
                        "providerId",
                        "type",
                        "zone"
                    ]
                }
            }
        },
        "kops:index/ClusterSubnetAdditionalRoute:ClusterSubnetAdditionalRoute": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterTagSubnets:ClusterTagSubnets": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterTopology:ClusterTopology": {
            "properties": {
                "bastion": {
                    "$ref": "#/types/kops:index/ClusterTopologyBastion:ClusterTopologyBastion",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dns": {
                    "$ref": "#/types/kops:index/ClusterTopologyDns:ClusterTopologyDns",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masters": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dns",
                "masters",
                "nodes"
            ]
        },
        "kops:index/ClusterTopologyBastion:ClusterTopologyBastion": {
            "properties": {
                "bastionPublicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadBalancer": {
                    "$ref": "#/types/kops:index/ClusterTopologyBastionLoadBalancer:ClusterTopologyBastionLoadBalancer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bastionPublicName"
            ]
        },
        "kops:index/ClusterTopologyBastionLoadBalancer:ClusterTopologyBastionLoadBalancer": {
            "properties": {
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalSecurityGroups"
            ]
        },
        "kops:index/ClusterTopologyDns:ClusterTopologyDns": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "kops:index/ClusterUpdaterApply:ClusterUpdaterApply": {
            "properties": {
                "allowKopsDowngrade": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lifecycleOverrides": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterUpdaterRollingUpdate:ClusterUpdaterRollingUpdate": {
            "properties": {
                "bastionInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failOnDrainError": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failOnValidate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "force": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postDrainDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validateCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validationTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterUpdaterValidate:ClusterUpdaterValidate": {
            "properties": {
                "pollInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ClusterWarmPool:ClusterWarmPool": {
            "properties": {
                "enableLifecycleHook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupAdditionalUserData:InstanceGroupAdditionalUserData": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "type"
            ]
        },
        "kops:index/InstanceGroupContainerd:InstanceGroupContainerd": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpu": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerdNvidiaGpu:InstanceGroupContainerdNvidiaGpu",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerdPackages:InstanceGroupContainerdPackages",
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupContainerdRegistryMirror:InstanceGroupContainerdRegistryMirror"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "root": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runc": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerdRunc:InstanceGroupContainerdRunc",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupContainerdNvidiaGpu:InstanceGroupContainerdNvidiaGpu": {
            "properties": {
                "driverPackage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupContainerdPackages:InstanceGroupContainerdPackages": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupContainerdRegistryMirror:InstanceGroupContainerdRegistryMirror": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "kops:index/InstanceGroupContainerdRunc:InstanceGroupContainerdRunc": {
            "properties": {
                "packages": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerdRuncPackages:InstanceGroupContainerdRuncPackages",
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupContainerdRuncPackages:InstanceGroupContainerdRuncPackages": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupExternalLoadBalancer:InstanceGroupExternalLoadBalancer": {
            "properties": {
                "loadBalancerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetGroupArn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupFileAsset:InstanceGroupFileAsset": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isBase64": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "path"
            ]
        },
        "kops:index/InstanceGroupGuestAccelerator:InstanceGroupGuestAccelerator": {
            "properties": {
                "acceleratorCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "acceleratorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupHook:InstanceGroupHook": {
            "properties": {
                "befores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execContainer": {
                    "$ref": "#/types/kops:index/InstanceGroupHookExecContainer:InstanceGroupHookExecContainer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useRawManifest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "kops:index/InstanceGroupHookExecContainer:InstanceGroupHookExecContainer": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "description": "- (Computed) - String - Image is the instance (ami etc) we should use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "kops:index/InstanceGroupIam:InstanceGroupIam": {
            "properties": {
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "profile"
            ]
        },
        "kops:index/InstanceGroupInstanceMetadata:InstanceGroupInstanceMetadata": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpTokens": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupKubelet:InstanceGroupKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/InstanceGroupKubeletAnonymousAuth:InstanceGroupKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/InstanceGroupKubeletCpuCfsQuota:InstanceGroupKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Taints indicates the kubernetes taints for nodes in this instance group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupKubeletAnonymousAuth:InstanceGroupKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupKubeletCpuCfsQuota:InstanceGroupKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicy:InstanceGroupMixedInstancesPolicy": {
            "properties": {
                "instanceRequirements": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirements:InstanceGroupMixedInstancesPolicyInstanceRequirements",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandAboveBase": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicyOnDemandAboveBase:InstanceGroupMixedInstancesPolicyOnDemandAboveBase",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandAllocationStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandBase": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicyOnDemandBase:InstanceGroupMixedInstancesPolicyOnDemandBase",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotAllocationStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotInstancePools": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirements:InstanceGroupMixedInstancesPolicyInstanceRequirements": {
            "properties": {
                "cpu": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirementsCpu:InstanceGroupMixedInstancesPolicyInstanceRequirementsCpu",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirementsMemory:InstanceGroupMixedInstancesPolicyInstanceRequirementsMemory",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirementsCpu:InstanceGroupMixedInstancesPolicyInstanceRequirementsCpu": {
            "properties": {
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicyInstanceRequirementsMemory:InstanceGroupMixedInstancesPolicyInstanceRequirementsMemory": {
            "properties": {
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicyOnDemandAboveBase:InstanceGroupMixedInstancesPolicyOnDemandAboveBase": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupMixedInstancesPolicyOnDemandBase:InstanceGroupMixedInstancesPolicyOnDemandBase": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupRollingUpdate:InstanceGroupRollingUpdate": {
            "properties": {
                "drainAndTerminate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSurge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/InstanceGroupVolume:InstanceGroupVolume": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encrypted": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "throughput": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "device"
            ]
        },
        "kops:index/InstanceGroupVolumeMount:InstanceGroupVolumeMount": {
            "properties": {
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mountOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "device",
                "filesystem",
                "path"
            ]
        },
        "kops:index/InstanceGroupWarmPool:InstanceGroupWarmPool": {
            "properties": {
                "enableLifecycleHook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "- Int - MaxSize is the maximum size of the pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minSize": {
                    "type": "integer",
                    "description": "- Int - MinSize is the minimum size of the pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ProviderAws:ProviderAws": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "assumeRole": {
                    "$ref": "#/types/kops:index/ProviderAwsAssumeRole:ProviderAwsAssumeRole",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3AccessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3Endpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3Region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "s3SecretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipRegionCheck": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ProviderAwsAssumeRole:ProviderAwsAssumeRole": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ProviderKlog:ProviderKlog": {
            "properties": {
                "verbosity": {
                    "$ref": "#/types/kops:index/ProviderKlogVerbosity:ProviderKlogVerbosity",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ProviderKlogVerbosity:ProviderKlogVerbosity": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/ProviderOpenstack:ProviderOpenstack": {
            "properties": {
                "applicationCredentialId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationCredentialSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectDomainId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectDomainName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kops:index/getClusterAddon:getClusterAddon": {
            "properties": {
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "manifest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterApi:getClusterApi": {
            "properties": {
                "dns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterApiDn:getClusterApiDn"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterApiLoadBalancer:getClusterApiLoadBalancer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dns",
                "loadBalancers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterApiDn:getClusterApiDn": {
            "type": "object"
        },
        "kops:index/getClusterApiLoadBalancer:getClusterApiLoadBalancer": {
            "properties": {
                "accessLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterApiLoadBalancerAccessLog:getClusterApiLoadBalancerAccessLog"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "class": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crossZoneLoadBalancing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityGroupOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterApiLoadBalancerSubnet:getClusterApiLoadBalancerSubnet"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useForInternalApi": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessLogs",
                "additionalSecurityGroups",
                "class",
                "crossZoneLoadBalancing",
                "idleTimeoutSeconds",
                "securityGroupOverride",
                "sslCertificate",
                "sslPolicy",
                "subnets",
                "type",
                "useForInternalApi"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterApiLoadBalancerAccessLog:getClusterApiLoadBalancerAccessLog": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "bucketPrefix",
                "interval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterApiLoadBalancerSubnet:getClusterApiLoadBalancerSubnet": {
            "properties": {
                "allocationId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIpv4Address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allocationId",
                "name",
                "privateIpv4Address"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAsset:getClusterAsset": {
            "properties": {
                "containerProxy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileRepository": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "containerProxy",
                "containerRegistry",
                "fileRepository"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAuthentication:getClusterAuthentication": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterAuthenticationAw:getClusterAuthenticationAw"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kopeios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterAuthenticationKopeio:getClusterAuthenticationKopeio"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aws",
                "kopeios"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAuthenticationAw:getClusterAuthenticationAw": {
            "properties": {
                "backendMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterAuthenticationAwIdentityMapping:getClusterAuthenticationAwIdentityMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backendMode",
                "clusterId",
                "cpuLimit",
                "cpuRequest",
                "identityMappings",
                "image",
                "memoryLimit",
                "memoryRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAuthenticationAwIdentityMapping:getClusterAuthenticationAwIdentityMapping": {
            "properties": {
                "arn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arn",
                "groups",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAuthenticationKopeio:getClusterAuthenticationKopeio": {
            "type": "object"
        },
        "kops:index/getClusterAuthorization:getClusterAuthorization": {
            "properties": {
                "alwaysAllows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterAuthorizationAlwaysAllow:getClusterAuthorizationAlwaysAllow"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rbacs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterAuthorizationRbac:getClusterAuthorizationRbac"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alwaysAllows",
                "rbacs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterAuthorizationAlwaysAllow:getClusterAuthorizationAlwaysAllow": {
            "type": "object"
        },
        "kops:index/getClusterAuthorizationRbac:getClusterAuthorizationRbac": {
            "type": "object"
        },
        "kops:index/getClusterAwsLoadBalancerController:getClusterAwsLoadBalancerController": {
            "properties": {
                "enableShield": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableWaFv2": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableWaf": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableShield",
                "enableWaFv2",
                "enableWaf",
                "enabled",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCertManager:getClusterCertManager": {
            "properties": {
                "defaultIssuer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostedZoneIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultIssuer",
                "enabled",
                "hostedZoneIds",
                "image",
                "managed",
                "nameservers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudConfig:getClusterCloudConfig": {
            "properties": {
                "awsEbsCsiDrivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudConfigAwsEbsCsiDriver:getClusterCloudConfigAwsEbsCsiDriver"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableSecurityGroupIngress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elbSecurityGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gceServiceAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gcpPdCsiDrivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudConfigGcpPdCsiDriver:getClusterCloudConfigGcpPdCsiDriver"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStorageClasses": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multizone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeInstancePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeIpFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeTags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstOrientation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstProduct": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "awsEbsCsiDrivers",
                "disableSecurityGroupIngress",
                "elbSecurityGroup",
                "gceServiceAccount",
                "gcpPdCsiDrivers",
                "manageStorageClasses",
                "multizone",
                "nodeInstancePrefix",
                "nodeIpFamilies",
                "nodeTags",
                "spotinstOrientation",
                "spotinstProduct"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudConfigAwsEbsCsiDriver:getClusterCloudConfigAwsEbsCsiDriver": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeAttachLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "managed",
                "podAnnotations",
                "version",
                "volumeAttachLimit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudConfigGcpPdCsiDriver:getClusterCloudConfigGcpPdCsiDriver": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProvider:getClusterCloudProvider": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderAw:getClusterCloudProviderAw"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderAzure:getClusterCloudProviderAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderDo:getClusterCloudProviderDo"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderGce:getClusterCloudProviderGce"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hetzners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderHetzner:getClusterCloudProviderHetzner"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "openstacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstack:getClusterCloudProviderOpenstack"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aws",
                "azures",
                "dos",
                "gces",
                "hetzners",
                "openstacks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderAw:getClusterCloudProviderAw": {
            "type": "object"
        },
        "kops:index/getClusterCloudProviderAzure:getClusterCloudProviderAzure": {
            "properties": {
                "adminUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeTableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subscriptionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminUser",
                "resourceGroupName",
                "routeTableName",
                "subscriptionId",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderDo:getClusterCloudProviderDo": {
            "type": "object"
        },
        "kops:index/getClusterCloudProviderGce:getClusterCloudProviderGce": {
            "type": "object"
        },
        "kops:index/getClusterCloudProviderHetzner:getClusterCloudProviderHetzner": {
            "type": "object"
        },
        "kops:index/getClusterCloudProviderOpenstack:getClusterCloudProviderOpenstack": {
            "properties": {
                "blockStorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackBlockStorage:getClusterCloudProviderOpenstackBlockStorage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureSkipVerify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackLoadbalancer:getClusterCloudProviderOpenstackLoadbalancer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackMetadata:getClusterCloudProviderOpenstackMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackMonitor:getClusterCloudProviderOpenstackMonitor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackNetwork:getClusterCloudProviderOpenstackNetwork"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterCloudProviderOpenstackRouter:getClusterCloudProviderOpenstackRouter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "blockStorages",
                "insecureSkipVerify",
                "loadbalancers",
                "metadatas",
                "monitors",
                "networks",
                "routers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackBlockStorage:getClusterCloudProviderOpenstackBlockStorage": {
            "properties": {
                "createStorageClass": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "csiPluginImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "csiTopologySupport": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreAz": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideAz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createStorageClass",
                "csiPluginImage",
                "csiTopologySupport",
                "ignoreAz",
                "overrideAz",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackLoadbalancer:getClusterCloudProviderOpenstackLoadbalancer": {
            "properties": {
                "enableIngressHostname": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingNetwork": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingNetworkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "floatingSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ingressHostnameSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageSecGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useOctavia": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableIngressHostname",
                "floatingNetwork",
                "floatingNetworkId",
                "floatingSubnet",
                "ingressHostnameSuffix",
                "manageSecGroups",
                "method",
                "provider",
                "subnetId",
                "useOctavia"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackMetadata:getClusterCloudProviderOpenstackMetadata": {
            "properties": {
                "configDrive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "configDrive"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackMonitor:getClusterCloudProviderOpenstackMonitor": {
            "properties": {
                "delay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRetries": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "delay",
                "maxRetries",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackNetwork:getClusterCloudProviderOpenstackNetwork": {
            "properties": {
                "availabilityZoneHints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalNetworkNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6SupportDisabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicNetworkNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZoneHints",
                "internalNetworkNames",
                "ipv6SupportDisabled",
                "publicNetworkNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterCloudProviderOpenstackRouter:getClusterCloudProviderOpenstackRouter": {
            "properties": {
                "availabilityZoneHints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalNetwork": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZoneHints",
                "dnsServers",
                "externalNetwork",
                "externalSubnet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterClusterAutoscaler:getClusterClusterAutoscaler": {
            "properties": {
                "awsUseStaticInstanceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "balanceSimilarNodeGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cordonNodeBeforeTerminating": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expander": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxNodeProvisionTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newPodScaleUpDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownDelayAfterAdd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnneededTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnreadyTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUtilizationThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipNodesWithLocalStorage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipNodesWithSystemPods": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "awsUseStaticInstanceList",
                "balanceSimilarNodeGroups",
                "cordonNodeBeforeTerminating",
                "cpuRequest",
                "enabled",
                "expander",
                "image",
                "maxNodeProvisionTime",
                "memoryRequest",
                "newPodScaleUpDelay",
                "podAnnotations",
                "scaleDownDelayAfterAdd",
                "scaleDownUnneededTime",
                "scaleDownUnreadyTime",
                "scaleDownUtilizationThreshold",
                "skipNodesWithLocalStorage",
                "skipNodesWithSystemPods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerd:getClusterContainerd": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterContainerdNvidiaGpus:getClusterContainerdNvidiaGpus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterContainerdPackage:getClusterContainerdPackage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterContainerdRegistryMirror:getClusterContainerdRegistryMirror"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "root": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterContainerdRunc:getClusterContainerdRunc"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "configOverride",
                "logLevel",
                "nvidiaGpus",
                "packages",
                "registryMirrors",
                "root",
                "runcs",
                "skipInstall",
                "state",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerdNvidiaGpus:getClusterContainerdNvidiaGpus": {
            "properties": {
                "driverPackage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "driverPackage",
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerdPackage:getClusterContainerdPackage": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hashAmd64",
                "hashArm64",
                "urlAmd64",
                "urlArm64"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerdRegistryMirror:getClusterContainerdRegistryMirror": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerdRunc:getClusterContainerdRunc": {
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterContainerdRuncPackage:getClusterContainerdRuncPackage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "packages",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterContainerdRuncPackage:getClusterContainerdRuncPackage": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hashAmd64",
                "hashArm64",
                "urlAmd64",
                "urlArm64"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterDocker:getClusterDocker": {
            "properties": {
                "authorizationPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bridge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bridgeIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultRuntime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultUlimits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimental": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheck": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipMasq": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipTables": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveRestore": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentDownloads": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentUploads": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDownloadAttempts": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterDockerPackage:getClusterDockerPackage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selinuxEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageOpts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userNamespaceRemap": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authorizationPlugins",
                "bridge",
                "bridgeIp",
                "dataRoot",
                "defaultRuntime",
                "defaultUlimits",
                "dns",
                "execOpts",
                "execRoot",
                "experimental",
                "healthCheck",
                "hosts",
                "insecureRegistries",
                "insecureRegistry",
                "ipMasq",
                "ipTables",
                "liveRestore",
                "logDriver",
                "logLevel",
                "logOpts",
                "maxConcurrentDownloads",
                "maxConcurrentUploads",
                "maxDownloadAttempts",
                "metricsAddress",
                "mtu",
                "packages",
                "registryMirrors",
                "runtimes",
                "selinuxEnabled",
                "skipInstall",
                "storage",
                "storageOpts",
                "userNamespaceRemap",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterDockerPackage:getClusterDockerPackage": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hashAmd64",
                "hashArm64",
                "urlAmd64",
                "urlArm64"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEgressProxy:getClusterEgressProxy": {
            "properties": {
                "httpProxies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterEgressProxyHttpProxy:getClusterEgressProxyHttpProxy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyExcludes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "httpProxies",
                "proxyExcludes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEgressProxyHttpProxy:getClusterEgressProxyHttpProxy": {
            "properties": {
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEtcdCluster:getClusterEtcdCluster": {
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterEtcdClusterBackup:getClusterEtcdClusterBackup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heartbeatInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterEtcdClusterManager:getClusterEtcdClusterManager"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterEtcdClusterMember:getClusterEtcdClusterMember"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backups",
                "cpuRequest",
                "heartbeatInterval",
                "image",
                "leaderElectionTimeout",
                "managers",
                "members",
                "memoryRequest",
                "name",
                "provider",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEtcdClusterBackup:getClusterEtcdClusterBackup": {
            "properties": {
                "backupStore": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backupStore",
                "image"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEtcdClusterManager:getClusterEtcdClusterManager": {
            "properties": {
                "backupInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "discoveryPollInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterEtcdClusterManagerEnv:getClusterEtcdClusterManagerEnv"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backupInterval",
                "discoveryPollInterval",
                "envs",
                "image",
                "logLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEtcdClusterManagerEnv:getClusterEtcdClusterManagerEnv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterEtcdClusterMember:getClusterEtcdClusterMember": {
            "properties": {
                "encryptedVolume": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kmsKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeIops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeThroughput": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "encryptedVolume",
                "instanceGroup",
                "kmsKeyId",
                "name",
                "volumeIops",
                "volumeSize",
                "volumeThroughput",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterExternalCloudControllerManager:getClusterExternalCloudControllerManager": {
            "properties": {
                "allocateNodeCidrs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowUntaggedCloud": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidrAllocatorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCloudRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controllers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableLeaderMigration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterExternalCloudControllerManagerLeaderElection:getClusterExternalCloudControllerManagerLeaderElection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountCredentials": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allocateNodeCidrs",
                "allowUntaggedCloud",
                "cidrAllocatorType",
                "cloudProvider",
                "clusterCidr",
                "clusterName",
                "configureCloudRoutes",
                "controllers",
                "cpuRequest",
                "enableLeaderMigration",
                "image",
                "leaderElections",
                "logLevel",
                "master",
                "useServiceAccountCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterExternalCloudControllerManagerLeaderElection:getClusterExternalCloudControllerManagerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "leaderElect",
                "leaderElectLeaseDuration",
                "leaderElectRenewDeadlineDuration",
                "leaderElectResourceLock",
                "leaderElectResourceName",
                "leaderElectResourceNamespace",
                "leaderElectRetryPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterExternalDn:getClusterExternalDn": {
            "properties": {
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "watchIngress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "watchNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "provider",
                "watchIngress",
                "watchNamespace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterExternalPolicy:getClusterExternalPolicy": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "kops:index/getClusterFileAsset:getClusterFileAsset": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isBase64": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "isBase64",
                "mode",
                "name",
                "path",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterHook:getClusterHook": {
            "properties": {
                "befores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterHookExecContainer:getClusterHookExecContainer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useRawManifest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "befores",
                "enabled",
                "execContainers",
                "manifest",
                "name",
                "requires",
                "roles",
                "useRawManifest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterHookExecContainer:getClusterHookExecContainer": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commands",
                "environment",
                "image"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterIam:getClusterIam": {
            "properties": {
                "allowContainerRegistry": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legacy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissionsBoundary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountExternalPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterIamServiceAccountExternalPermission:getClusterIamServiceAccountExternalPermission"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountExternalPermissions": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowContainerRegistry",
                "legacy",
                "permissionsBoundary",
                "serviceAccountExternalPermissions",
                "useServiceAccountExternalPermissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterIamServiceAccountExternalPermission:getClusterIamServiceAccountExternalPermission": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterIamServiceAccountExternalPermissionAw:getClusterIamServiceAccountExternalPermissionAw"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aws",
                "name",
                "namespace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterIamServiceAccountExternalPermissionAw:getClusterIamServiceAccountExternalPermissionAw": {
            "properties": {
                "inlinePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyArNs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "inlinePolicy",
                "policyArNs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKarpenter:getClusterKarpenter": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeApiServer:getClusterKubeApiServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "admissionControlConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "admissionControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "advertiseAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/getClusterKubeApiServerAnonymousAuth:getClusterKubeApiServerAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServerCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appendAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditDynamicConfiguration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxAge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxBackups": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditLogPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditPolicyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchBufferSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchMaxWait": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleEnable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookBatchThrottleQps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookInitialBackoff": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditWebhookMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationRbacSuperUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookCacheAuthorizedTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookCacheUnauthorizedTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationWebhookConfigFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "corsAllowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultNotReadyTolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultUnreachableTolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAdmissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAggregatorRouting": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableBootstrapAuthToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionProviderConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdQuorumRead": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServersOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalEncryptionProviderConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http2MaxStreamsPerConnection": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureBindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecurePort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCertificateAuthority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletPreferredAddressTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMutatingRequestsInflight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRequestsInflight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minRequestTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcClientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcGroupsClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcIssuerUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oidcUsernamePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyClientCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyClientKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderAllowedNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderClientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderExtraHeaderPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderGroupHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestheaderUsernameHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securePort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountIssuer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountJwksuri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountKeyFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountSigningKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceClusterIpRange": {
                    "type": "string",
                    "description": "- String - ServiceClusterIPRange is the CIDR, from the internal network, where we allocate IPs for services.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceNodePortRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetRamMb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenAuthFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "admissionControls",
                "admissionControlConfigFile",
                "advertiseAddress",
                "allowPrivileged",
                "apiAudiences",
                "apiServerCount",
                "appendAdmissionPlugins",
                "auditDynamicConfiguration",
                "auditLogFormat",
                "auditLogMaxAge",
                "auditLogMaxBackups",
                "auditLogMaxSize",
                "auditLogPath",
                "auditPolicyFile",
                "auditWebhookBatchBufferSize",
                "auditWebhookBatchMaxSize",
                "auditWebhookBatchMaxWait",
                "auditWebhookBatchThrottleBurst",
                "auditWebhookBatchThrottleEnable",
                "auditWebhookBatchThrottleQps",
                "auditWebhookConfigFile",
                "auditWebhookInitialBackoff",
                "auditWebhookMode",
                "authenticationTokenWebhookCacheTtl",
                "authenticationTokenWebhookConfigFile",
                "authorizationMode",
                "authorizationRbacSuperUser",
                "authorizationWebhookCacheAuthorizedTtl",
                "authorizationWebhookCacheUnauthorizedTtl",
                "authorizationWebhookConfigFile",
                "basicAuthFile",
                "bindAddress",
                "clientCaFile",
                "cloudProvider",
                "corsAllowedOrigins",
                "cpuLimit",
                "cpuRequest",
                "defaultNotReadyTolerationSeconds",
                "defaultUnreachableTolerationSeconds",
                "disableAdmissionPlugins",
                "disableBasicAuth",
                "enableAdmissionPlugins",
                "enableAggregatorRouting",
                "enableBootstrapAuthToken",
                "enableProfiling",
                "encryptionProviderConfig",
                "etcdCaFile",
                "etcdCertFile",
                "etcdKeyFile",
                "etcdQuorumRead",
                "etcdServers",
                "etcdServersOverrides",
                "eventTtl",
                "experimentalEncryptionProviderConfig",
                "featureGates",
                "http2MaxStreamsPerConnection",
                "image",
                "insecureBindAddress",
                "insecurePort",
                "kubeletCertificateAuthority",
                "kubeletClientCertificate",
                "kubeletClientKey",
                "kubeletPreferredAddressTypes",
                "logFormat",
                "logLevel",
                "maxMutatingRequestsInflight",
                "maxRequestsInflight",
                "memoryLimit",
                "memoryRequest",
                "minRequestTimeout",
                "oidcCaFile",
                "oidcClientId",
                "oidcGroupsClaim",
                "oidcGroupsPrefix",
                "oidcIssuerUrl",
                "oidcRequiredClaims",
                "oidcUsernameClaim",
                "oidcUsernamePrefix",
                "proxyClientCertFile",
                "proxyClientKeyFile",
                "requestTimeout",
                "requestheaderAllowedNames",
                "requestheaderClientCaFile",
                "requestheaderExtraHeaderPrefixes",
                "requestheaderGroupHeaders",
                "requestheaderUsernameHeaders",
                "runtimeConfig",
                "securePort",
                "serviceAccountIssuer",
                "serviceAccountJwksuri",
                "serviceAccountKeyFiles",
                "serviceAccountSigningKeyFile",
                "serviceClusterIpRange",
                "serviceNodePortRange",
                "storageBackend",
                "targetRamMb",
                "tlsCertFile",
                "tlsCipherSuites",
                "tlsMinVersion",
                "tlsPrivateKeyFile",
                "tokenAuthFile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeApiServerAnonymousAuth:getClusterKubeApiServerAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeControllerManager:getClusterKubeControllerManager": {
            "properties": {
                "allocateNodeCidrs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attachDetachReconcileSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationAlwaysAllowPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidrAllocatorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentDeploymentSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentEndpointSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentNamespaceSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentRcSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentReplicasetSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentResourceQuotaSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentServiceSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concurrentServiceaccountTokenSyncs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCloudRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "controllers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableAttachDetachReconcileSync": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableLeaderMigration": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalClusterSigningDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalCloudVolumePlugin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerCpuInitializationPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerDownscaleDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerDownscaleStabilization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerInitialReadinessDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerTolerance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerUpscaleDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "horizontalPodAutoscalerUseRestClients": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeApiBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeApiQps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeControllerManagerLeaderElection:getClusterKubeControllerManagerLeaderElection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minResyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeCidrMaskSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeMonitorGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeMonitorPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podEvictionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "terminatedPodGcThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useServiceAccountCredentials": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allocateNodeCidrs",
                "attachDetachReconcileSyncPeriod",
                "authenticationKubeconfig",
                "authorizationAlwaysAllowPaths",
                "authorizationKubeconfig",
                "cidrAllocatorType",
                "cloudProvider",
                "clusterCidr",
                "clusterName",
                "concurrentDeploymentSyncs",
                "concurrentEndpointSyncs",
                "concurrentNamespaceSyncs",
                "concurrentRcSyncs",
                "concurrentReplicasetSyncs",
                "concurrentResourceQuotaSyncs",
                "concurrentServiceSyncs",
                "concurrentServiceaccountTokenSyncs",
                "configureCloudRoutes",
                "controllers",
                "disableAttachDetachReconcileSync",
                "enableLeaderMigration",
                "enableProfiling",
                "experimentalClusterSigningDuration",
                "externalCloudVolumePlugin",
                "featureGates",
                "horizontalPodAutoscalerCpuInitializationPeriod",
                "horizontalPodAutoscalerDownscaleDelay",
                "horizontalPodAutoscalerDownscaleStabilization",
                "horizontalPodAutoscalerInitialReadinessDelay",
                "horizontalPodAutoscalerSyncPeriod",
                "horizontalPodAutoscalerTolerance",
                "horizontalPodAutoscalerUpscaleDelay",
                "horizontalPodAutoscalerUseRestClients",
                "image",
                "kubeApiBurst",
                "kubeApiQps",
                "leaderElections",
                "logFormat",
                "logLevel",
                "master",
                "minResyncPeriod",
                "nodeCidrMaskSize",
                "nodeMonitorGracePeriod",
                "nodeMonitorPeriod",
                "podEvictionTimeout",
                "rootCaFile",
                "serviceAccountPrivateKeyFile",
                "terminatedPodGcThreshold",
                "tlsCertFile",
                "tlsCipherSuites",
                "tlsMinVersion",
                "tlsPrivateKeyFile",
                "useServiceAccountCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeControllerManagerLeaderElection:getClusterKubeControllerManagerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "leaderElect",
                "leaderElectLeaseDuration",
                "leaderElectRenewDeadlineDuration",
                "leaderElectResourceLock",
                "leaderElectResourceName",
                "leaderElectResourceNamespace",
                "leaderElectRetryPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDn:getClusterKubeDn": {
            "properties": {
                "affinities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinity:getClusterKubeDnAffinity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheMaxConcurrent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheMaxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "coreDnsImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpaImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalCoreFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLocalDns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnNodeLocalDn:getClusterKubeDnNodeLocalDn"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stubDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnStubDomain:getClusterKubeDnStubDomain"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnToleration:getClusterKubeDnToleration"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "upstreamNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "affinities",
                "cacheMaxConcurrent",
                "cacheMaxSize",
                "coreDnsImage",
                "cpaImage",
                "cpuRequest",
                "domain",
                "externalCoreFile",
                "memoryLimit",
                "memoryRequest",
                "nodeLocalDns",
                "provider",
                "serverIp",
                "stubDomains",
                "tolerations",
                "upstreamNameservers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinity:getClusterKubeDnAffinity": {
            "properties": {
                "nodeAffinities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinity:getClusterKubeDnAffinityNodeAffinity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAffinities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinity:getClusterKubeDnAffinityPodAffinity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAntiAffinities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinity:getClusterKubeDnAffinityPodAntiAffinity"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nodeAffinities",
                "podAffinities",
                "podAntiAffinities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinity:getClusterKubeDnAffinityNodeAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preferredDuringSchedulingIgnoredDuringExecutions",
                "requiredDuringSchedulingIgnoredDuringExecutions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "preferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preferences",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchFields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField:getClusterKubeDnAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchField": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "nodeSelectorTerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nodeSelectorTerms"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerm": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchFields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField:getClusterKubeDnAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermMatchField": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinity:getClusterKubeDnAffinityPodAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preferredDuringSchedulingIgnoredDuringExecutions",
                "requiredDuringSchedulingIgnoredDuringExecutions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "podAffinityTerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "podAffinityTerms",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": {
            "properties": {
                "labelSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "labelSelectors",
                "namespaceSelectors",
                "namespaces",
                "topologyKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "labelSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "labelSelectors",
                "namespaceSelectors",
                "namespaces",
                "topologyKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinity:getClusterKubeDnAffinityPodAntiAffinity": {
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "preferredDuringSchedulingIgnoredDuringExecutions",
                "requiredDuringSchedulingIgnoredDuringExecutions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "podAffinityTerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "podAffinityTerms",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": {
            "properties": {
                "labelSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "labelSelectors",
                "namespaceSelectors",
                "namespaces",
                "topologyKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution": {
            "properties": {
                "labelSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "labelSelectors",
                "namespaceSelectors",
                "namespaces",
                "topologyKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector": {
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchExpressions",
                "matchLabels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression:getClusterKubeDnAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpression": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnNodeLocalDn:getClusterKubeDnNodeLocalDn": {
            "properties": {
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardToKubeDns": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpuRequest",
                "enabled",
                "forwardToKubeDns",
                "image",
                "localIp",
                "memoryRequest",
                "podAnnotations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnStubDomain:getClusterKubeDnStubDomain": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeDnToleration:getClusterKubeDnToleration": {
            "properties": {
                "effect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tolerationSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "operator",
                "tolerationSeconds",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeProxy:getClusterKubeProxy": {
            "properties": {
                "bindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conntrackMaxPerCore": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conntrackMin": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsExcludeCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsMinSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsScheduler": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVsSyncPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsBindAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bindAddress",
                "clusterCidr",
                "conntrackMaxPerCore",
                "conntrackMin",
                "cpuLimit",
                "cpuRequest",
                "enabled",
                "featureGates",
                "hostnameOverride",
                "image",
                "ipVsExcludeCidrs",
                "ipVsMinSyncPeriod",
                "ipVsScheduler",
                "ipVsSyncPeriod",
                "logLevel",
                "master",
                "memoryLimit",
                "memoryRequest",
                "metricsBindAddress",
                "proxyMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeScheduler:getClusterKubeScheduler": {
            "properties": {
                "authenticationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationAlwaysAllowPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "burst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableProfiling": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterKubeSchedulerLeaderElection:getClusterKubeSchedulerLeaderElection"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "master": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPersistentVolumes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "qps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usePolicyConfigMap": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authenticationKubeconfig",
                "authorizationAlwaysAllowPaths",
                "authorizationKubeconfig",
                "burst",
                "enableProfiling",
                "featureGates",
                "image",
                "leaderElections",
                "logFormat",
                "logLevel",
                "master",
                "maxPersistentVolumes",
                "qps",
                "tlsCertFile",
                "tlsPrivateKeyFile",
                "usePolicyConfigMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeSchedulerLeaderElection:getClusterKubeSchedulerLeaderElection": {
            "properties": {
                "leaderElect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectLeaseDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRenewDeadlineDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceLock": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectResourceNamespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaderElectRetryPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "leaderElect",
                "leaderElectLeaseDuration",
                "leaderElectRenewDeadlineDuration",
                "leaderElectResourceLock",
                "leaderElectResourceName",
                "leaderElectResourceNamespace",
                "leaderElectRetryPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubelet:getClusterKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/getClusterKubeletAnonymousAuth:getClusterKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/getClusterKubeletCpuCfsQuota:getClusterKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowPrivileged",
                "allowedUnsafeSysctls",
                "apiServers",
                "authenticationTokenWebhook",
                "authenticationTokenWebhookCacheTtl",
                "authorizationMode",
                "babysitDaemons",
                "bootstrapKubeconfig",
                "cgroupDriver",
                "cgroupRoot",
                "clientCaFile",
                "cloudProvider",
                "clusterDns",
                "clusterDomain",
                "configureCbr0",
                "containerLogMaxFiles",
                "containerLogMaxSize",
                "cpuCfsQuotaPeriod",
                "cpuManagerPolicy",
                "dockerDisableSharedPid",
                "enableCadvisorJsonEndpoints",
                "enableCustomMetrics",
                "enableDebuggingHandlers",
                "enforceNodeAllocatable",
                "eventBurst",
                "eventQps",
                "evictionHard",
                "evictionMaxPodGracePeriod",
                "evictionMinimumReclaim",
                "evictionPressureTransitionPeriod",
                "evictionSoft",
                "evictionSoftGracePeriod",
                "experimentalAllowedUnsafeSysctls",
                "failSwapOn",
                "featureGates",
                "hairpinMode",
                "hostnameOverride",
                "housekeepingInterval",
                "imageGcHighThresholdPercent",
                "imageGcLowThresholdPercent",
                "imagePullProgressDeadline",
                "kernelMemcgNotification",
                "kubeReserved",
                "kubeReservedCgroup",
                "kubeconfigPath",
                "kubeletCgroups",
                "logFormat",
                "logLevel",
                "maxPods",
                "networkPluginMtu",
                "networkPluginName",
                "nodeLabels",
                "nodeStatusUpdateFrequency",
                "nonMasqueradeCidr",
                "nvidiaGpUs",
                "podCidr",
                "podInfraContainerImage",
                "podManifestPath",
                "podPidsLimit",
                "protectKernelDefaults",
                "readOnlyPort",
                "reconcileCidr",
                "registerNode",
                "registerSchedulable",
                "registryBurst",
                "registryPullQps",
                "requireKubeconfig",
                "resolverConfig",
                "rootDir",
                "rotateCertificates",
                "runtimeCgroups",
                "runtimeRequestTimeout",
                "seccompProfileRoot",
                "serializeImagePulls",
                "shutdownGracePeriod",
                "shutdownGracePeriodCriticalPods",
                "streamingConnectionIdleTimeout",
                "systemCgroups",
                "systemReserved",
                "systemReservedCgroup",
                "taints",
                "tlsCertFile",
                "tlsCipherSuites",
                "tlsMinVersion",
                "tlsPrivateKeyFile",
                "topologyManagerPolicy",
                "volumePluginDirectory",
                "volumeStatsAggPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeletAnonymousAuth:getClusterKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterKubeletCpuCfsQuota:getClusterKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterMasterKubelet:getClusterMasterKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/getClusterMasterKubeletAnonymousAuth:getClusterMasterKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/getClusterMasterKubeletCpuCfsQuota:getClusterMasterKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowPrivileged",
                "allowedUnsafeSysctls",
                "apiServers",
                "authenticationTokenWebhook",
                "authenticationTokenWebhookCacheTtl",
                "authorizationMode",
                "babysitDaemons",
                "bootstrapKubeconfig",
                "cgroupDriver",
                "cgroupRoot",
                "clientCaFile",
                "cloudProvider",
                "clusterDns",
                "clusterDomain",
                "configureCbr0",
                "containerLogMaxFiles",
                "containerLogMaxSize",
                "cpuCfsQuotaPeriod",
                "cpuManagerPolicy",
                "dockerDisableSharedPid",
                "enableCadvisorJsonEndpoints",
                "enableCustomMetrics",
                "enableDebuggingHandlers",
                "enforceNodeAllocatable",
                "eventBurst",
                "eventQps",
                "evictionHard",
                "evictionMaxPodGracePeriod",
                "evictionMinimumReclaim",
                "evictionPressureTransitionPeriod",
                "evictionSoft",
                "evictionSoftGracePeriod",
                "experimentalAllowedUnsafeSysctls",
                "failSwapOn",
                "featureGates",
                "hairpinMode",
                "hostnameOverride",
                "housekeepingInterval",
                "imageGcHighThresholdPercent",
                "imageGcLowThresholdPercent",
                "imagePullProgressDeadline",
                "kernelMemcgNotification",
                "kubeReserved",
                "kubeReservedCgroup",
                "kubeconfigPath",
                "kubeletCgroups",
                "logFormat",
                "logLevel",
                "maxPods",
                "networkPluginMtu",
                "networkPluginName",
                "nodeLabels",
                "nodeStatusUpdateFrequency",
                "nonMasqueradeCidr",
                "nvidiaGpUs",
                "podCidr",
                "podInfraContainerImage",
                "podManifestPath",
                "podPidsLimit",
                "protectKernelDefaults",
                "readOnlyPort",
                "reconcileCidr",
                "registerNode",
                "registerSchedulable",
                "registryBurst",
                "registryPullQps",
                "requireKubeconfig",
                "resolverConfig",
                "rootDir",
                "rotateCertificates",
                "runtimeCgroups",
                "runtimeRequestTimeout",
                "seccompProfileRoot",
                "serializeImagePulls",
                "shutdownGracePeriod",
                "shutdownGracePeriodCriticalPods",
                "streamingConnectionIdleTimeout",
                "systemCgroups",
                "systemReserved",
                "systemReservedCgroup",
                "taints",
                "tlsCertFile",
                "tlsCipherSuites",
                "tlsMinVersion",
                "tlsPrivateKeyFile",
                "topologyManagerPolicy",
                "volumePluginDirectory",
                "volumeStatsAggPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterMasterKubeletAnonymousAuth:getClusterMasterKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterMasterKubeletCpuCfsQuota:getClusterMasterKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterMetricsServer:getClusterMetricsServer": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "image",
                "insecure"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworking:getClusterNetworking": {
            "properties": {
                "amazonVpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingAmazonVpc:getClusterNetworkingAmazonVpc"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "calicos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingCalico:getClusterNetworkingCalico"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingCanal:getClusterNetworkingCanal"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cilias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingCilia:getClusterNetworkingCilia"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingClassic:getClusterNetworkingClassic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingCni:getClusterNetworkingCni"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingExternal:getClusterNetworkingExternal"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingFlannel:getClusterNetworkingFlannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingGce:getClusterNetworkingGce"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kopeios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingKopeio:getClusterNetworkingKopeio"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubenets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingKubenet:getClusterNetworkingKubenet"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kuberouters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingKuberouter:getClusterNetworkingKuberouter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lyftVpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingLyftVpc:getClusterNetworkingLyftVpc"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "romanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingRomana:getClusterNetworkingRomana"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weaves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingWeafe:getClusterNetworkingWeafe"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "amazonVpcs",
                "calicos",
                "canals",
                "cilias",
                "classics",
                "cnis",
                "externals",
                "flannels",
                "gces",
                "kopeios",
                "kubenets",
                "kuberouters",
                "lyftVpcs",
                "romanas",
                "weaves"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingAmazonVpc:getClusterNetworkingAmazonVpc": {
            "properties": {
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingAmazonVpcEnv:getClusterNetworkingAmazonVpcEnv"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "envs",
                "image",
                "initImage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingAmazonVpcEnv:getClusterNetworkingAmazonVpcEnv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingCalico:getClusterNetworkingCalico": {
            "properties": {
                "allowIpForwarding": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "awsSrcDstCheck": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfExternalServiceMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfKubeProxyIptablesCleanupEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfLogLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chainInsertMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crossSubnet": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encapsulationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipIpMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4AutoDetectionMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6AutoDetectionMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSeverityScreen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusGoMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusProcessMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaReplicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vxlanMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wireguardEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowIpForwarding",
                "awsSrcDstCheck",
                "bpfEnabled",
                "bpfExternalServiceMode",
                "bpfKubeProxyIptablesCleanupEnabled",
                "bpfLogLevel",
                "chainInsertMode",
                "cpuRequest",
                "crossSubnet",
                "encapsulationMode",
                "ipIpMode",
                "iptablesBackend",
                "ipv4AutoDetectionMethod",
                "ipv6AutoDetectionMethod",
                "logSeverityScreen",
                "mtu",
                "prometheusGoMetricsEnabled",
                "prometheusMetricsEnabled",
                "prometheusMetricsPort",
                "prometheusProcessMetricsEnabled",
                "registry",
                "typhaPrometheusMetricsEnabled",
                "typhaPrometheusMetricsPort",
                "typhaReplicas",
                "version",
                "vxlanMode",
                "wireguardEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingCanal:getClusterNetworkingCanal": {
            "properties": {
                "chainInsertMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultEndpointToHostAction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flanneldIptablesForwardRules": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesBackend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSeveritySys": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusGoMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheusProcessMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaPrometheusMetricsPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typhaReplicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "chainInsertMode",
                "cpuRequest",
                "defaultEndpointToHostAction",
                "flanneldIptablesForwardRules",
                "iptablesBackend",
                "logSeveritySys",
                "mtu",
                "prometheusGoMetricsEnabled",
                "prometheusMetricsEnabled",
                "prometheusMetricsPort",
                "prometheusProcessMetricsEnabled",
                "typhaPrometheusMetricsEnabled",
                "typhaPrometheusMetricsPort",
                "typhaReplicas"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingCilia:getClusterNetworkingCilia": {
            "properties": {
                "agentPodAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "agentPrometheusPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoDirectNodeRoutes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfNeighGlobalMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfPolicyMapMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfctGlobalAnyMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfctGlobalTcpMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbMaglevTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbMapMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpflbSockHostNsOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bpfnatGlobalMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chainingMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "debug": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableCnpStatusUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableEndpointCrd": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableBpfMasquerade": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableEncryption": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableEndpointHealthChecking": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableHostReachableServices": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableL7Proxy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableNodePort": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePrometheusMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRemoteNodeIdentity": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableServiceTopology": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdManaged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hubbles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNetworkingCiliaHubble:getClusterNetworkingCiliaHubble"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityAllocationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityChangeGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installIptablesRules": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipam": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masquerade": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocateBpfMaps": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sidecarIstioProxyImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toFqdnsDnsRejectResponseCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toFqdnsEnablePoller": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tunnel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "agentPodAnnotations",
                "agentPrometheusPort",
                "autoDirectNodeRoutes",
                "bpfNeighGlobalMax",
                "bpfPolicyMapMax",
                "bpfctGlobalAnyMax",
                "bpfctGlobalTcpMax",
                "bpflbAlgorithm",
                "bpflbMaglevTableSize",
                "bpflbMapMax",
                "bpflbSockHostNsOnly",
                "bpfnatGlobalMax",
                "chainingMode",
                "clusterName",
                "cpuRequest",
                "debug",
                "disableCnpStatusUpdates",
                "disableEndpointCrd",
                "enableBpfMasquerade",
                "enableEncryption",
                "enableEndpointHealthChecking",
                "enableHostReachableServices",
                "enableL7Proxy",
                "enableNodePort",
                "enablePolicy",
                "enablePrometheusMetrics",
                "enableRemoteNodeIdentity",
                "enableServiceTopology",
                "encryptionType",
                "etcdManaged",
                "hubbles",
                "identityAllocationMode",
                "identityChangeGracePeriod",
                "installIptablesRules",
                "ipam",
                "masquerade",
                "memoryRequest",
                "metrics",
                "monitorAggregation",
                "preallocateBpfMaps",
                "sidecarIstioProxyImage",
                "toFqdnsDnsRejectResponseCode",
                "toFqdnsEnablePoller",
                "tunnel",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingCiliaHubble:getClusterNetworkingCiliaHubble": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "metrics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingClassic:getClusterNetworkingClassic": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingCni:getClusterNetworkingCni": {
            "properties": {
                "usesSecondaryIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "usesSecondaryIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingExternal:getClusterNetworkingExternal": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingFlannel:getClusterNetworkingFlannel": {
            "properties": {
                "backend": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iptablesResyncSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backend",
                "iptablesResyncSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingGce:getClusterNetworkingGce": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingKopeio:getClusterNetworkingKopeio": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingKubenet:getClusterNetworkingKubenet": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingKuberouter:getClusterNetworkingKuberouter": {
            "type": "object"
        },
        "kops:index/getClusterNetworkingLyftVpc:getClusterNetworkingLyftVpc": {
            "properties": {
                "subnetTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "subnetTags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingRomana:getClusterNetworkingRomana": {
            "properties": {
                "daemonServiceIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etcdServiceIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "daemonServiceIp",
                "etcdServiceIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNetworkingWeafe:getClusterNetworkingWeafe": {
            "properties": {
                "connLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netExtraArgs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMasqLocal": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcCpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcCpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcExtraArgs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcMemoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "npcMemoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "connLimit",
                "cpuLimit",
                "cpuRequest",
                "memoryLimit",
                "memoryRequest",
                "mtu",
                "netExtraArgs",
                "noMasqLocal",
                "npcCpuLimit",
                "npcCpuRequest",
                "npcExtraArgs",
                "npcMemoryLimit",
                "npcMemoryRequest",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNodeAuthorization:getClusterNodeAuthorization": {
            "properties": {
                "nodeAuthorizers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterNodeAuthorizationNodeAuthorizer:getClusterNodeAuthorizationNodeAuthorizer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nodeAuthorizers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNodeAuthorizationNodeAuthorizer:getClusterNodeAuthorizationNodeAuthorizer": {
            "properties": {
                "authorizer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authorizer",
                "features",
                "image",
                "interval",
                "nodeUrl",
                "port",
                "timeout",
                "tokenTtl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNodeProblemDetector:getClusterNodeProblemDetector": {
            "properties": {
                "cpuLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpuLimit",
                "cpuRequest",
                "enabled",
                "image",
                "memoryLimit",
                "memoryRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNodeTerminationHandler:getClusterNodeTerminationHandler": {
            "properties": {
                "cpuRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePrometheusMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRebalanceDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableRebalanceMonitoring": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableScheduledEventDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSpotInterruptionDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSqsTerminationDraining": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeFromLoadBalancers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managedAsgTag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryRequest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpuRequest",
                "enablePrometheusMetrics",
                "enableRebalanceDraining",
                "enableRebalanceMonitoring",
                "enableScheduledEventDraining",
                "enableSpotInterruptionDraining",
                "enableSqsTerminationDraining",
                "enabled",
                "excludeFromLoadBalancers",
                "managedAsgTag",
                "memoryRequest",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterNtp:getClusterNtp": {
            "properties": {
                "managed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "managed"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterPodIdentityWebhook:getClusterPodIdentityWebhook": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicas": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "replicas"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterRollingUpdate:getClusterRollingUpdate": {
            "properties": {
                "drainAndTerminate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSurge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "drainAndTerminate",
                "maxSurge",
                "maxUnavailable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterSecret:getClusterSecret": {
            "properties": {
                "clusterCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCaKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterCaCert",
                "clusterCaKey",
                "dockerConfig"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterServiceAccountIssuerDiscovery:getClusterServiceAccountIssuerDiscovery": {
            "properties": {
                "additionalAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "discoveryStore": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableAwsOidcProvider": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalAudiences",
                "discoveryStore",
                "enableAwsOidcProvider"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterSnapshotController:getClusterSnapshotController": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "installDefaultClass": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "installDefaultClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterSubnet:getClusterSubnet": {
            "properties": {
                "additionalRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterSubnetAdditionalRoute:getClusterSubnetAdditionalRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "egress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the cluster name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "providerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalRoutes",
                "cidr",
                "egress",
                "ipv6Cidr",
                "name",
                "providerId",
                "publicIp",
                "region",
                "type",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterSubnetAdditionalRoute:getClusterSubnetAdditionalRoute": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterTagSubnets:getClusterTagSubnets": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterTopology:getClusterTopology": {
            "properties": {
                "bastions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterTopologyBastion:getClusterTopologyBastion"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterTopologyDn:getClusterTopologyDn"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masters": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bastions",
                "dns",
                "masters",
                "nodes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterTopologyBastion:getClusterTopologyBastion": {
            "properties": {
                "bastionPublicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getClusterTopologyBastionLoadBalancer:getClusterTopologyBastionLoadBalancer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bastionPublicName",
                "idleTimeoutSeconds",
                "loadBalancers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterTopologyBastionLoadBalancer:getClusterTopologyBastionLoadBalancer": {
            "properties": {
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalSecurityGroups",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterTopologyDn:getClusterTopologyDn": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getClusterWarmPool:getClusterWarmPool": {
            "properties": {
                "enableLifecycleHook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableLifecycleHook",
                "maxSize",
                "minSize"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupAdditionalUserData:getInstanceGroupAdditionalUserData": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerd:getInstanceGroupContainerd": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupContainerdNvidiaGpus:getInstanceGroupContainerdNvidiaGpus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupContainerdPackage:getInstanceGroupContainerdPackage"
                    },
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupContainerdRegistryMirror:getInstanceGroupContainerdRegistryMirror"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "root": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupContainerdRunc:getInstanceGroupContainerdRunc"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipInstall": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "configOverride",
                "logLevel",
                "nvidiaGpus",
                "packages",
                "registryMirrors",
                "root",
                "runcs",
                "skipInstall",
                "state",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerdNvidiaGpus:getInstanceGroupContainerdNvidiaGpus": {
            "properties": {
                "driverPackage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "driverPackage",
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerdPackage:getInstanceGroupContainerdPackage": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hashAmd64",
                "hashArm64",
                "urlAmd64",
                "urlArm64"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerdRegistryMirror:getInstanceGroupContainerdRegistryMirror": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerdRunc:getInstanceGroupContainerdRunc": {
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupContainerdRuncPackage:getInstanceGroupContainerdRuncPackage"
                    },
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "packages",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupContainerdRuncPackage:getInstanceGroupContainerdRuncPackage": {
            "properties": {
                "hashAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hashArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlAmd64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlArm64": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hashAmd64",
                "hashArm64",
                "urlAmd64",
                "urlArm64"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupExternalLoadBalancer:getInstanceGroupExternalLoadBalancer": {
            "properties": {
                "loadBalancerName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetGroupArn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "loadBalancerName",
                "targetGroupArn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupFileAsset:getInstanceGroupFileAsset": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isBase64": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "isBase64",
                "mode",
                "name",
                "path",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupGuestAccelerator:getInstanceGroupGuestAccelerator": {
            "properties": {
                "acceleratorCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "acceleratorType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "acceleratorCount",
                "acceleratorType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupHook:getInstanceGroupHook": {
            "properties": {
                "befores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "execContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupHookExecContainer:getInstanceGroupHookExecContainer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manifest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "- String - Name defines the instance group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useRawManifest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "befores",
                "enabled",
                "execContainers",
                "manifest",
                "name",
                "requires",
                "roles",
                "useRawManifest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupHookExecContainer:getInstanceGroupHookExecContainer": {
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "description": "- String - Image is the instance (ami etc) we should use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commands",
                "environment",
                "image"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupIam:getInstanceGroupIam": {
            "properties": {
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupInstanceMetadata:getInstanceGroupInstanceMetadata": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpTokens": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "httpPutResponseHopLimit",
                "httpTokens"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupKubelet:getInstanceGroupKubelet": {
            "properties": {
                "allowPrivileged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "anonymousAuth": {
                    "$ref": "#/types/kops:index/getInstanceGroupKubeletAnonymousAuth:getInstanceGroupKubeletAnonymousAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationTokenWebhookCacheTtl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "babysitDaemons": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bootstrapKubeconfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupDriver": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cgroupRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCaFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudProvider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configureCbr0": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxFiles": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuota": {
                    "$ref": "#/types/kops:index/getInstanceGroupKubeletCpuCfsQuota:getInstanceGroupKubeletCpuCfsQuota",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCfsQuotaPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerDisableSharedPid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCadvisorJsonEndpoints": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDebuggingHandlers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforceNodeAllocatable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionHard": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMaxPodGracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionMinimumReclaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionPressureTransitionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoft": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evictionSoftGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "experimentalAllowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failSwapOn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "featureGates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hairpinMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostnameOverride": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "housekeepingInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcHighThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageGcLowThresholdPercent": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagePullProgressDeadline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernelMemcgNotification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeconfigPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeletCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLevel": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginMtu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkPluginName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeStatusUpdateFrequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvidiaGpUs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podCidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podInfraContainerImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podManifestPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podPidsLimit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectKernelDefaults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnlyPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reconcileCidr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerNode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registerSchedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryBurst": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryPullQps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireKubeconfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolverConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotateCertificates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runtimeRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "seccompProfileRoot": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serializeImagePulls": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdownGracePeriodCriticalPods": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamingConnectionIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemCgroups": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReserved": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "systemReservedCgroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Taints indicates the kubernetes taints for nodes in this instance group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCertFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsMinVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPrivateKeyFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topologyManagerPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumePluginDirectory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeStatsAggPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowPrivileged",
                "allowedUnsafeSysctls",
                "apiServers",
                "authenticationTokenWebhook",
                "authenticationTokenWebhookCacheTtl",
                "authorizationMode",
                "babysitDaemons",
                "bootstrapKubeconfig",
                "cgroupDriver",
                "cgroupRoot",
                "clientCaFile",
                "cloudProvider",
                "clusterDns",
                "clusterDomain",
                "configureCbr0",
                "containerLogMaxFiles",
                "containerLogMaxSize",
                "cpuCfsQuotaPeriod",
                "cpuManagerPolicy",
                "dockerDisableSharedPid",
                "enableCadvisorJsonEndpoints",
                "enableCustomMetrics",
                "enableDebuggingHandlers",
                "enforceNodeAllocatable",
                "eventBurst",
                "eventQps",
                "evictionHard",
                "evictionMaxPodGracePeriod",
                "evictionMinimumReclaim",
                "evictionPressureTransitionPeriod",
                "evictionSoft",
                "evictionSoftGracePeriod",
                "experimentalAllowedUnsafeSysctls",
                "failSwapOn",
                "featureGates",
                "hairpinMode",
                "hostnameOverride",
                "housekeepingInterval",
                "imageGcHighThresholdPercent",
                "imageGcLowThresholdPercent",
                "imagePullProgressDeadline",
                "kernelMemcgNotification",
                "kubeReserved",
                "kubeReservedCgroup",
                "kubeconfigPath",
                "kubeletCgroups",
                "logFormat",
                "logLevel",
                "maxPods",
                "networkPluginMtu",
                "networkPluginName",
                "nodeLabels",
                "nodeStatusUpdateFrequency",
                "nonMasqueradeCidr",
                "nvidiaGpUs",
                "podCidr",
                "podInfraContainerImage",
                "podManifestPath",
                "podPidsLimit",
                "protectKernelDefaults",
                "readOnlyPort",
                "reconcileCidr",
                "registerNode",
                "registerSchedulable",
                "registryBurst",
                "registryPullQps",
                "requireKubeconfig",
                "resolverConfig",
                "rootDir",
                "rotateCertificates",
                "runtimeCgroups",
                "runtimeRequestTimeout",
                "seccompProfileRoot",
                "serializeImagePulls",
                "shutdownGracePeriod",
                "shutdownGracePeriodCriticalPods",
                "streamingConnectionIdleTimeout",
                "systemCgroups",
                "systemReserved",
                "systemReservedCgroup",
                "taints",
                "tlsCertFile",
                "tlsCipherSuites",
                "tlsMinVersion",
                "tlsPrivateKeyFile",
                "topologyManagerPolicy",
                "volumePluginDirectory",
                "volumeStatsAggPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupKubeletAnonymousAuth:getInstanceGroupKubeletAnonymousAuth": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupKubeletCpuCfsQuota:getInstanceGroupKubeletCpuCfsQuota": {
            "properties": {
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicy:getInstanceGroupMixedInstancesPolicy": {
            "properties": {
                "instanceRequirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirement:getInstanceGroupMixedInstancesPolicyInstanceRequirement"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandAboveBase": {
                    "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicyOnDemandAboveBase:getInstanceGroupMixedInstancesPolicyOnDemandAboveBase",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandAllocationStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onDemandBase": {
                    "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicyOnDemandBase:getInstanceGroupMixedInstancesPolicyOnDemandBase",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotAllocationStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotInstancePools": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceRequirements",
                "instances",
                "onDemandAllocationStrategy",
                "spotAllocationStrategy",
                "spotInstancePools"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirement:getInstanceGroupMixedInstancesPolicyInstanceRequirement": {
            "properties": {
                "cpus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirementCpus:getInstanceGroupMixedInstancesPolicyInstanceRequirementCpus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirementMemory:getInstanceGroupMixedInstancesPolicyInstanceRequirementMemory"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpus",
                "memories"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirementCpus:getInstanceGroupMixedInstancesPolicyInstanceRequirementCpus": {
            "properties": {
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "max",
                "min"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicyInstanceRequirementMemory:getInstanceGroupMixedInstancesPolicyInstanceRequirementMemory": {
            "properties": {
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "max",
                "min"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicyOnDemandAboveBase:getInstanceGroupMixedInstancesPolicyOnDemandAboveBase": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupMixedInstancesPolicyOnDemandBase:getInstanceGroupMixedInstancesPolicyOnDemandBase": {
            "properties": {
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupRollingUpdate:getInstanceGroupRollingUpdate": {
            "properties": {
                "drainAndTerminate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSurge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "drainAndTerminate",
                "maxSurge",
                "maxUnavailable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupVolume:getInstanceGroupVolume": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encrypted": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "throughput": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deleteOnTermination",
                "device",
                "encrypted",
                "iops",
                "key",
                "size",
                "throughput",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupVolumeMount:getInstanceGroupVolumeMount": {
            "properties": {
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formatOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mountOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "device",
                "filesystem",
                "formatOptions",
                "mountOptions",
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "kops:index/getInstanceGroupWarmPool:getInstanceGroupWarmPool": {
            "properties": {
                "enableLifecycleHook": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "- Int - MaxSize is the maximum size of the pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minSize": {
                    "type": "integer",
                    "description": "- Int - MinSize is the minimum size of the pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enableLifecycleHook",
                "maxSize",
                "minSize"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the kops package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "aws": {
                "$ref": "#/types/kops:index/ProviderAws:ProviderAws"
            },
            "featureFlags": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "klog": {
                "$ref": "#/types/kops:index/ProviderKlog:ProviderKlog"
            },
            "mock": {
                "type": "boolean"
            },
            "openstack": {
                "$ref": "#/types/kops:index/ProviderOpenstack:ProviderOpenstack"
            },
            "stateStore": {
                "type": "string"
            }
        },
        "required": [
            "stateStore"
        ],
        "inputProperties": {
            "aws": {
                "$ref": "#/types/kops:index/ProviderAws:ProviderAws"
            },
            "featureFlags": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "klog": {
                "$ref": "#/types/kops:index/ProviderKlog:ProviderKlog"
            },
            "mock": {
                "type": "boolean"
            },
            "openstack": {
                "$ref": "#/types/kops:index/ProviderOpenstack:ProviderOpenstack"
            },
            "stateStore": {
                "type": "string"
            }
        },
        "requiredInputs": [
            "stateStore"
        ]
    },
    "resources": {
        "kops:index/cluster:Cluster": {
            "description": "\n\n\n## Import\n\nYou can import an existing cluster by creating a `kops_cluster` configuration\n\n```sh\n $ pulumi import kops:index/cluster:Cluster and running the `terraform import` command\n```\n\n 1. Create a terraform configuration:\n\n\n\n hcl\n\n\n\n provider \"kops\" {\n\n\n\n\n\n state_store = \"s3://cluster.example.com\"\n\n\n\n }\n\n\n\n resource \"kops_cluster\" \"cluster\" {\n\n\n\n\n\n name\n\n\n\n\n\n\n\n= \"cluster.example.com\"\n\n\n\n\n\n // ....\n\n\n\n }\n\n```sh\n $ pulumi import kops:index/cluster:Cluster\n\nRun `terraform import`\n```\n\n\n\n```sh\n $ pulumi import kops:index/cluster:Cluster kops_cluster.cluster cluster.example.com\n```\n\n ",
            "properties": {
                "additionalNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalNetworkCIDRs is a list of additional CIDR used for the AWS VPC\u003cbr /\u003eor otherwise allocated to k8s. This is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to any additional CIDRs added to a VPC.\n"
                },
                "additionalPolicies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Additional policies to add for roles.\n"
                },
                "additionalSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalSANs adds additional Subject Alternate Names to apiserver cert that kops generates.\n"
                },
                "addons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterAddon:ClusterAddon"
                    },
                    "description": "- List(addon_spec) - Additional addons that should be installed on the cluster.\n"
                },
                "adminSshKey": {
                    "type": "string",
                    "description": "- (Sensitive) - String - AdminSshKey defines the cluster admin ssh key.\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                },
                "api": {
                    "$ref": "#/types/kops:index/ClusterApi:ClusterApi",
                    "description": "- access_spec - API field controls how the API is exposed outside the cluster.\n"
                },
                "assets": {
                    "$ref": "#/types/kops:index/ClusterAssets:ClusterAssets",
                    "description": "- assets - Assets is alternative locations for files and containers; the API under construction, will remove this comment once this API is fully functional.\n"
                },
                "authentication": {
                    "$ref": "#/types/kops:index/ClusterAuthentication:ClusterAuthentication",
                    "description": "- authentication_spec - Authentication field controls how the cluster is configured for authentication.\n"
                },
                "authorization": {
                    "$ref": "#/types/kops:index/ClusterAuthorization:ClusterAuthorization",
                    "description": "- authorization_spec - Authorization field controls how the cluster is configured for authorization.\n"
                },
                "awsLoadBalancerController": {
                    "$ref": "#/types/kops:index/ClusterAwsLoadBalancerController:ClusterAwsLoadBalancerController",
                    "description": "- aws_load_balancer_controller_config - AWSLoadbalancerControllerConfig determines the AWS LB controller configuration.\n"
                },
                "certManager": {
                    "$ref": "#/types/kops:index/ClusterCertManager:ClusterCertManager",
                    "description": "- cert_manager_config - CertManager determines the metrics server configuration.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "- String - The Channel we are following.\n"
                },
                "cloudConfig": {
                    "$ref": "#/types/kops:index/ClusterCloudConfig:ClusterCloudConfig",
                    "description": "- cloud_configuration\n"
                },
                "cloudLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                },
                "cloudProvider": {
                    "$ref": "#/types/kops:index/ClusterCloudProvider:ClusterCloudProvider",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n"
                },
                "clusterAutoscaler": {
                    "$ref": "#/types/kops:index/ClusterClusterAutoscaler:ClusterClusterAutoscaler",
                    "description": "- cluster_autoscaler_config - ClusterAutoscaler defines the cluster autoscaler configuration.\n"
                },
                "clusterDnsDomain": {
                    "type": "string",
                    "description": "- String - ClusterDNSDomain is the suffix we use for internal DNS names (normally cluster.local).\n"
                },
                "configBase": {
                    "type": "string",
                    "description": "- (Computed) - String - ConfigBase is the path where we store configuration for the cluster\u003cbr /\u003eThis might be different than the location where the cluster spec itself is stored,\u003cbr /\u003eboth because this must be accessible to the cluster,\u003cbr /\u003eand because it might be on a different cloud or storage system (etcd vs S3).\n"
                },
                "configStore": {
                    "type": "string",
                    "description": "- String - ConfigStore is the VFS path to where the configuration (Cluster, InstanceGroups etc) is stored.\n"
                },
                "containerRuntime": {
                    "type": "string",
                    "description": "- String - Container runtime to use for Kubernetes.\n"
                },
                "containerd": {
                    "$ref": "#/types/kops:index/ClusterContainerd:ClusterContainerd",
                    "description": "- containerd_config - Component configurations.\n"
                },
                "dnsZone": {
                    "type": "string",
                    "description": "- String - DNSZone is the DNS zone we should use when configuring DNS\u003cbr /\u003eThis is because some clouds let us define a managed zone foo.bar, and then have\u003cbr /\u003ekubernetes.dev.foo.bar, without needing to define dev.foo.bar as a hosted zone.\u003cbr /\u003eDNSZone will probably be a suffix of the MasterPublicName and MasterInternalName\u003cbr /\u003eNote that DNSZone can either by the host name of the zone (containing dots),\u003cbr /\u003eor can be an identifier for the zone.\n"
                },
                "docker": {
                    "$ref": "#/types/kops:index/ClusterDocker:ClusterDocker",
                    "description": "- docker_config\n"
                },
                "egressProxy": {
                    "$ref": "#/types/kops:index/ClusterEgressProxy:ClusterEgressProxy",
                    "description": "- egress_proxy_spec - HTTPProxy defines connection information to support use of a private cluster behind an forward HTTP Proxy.\n"
                },
                "encryptionConfig": {
                    "type": "boolean",
                    "description": "- Bool - EncryptionConfig controls if encryption is enabled.\n"
                },
                "etcdClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterEtcdCluster:ClusterEtcdCluster"
                    },
                    "description": "- List(etcd_cluster_spec) - EtcdClusters stores the configuration for each cluster.\n"
                },
                "externalCloudControllerManager": {
                    "$ref": "#/types/kops:index/ClusterExternalCloudControllerManager:ClusterExternalCloudControllerManager",
                    "description": "- cloud_controller_manager_config\n"
                },
                "externalDns": {
                    "$ref": "#/types/kops:index/ClusterExternalDns:ClusterExternalDns",
                    "description": "- external_dns_config\n"
                },
                "externalPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterExternalPolicy:ClusterExternalPolicy"
                    },
                    "description": "- Map(List(String)) - ExternalPolicies allows the insertion of pre-existing managed policies on IG Roles.\n"
                },
                "fileAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterFileAsset:ClusterFileAsset"
                    },
                    "description": "- List(file_asset_spec) - A collection of files assets for deployed cluster wide.\n"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterHook:ClusterHook"
                    },
                    "description": "- List(hook_spec) - Hooks for custom actions e.g. on first installation.\n"
                },
                "iam": {
                    "$ref": "#/types/kops:index/ClusterIam:ClusterIam",
                    "description": "- (Computed) - iam_spec - IAM field adds control over the IAM security policies applied to resources.\n"
                },
                "isolateMasters": {
                    "type": "boolean",
                    "description": "- Bool - IsolateMasters determines whether we should lock down masters so that they are not on the pod network.\u003cbr /\u003etrue is the kube-up behaviour, but it is very surprising: it means that daemonsets only work on the master\u003cbr /\u003eif they have hostNetwork=true.\u003cbr /\u003efalse is now the default, and it will:\u003cbr /\u003e * give the master a normal PodCIDR\u003cbr /\u003e * run kube-proxy on the master\u003cbr /\u003e * enable debugging handlers on the master, so kubectl logs works.\n"
                },
                "karpenter": {
                    "$ref": "#/types/kops:index/ClusterKarpenter:ClusterKarpenter",
                    "description": "- karpenter_config - Karpenter defines the Karpenter configuration.\n"
                },
                "keyStore": {
                    "type": "string",
                    "description": "- String - KeyStore is the VFS path to where SSL keys and certificates are stored.\n"
                },
                "kubeApiServer": {
                    "$ref": "#/types/kops:index/ClusterKubeApiServer:ClusterKubeApiServer",
                    "description": "- kube_api_server_config\n"
                },
                "kubeControllerManager": {
                    "$ref": "#/types/kops:index/ClusterKubeControllerManager:ClusterKubeControllerManager",
                    "description": "- kube_controller_manager_config\n"
                },
                "kubeDns": {
                    "$ref": "#/types/kops:index/ClusterKubeDns:ClusterKubeDns",
                    "description": "- kube_dns_config\n"
                },
                "kubeProxy": {
                    "$ref": "#/types/kops:index/ClusterKubeProxy:ClusterKubeProxy",
                    "description": "- kube_proxy_config\n"
                },
                "kubeScheduler": {
                    "$ref": "#/types/kops:index/ClusterKubeScheduler:ClusterKubeScheduler",
                    "description": "- kube_scheduler_config\n"
                },
                "kubelet": {
                    "$ref": "#/types/kops:index/ClusterKubelet:ClusterKubelet",
                    "description": "- kubelet_config_spec - Kubelet is the kubelet configuration for nodes not belonging to the control plane.\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                },
                "kubernetesApiAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - KubernetesAPIAccess is a list of the CIDRs that can access the Kubernetes API endpoint (master HTTPS).\n"
                },
                "kubernetesVersion": {
                    "type": "string",
                    "description": "- String - The version of kubernetes to install (optional, and can be a \"spec\" like stable).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                },
                "masterInternalName": {
                    "type": "string",
                    "description": "- (Computed) - String - MasterInternalName is the internal DNS name for the master nodes.\n"
                },
                "masterKubelet": {
                    "$ref": "#/types/kops:index/ClusterMasterKubelet:ClusterMasterKubelet",
                    "description": "- kubelet_config_spec - MasterKubelet is the kubelet configuration for nodes belonging to the control plane\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                },
                "masterPublicName": {
                    "type": "string",
                    "description": "- (Computed) - String - MasterPublicName is the external DNS name for the master nodes.\n"
                },
                "metricsServer": {
                    "$ref": "#/types/kops:index/ClusterMetricsServer:ClusterMetricsServer",
                    "description": "- metrics_server_config - MetricsServer determines the metrics server configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NetworkCIDR is the CIDR used for the AWS VPC / DO/ GCE Network, or otherwise allocated to k8s\u003cbr /\u003eThis is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to the VPC CIDR.  It is not required on GCE.\u003cbr /\u003eOn DO, it maps to the VPC CIDR.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "- String - NetworkID is an identifier of a network, if we want to reuse/share an existing network (e.g. an AWS VPC).\n"
                },
                "networking": {
                    "$ref": "#/types/kops:index/ClusterNetworking:ClusterNetworking",
                    "description": "- networking_spec - Networking configuration.\n"
                },
                "nodeAuthorization": {
                    "$ref": "#/types/kops:index/ClusterNodeAuthorization:ClusterNodeAuthorization",
                    "description": "- node_authorization_spec - NodeAuthorization defined the custom node authorization configuration.\n"
                },
                "nodePortAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - NodePortAccess is a list of the CIDRs that can access the node ports range (30000-32767).\n"
                },
                "nodeProblemDetector": {
                    "$ref": "#/types/kops:index/ClusterNodeProblemDetector:ClusterNodeProblemDetector",
                    "description": "- node_problem_detector_config - NodeProblemDetector determines the node problem detector configuration.\n"
                },
                "nodeTerminationHandler": {
                    "$ref": "#/types/kops:index/ClusterNodeTerminationHandler:ClusterNodeTerminationHandler",
                    "description": "- node_termination_handler_config - NodeTerminationHandler determines the node termination handler configuration.\n"
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n"
                },
                "ntp": {
                    "$ref": "#/types/kops:index/ClusterNtp:ClusterNtp",
                    "description": "- ntp_config\n"
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n"
                },
                "podIdentityWebhook": {
                    "$ref": "#/types/kops:index/ClusterPodIdentityWebhook:ClusterPodIdentityWebhook",
                    "description": "- pod_identity_webhook_config - PodIdentityWebhook determines the EKS Pod Identity Webhook configuration.\n"
                },
                "project": {
                    "type": "string",
                    "description": "- String - Project is the cloud project we should use, required on GCE.\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/ClusterRollingUpdate:ClusterRollingUpdate",
                    "description": "- rolling_update - RollingUpdate defines the default rolling-update settings for instance groups.\n"
                },
                "secretStore": {
                    "type": "string",
                    "description": "- String - SecretStore is the VFS path to where secrets are stored.\n"
                },
                "secrets": {
                    "$ref": "#/types/kops:index/ClusterSecrets:ClusterSecrets",
                    "description": "- cluster_secrets - Secrets defines the cluster secret.\n"
                },
                "serviceAccountIssuerDiscovery": {
                    "$ref": "#/types/kops:index/ClusterServiceAccountIssuerDiscovery:ClusterServiceAccountIssuerDiscovery",
                    "description": "- service_account_issuer_discovery_config - ServiceAccountIssuerDiscovery configures the OIDC Issuer for ServiceAccounts.\n"
                },
                "serviceClusterIpRange": {
                    "type": "string",
                    "description": "- String - ServiceClusterIPRange is the CIDR, from the internal network, where we allocate IPs for services.\n"
                },
                "snapshotController": {
                    "$ref": "#/types/kops:index/ClusterSnapshotController:ClusterSnapshotController",
                    "description": "- snapshot_controller_config - SnapshotController defines the CSI Snapshot Controller configuration.\n"
                },
                "sshAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SSHAccess is a list of the CIDRs that can access SSH.\n"
                },
                "sshKeyName": {
                    "type": "string",
                    "description": "- String - SSHKeyName specifies a preexisting SSH key to use.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterSubnet:ClusterSubnet"
                    },
                    "description": "- List(cluster_subnet_spec) - Configuration of subnets we are targeting.\n"
                },
                "sysctlParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                },
                "tagSubnets": {
                    "$ref": "#/types/kops:index/ClusterTagSubnets:ClusterTagSubnets",
                    "description": "- Bool(Nullable) - TagSubnets controls if tags are added to subnets to enable use by load balancers (AWS only). Default: true.\n"
                },
                "topology": {
                    "$ref": "#/types/kops:index/ClusterTopology:ClusterTopology",
                    "description": "- topology_spec - Topology defines the type of network topology to use on the cluster - default public\u003cbr /\u003eThis is heavily weighted towards AWS for the time being, but should also be agnostic enough\u003cbr /\u003eto port out to GCE later if needed.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                },
                "useHostCertificates": {
                    "type": "boolean",
                    "description": "- Bool - UseHostCertificates will mount /etc/ssl/certs to inside needed containers.\u003cbr /\u003eThis is needed if some APIs do have self-signed certs.\n"
                },
                "warmPool": {
                    "$ref": "#/types/kops:index/ClusterWarmPool:ClusterWarmPool",
                    "description": "- warm_pool_spec - WarmPool defines the default warm pool settings for instance groups (AWS only).\n"
                }
            },
            "required": [
                "cloudProvider",
                "configBase",
                "etcdClusters",
                "iam",
                "masterInternalName",
                "masterPublicName",
                "name",
                "networkCidr",
                "networkId",
                "networking",
                "nonMasqueradeCidr",
                "revision",
                "subnets",
                "topology"
            ],
            "inputProperties": {
                "additionalNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalNetworkCIDRs is a list of additional CIDR used for the AWS VPC\u003cbr /\u003eor otherwise allocated to k8s. This is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to any additional CIDRs added to a VPC.\n"
                },
                "additionalPolicies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Additional policies to add for roles.\n"
                },
                "additionalSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalSANs adds additional Subject Alternate Names to apiserver cert that kops generates.\n"
                },
                "addons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterAddon:ClusterAddon"
                    },
                    "description": "- List(addon_spec) - Additional addons that should be installed on the cluster.\n"
                },
                "adminSshKey": {
                    "type": "string",
                    "description": "- (Sensitive) - String - AdminSshKey defines the cluster admin ssh key.\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                },
                "api": {
                    "$ref": "#/types/kops:index/ClusterApi:ClusterApi",
                    "description": "- access_spec - API field controls how the API is exposed outside the cluster.\n"
                },
                "assets": {
                    "$ref": "#/types/kops:index/ClusterAssets:ClusterAssets",
                    "description": "- assets - Assets is alternative locations for files and containers; the API under construction, will remove this comment once this API is fully functional.\n"
                },
                "authentication": {
                    "$ref": "#/types/kops:index/ClusterAuthentication:ClusterAuthentication",
                    "description": "- authentication_spec - Authentication field controls how the cluster is configured for authentication.\n"
                },
                "authorization": {
                    "$ref": "#/types/kops:index/ClusterAuthorization:ClusterAuthorization",
                    "description": "- authorization_spec - Authorization field controls how the cluster is configured for authorization.\n"
                },
                "awsLoadBalancerController": {
                    "$ref": "#/types/kops:index/ClusterAwsLoadBalancerController:ClusterAwsLoadBalancerController",
                    "description": "- aws_load_balancer_controller_config - AWSLoadbalancerControllerConfig determines the AWS LB controller configuration.\n"
                },
                "certManager": {
                    "$ref": "#/types/kops:index/ClusterCertManager:ClusterCertManager",
                    "description": "- cert_manager_config - CertManager determines the metrics server configuration.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "- String - The Channel we are following.\n"
                },
                "cloudConfig": {
                    "$ref": "#/types/kops:index/ClusterCloudConfig:ClusterCloudConfig",
                    "description": "- cloud_configuration\n"
                },
                "cloudLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                },
                "cloudProvider": {
                    "$ref": "#/types/kops:index/ClusterCloudProvider:ClusterCloudProvider",
                    "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n"
                },
                "clusterAutoscaler": {
                    "$ref": "#/types/kops:index/ClusterClusterAutoscaler:ClusterClusterAutoscaler",
                    "description": "- cluster_autoscaler_config - ClusterAutoscaler defines the cluster autoscaler configuration.\n"
                },
                "clusterDnsDomain": {
                    "type": "string",
                    "description": "- String - ClusterDNSDomain is the suffix we use for internal DNS names (normally cluster.local).\n"
                },
                "configBase": {
                    "type": "string",
                    "description": "- (Computed) - String - ConfigBase is the path where we store configuration for the cluster\u003cbr /\u003eThis might be different than the location where the cluster spec itself is stored,\u003cbr /\u003eboth because this must be accessible to the cluster,\u003cbr /\u003eand because it might be on a different cloud or storage system (etcd vs S3).\n"
                },
                "configStore": {
                    "type": "string",
                    "description": "- String - ConfigStore is the VFS path to where the configuration (Cluster, InstanceGroups etc) is stored.\n"
                },
                "containerRuntime": {
                    "type": "string",
                    "description": "- String - Container runtime to use for Kubernetes.\n"
                },
                "containerd": {
                    "$ref": "#/types/kops:index/ClusterContainerd:ClusterContainerd",
                    "description": "- containerd_config - Component configurations.\n"
                },
                "dnsZone": {
                    "type": "string",
                    "description": "- String - DNSZone is the DNS zone we should use when configuring DNS\u003cbr /\u003eThis is because some clouds let us define a managed zone foo.bar, and then have\u003cbr /\u003ekubernetes.dev.foo.bar, without needing to define dev.foo.bar as a hosted zone.\u003cbr /\u003eDNSZone will probably be a suffix of the MasterPublicName and MasterInternalName\u003cbr /\u003eNote that DNSZone can either by the host name of the zone (containing dots),\u003cbr /\u003eor can be an identifier for the zone.\n"
                },
                "docker": {
                    "$ref": "#/types/kops:index/ClusterDocker:ClusterDocker",
                    "description": "- docker_config\n"
                },
                "egressProxy": {
                    "$ref": "#/types/kops:index/ClusterEgressProxy:ClusterEgressProxy",
                    "description": "- egress_proxy_spec - HTTPProxy defines connection information to support use of a private cluster behind an forward HTTP Proxy.\n"
                },
                "encryptionConfig": {
                    "type": "boolean",
                    "description": "- Bool - EncryptionConfig controls if encryption is enabled.\n"
                },
                "etcdClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterEtcdCluster:ClusterEtcdCluster"
                    },
                    "description": "- List(etcd_cluster_spec) - EtcdClusters stores the configuration for each cluster.\n"
                },
                "externalCloudControllerManager": {
                    "$ref": "#/types/kops:index/ClusterExternalCloudControllerManager:ClusterExternalCloudControllerManager",
                    "description": "- cloud_controller_manager_config\n"
                },
                "externalDns": {
                    "$ref": "#/types/kops:index/ClusterExternalDns:ClusterExternalDns",
                    "description": "- external_dns_config\n"
                },
                "externalPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterExternalPolicy:ClusterExternalPolicy"
                    },
                    "description": "- Map(List(String)) - ExternalPolicies allows the insertion of pre-existing managed policies on IG Roles.\n"
                },
                "fileAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterFileAsset:ClusterFileAsset"
                    },
                    "description": "- List(file_asset_spec) - A collection of files assets for deployed cluster wide.\n"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterHook:ClusterHook"
                    },
                    "description": "- List(hook_spec) - Hooks for custom actions e.g. on first installation.\n"
                },
                "iam": {
                    "$ref": "#/types/kops:index/ClusterIam:ClusterIam",
                    "description": "- (Computed) - iam_spec - IAM field adds control over the IAM security policies applied to resources.\n"
                },
                "isolateMasters": {
                    "type": "boolean",
                    "description": "- Bool - IsolateMasters determines whether we should lock down masters so that they are not on the pod network.\u003cbr /\u003etrue is the kube-up behaviour, but it is very surprising: it means that daemonsets only work on the master\u003cbr /\u003eif they have hostNetwork=true.\u003cbr /\u003efalse is now the default, and it will:\u003cbr /\u003e * give the master a normal PodCIDR\u003cbr /\u003e * run kube-proxy on the master\u003cbr /\u003e * enable debugging handlers on the master, so kubectl logs works.\n"
                },
                "karpenter": {
                    "$ref": "#/types/kops:index/ClusterKarpenter:ClusterKarpenter",
                    "description": "- karpenter_config - Karpenter defines the Karpenter configuration.\n"
                },
                "keyStore": {
                    "type": "string",
                    "description": "- String - KeyStore is the VFS path to where SSL keys and certificates are stored.\n"
                },
                "kubeApiServer": {
                    "$ref": "#/types/kops:index/ClusterKubeApiServer:ClusterKubeApiServer",
                    "description": "- kube_api_server_config\n"
                },
                "kubeControllerManager": {
                    "$ref": "#/types/kops:index/ClusterKubeControllerManager:ClusterKubeControllerManager",
                    "description": "- kube_controller_manager_config\n"
                },
                "kubeDns": {
                    "$ref": "#/types/kops:index/ClusterKubeDns:ClusterKubeDns",
                    "description": "- kube_dns_config\n"
                },
                "kubeProxy": {
                    "$ref": "#/types/kops:index/ClusterKubeProxy:ClusterKubeProxy",
                    "description": "- kube_proxy_config\n"
                },
                "kubeScheduler": {
                    "$ref": "#/types/kops:index/ClusterKubeScheduler:ClusterKubeScheduler",
                    "description": "- kube_scheduler_config\n"
                },
                "kubelet": {
                    "$ref": "#/types/kops:index/ClusterKubelet:ClusterKubelet",
                    "description": "- kubelet_config_spec - Kubelet is the kubelet configuration for nodes not belonging to the control plane.\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                },
                "kubernetesApiAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - KubernetesAPIAccess is a list of the CIDRs that can access the Kubernetes API endpoint (master HTTPS).\n"
                },
                "kubernetesVersion": {
                    "type": "string",
                    "description": "- String - The version of kubernetes to install (optional, and can be a \"spec\" like stable).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                },
                "masterInternalName": {
                    "type": "string",
                    "description": "- (Computed) - String - MasterInternalName is the internal DNS name for the master nodes.\n"
                },
                "masterKubelet": {
                    "$ref": "#/types/kops:index/ClusterMasterKubelet:ClusterMasterKubelet",
                    "description": "- kubelet_config_spec - MasterKubelet is the kubelet configuration for nodes belonging to the control plane\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                },
                "masterPublicName": {
                    "type": "string",
                    "description": "- (Computed) - String - MasterPublicName is the external DNS name for the master nodes.\n"
                },
                "metricsServer": {
                    "$ref": "#/types/kops:index/ClusterMetricsServer:ClusterMetricsServer",
                    "description": "- metrics_server_config - MetricsServer determines the metrics server configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the cluster name.\n",
                    "willReplaceOnChanges": true
                },
                "networkCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NetworkCIDR is the CIDR used for the AWS VPC / DO/ GCE Network, or otherwise allocated to k8s\u003cbr /\u003eThis is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to the VPC CIDR.  It is not required on GCE.\u003cbr /\u003eOn DO, it maps to the VPC CIDR.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "- String - NetworkID is an identifier of a network, if we want to reuse/share an existing network (e.g. an AWS VPC).\n"
                },
                "networking": {
                    "$ref": "#/types/kops:index/ClusterNetworking:ClusterNetworking",
                    "description": "- networking_spec - Networking configuration.\n"
                },
                "nodeAuthorization": {
                    "$ref": "#/types/kops:index/ClusterNodeAuthorization:ClusterNodeAuthorization",
                    "description": "- node_authorization_spec - NodeAuthorization defined the custom node authorization configuration.\n"
                },
                "nodePortAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - NodePortAccess is a list of the CIDRs that can access the node ports range (30000-32767).\n"
                },
                "nodeProblemDetector": {
                    "$ref": "#/types/kops:index/ClusterNodeProblemDetector:ClusterNodeProblemDetector",
                    "description": "- node_problem_detector_config - NodeProblemDetector determines the node problem detector configuration.\n"
                },
                "nodeTerminationHandler": {
                    "$ref": "#/types/kops:index/ClusterNodeTerminationHandler:ClusterNodeTerminationHandler",
                    "description": "- node_termination_handler_config - NodeTerminationHandler determines the node termination handler configuration.\n"
                },
                "nonMasqueradeCidr": {
                    "type": "string",
                    "description": "- (Computed) - String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n"
                },
                "ntp": {
                    "$ref": "#/types/kops:index/ClusterNtp:ClusterNtp",
                    "description": "- ntp_config\n"
                },
                "podCidr": {
                    "type": "string",
                    "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n"
                },
                "podIdentityWebhook": {
                    "$ref": "#/types/kops:index/ClusterPodIdentityWebhook:ClusterPodIdentityWebhook",
                    "description": "- pod_identity_webhook_config - PodIdentityWebhook determines the EKS Pod Identity Webhook configuration.\n"
                },
                "project": {
                    "type": "string",
                    "description": "- String - Project is the cloud project we should use, required on GCE.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/ClusterRollingUpdate:ClusterRollingUpdate",
                    "description": "- rolling_update - RollingUpdate defines the default rolling-update settings for instance groups.\n"
                },
                "secretStore": {
                    "type": "string",
                    "description": "- String - SecretStore is the VFS path to where secrets are stored.\n"
                },
                "secrets": {
                    "$ref": "#/types/kops:index/ClusterSecrets:ClusterSecrets",
                    "description": "- cluster_secrets - Secrets defines the cluster secret.\n"
                },
                "serviceAccountIssuerDiscovery": {
                    "$ref": "#/types/kops:index/ClusterServiceAccountIssuerDiscovery:ClusterServiceAccountIssuerDiscovery",
                    "description": "- service_account_issuer_discovery_config - ServiceAccountIssuerDiscovery configures the OIDC Issuer for ServiceAccounts.\n"
                },
                "serviceClusterIpRange": {
                    "type": "string",
                    "description": "- String - ServiceClusterIPRange is the CIDR, from the internal network, where we allocate IPs for services.\n"
                },
                "snapshotController": {
                    "$ref": "#/types/kops:index/ClusterSnapshotController:ClusterSnapshotController",
                    "description": "- snapshot_controller_config - SnapshotController defines the CSI Snapshot Controller configuration.\n"
                },
                "sshAccesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SSHAccess is a list of the CIDRs that can access SSH.\n"
                },
                "sshKeyName": {
                    "type": "string",
                    "description": "- String - SSHKeyName specifies a preexisting SSH key to use.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/ClusterSubnet:ClusterSubnet"
                    },
                    "description": "- List(cluster_subnet_spec) - Configuration of subnets we are targeting.\n"
                },
                "sysctlParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                },
                "tagSubnets": {
                    "$ref": "#/types/kops:index/ClusterTagSubnets:ClusterTagSubnets",
                    "description": "- Bool(Nullable) - TagSubnets controls if tags are added to subnets to enable use by load balancers (AWS only). Default: true.\n"
                },
                "topology": {
                    "$ref": "#/types/kops:index/ClusterTopology:ClusterTopology",
                    "description": "- topology_spec - Topology defines the type of network topology to use on the cluster - default public\u003cbr /\u003eThis is heavily weighted towards AWS for the time being, but should also be agnostic enough\u003cbr /\u003eto port out to GCE later if needed.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                },
                "useHostCertificates": {
                    "type": "boolean",
                    "description": "- Bool - UseHostCertificates will mount /etc/ssl/certs to inside needed containers.\u003cbr /\u003eThis is needed if some APIs do have self-signed certs.\n"
                },
                "warmPool": {
                    "$ref": "#/types/kops:index/ClusterWarmPool:ClusterWarmPool",
                    "description": "- warm_pool_spec - WarmPool defines the default warm pool settings for instance groups (AWS only).\n"
                }
            },
            "requiredInputs": [
                "cloudProvider",
                "etcdClusters",
                "networkId",
                "networking",
                "subnets",
                "topology"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "additionalNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - AdditionalNetworkCIDRs is a list of additional CIDR used for the AWS VPC\u003cbr /\u003eor otherwise allocated to k8s. This is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to any additional CIDRs added to a VPC.\n"
                    },
                    "additionalPolicies": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Additional policies to add for roles.\n"
                    },
                    "additionalSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - AdditionalSANs adds additional Subject Alternate Names to apiserver cert that kops generates.\n"
                    },
                    "addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterAddon:ClusterAddon"
                        },
                        "description": "- List(addon_spec) - Additional addons that should be installed on the cluster.\n"
                    },
                    "adminSshKey": {
                        "type": "string",
                        "description": "- (Sensitive) - String - AdminSshKey defines the cluster admin ssh key.\n"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                    },
                    "api": {
                        "$ref": "#/types/kops:index/ClusterApi:ClusterApi",
                        "description": "- access_spec - API field controls how the API is exposed outside the cluster.\n"
                    },
                    "assets": {
                        "$ref": "#/types/kops:index/ClusterAssets:ClusterAssets",
                        "description": "- assets - Assets is alternative locations for files and containers; the API under construction, will remove this comment once this API is fully functional.\n"
                    },
                    "authentication": {
                        "$ref": "#/types/kops:index/ClusterAuthentication:ClusterAuthentication",
                        "description": "- authentication_spec - Authentication field controls how the cluster is configured for authentication.\n"
                    },
                    "authorization": {
                        "$ref": "#/types/kops:index/ClusterAuthorization:ClusterAuthorization",
                        "description": "- authorization_spec - Authorization field controls how the cluster is configured for authorization.\n"
                    },
                    "awsLoadBalancerController": {
                        "$ref": "#/types/kops:index/ClusterAwsLoadBalancerController:ClusterAwsLoadBalancerController",
                        "description": "- aws_load_balancer_controller_config - AWSLoadbalancerControllerConfig determines the AWS LB controller configuration.\n"
                    },
                    "certManager": {
                        "$ref": "#/types/kops:index/ClusterCertManager:ClusterCertManager",
                        "description": "- cert_manager_config - CertManager determines the metrics server configuration.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "- String - The Channel we are following.\n"
                    },
                    "cloudConfig": {
                        "$ref": "#/types/kops:index/ClusterCloudConfig:ClusterCloudConfig",
                        "description": "- cloud_configuration\n"
                    },
                    "cloudLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                    },
                    "cloudProvider": {
                        "$ref": "#/types/kops:index/ClusterCloudProvider:ClusterCloudProvider",
                        "description": "- cloud_provider_spec - CloudProvider configures the cloud provider to use.\n"
                    },
                    "clusterAutoscaler": {
                        "$ref": "#/types/kops:index/ClusterClusterAutoscaler:ClusterClusterAutoscaler",
                        "description": "- cluster_autoscaler_config - ClusterAutoscaler defines the cluster autoscaler configuration.\n"
                    },
                    "clusterDnsDomain": {
                        "type": "string",
                        "description": "- String - ClusterDNSDomain is the suffix we use for internal DNS names (normally cluster.local).\n"
                    },
                    "configBase": {
                        "type": "string",
                        "description": "- (Computed) - String - ConfigBase is the path where we store configuration for the cluster\u003cbr /\u003eThis might be different than the location where the cluster spec itself is stored,\u003cbr /\u003eboth because this must be accessible to the cluster,\u003cbr /\u003eand because it might be on a different cloud or storage system (etcd vs S3).\n"
                    },
                    "configStore": {
                        "type": "string",
                        "description": "- String - ConfigStore is the VFS path to where the configuration (Cluster, InstanceGroups etc) is stored.\n"
                    },
                    "containerRuntime": {
                        "type": "string",
                        "description": "- String - Container runtime to use for Kubernetes.\n"
                    },
                    "containerd": {
                        "$ref": "#/types/kops:index/ClusterContainerd:ClusterContainerd",
                        "description": "- containerd_config - Component configurations.\n"
                    },
                    "dnsZone": {
                        "type": "string",
                        "description": "- String - DNSZone is the DNS zone we should use when configuring DNS\u003cbr /\u003eThis is because some clouds let us define a managed zone foo.bar, and then have\u003cbr /\u003ekubernetes.dev.foo.bar, without needing to define dev.foo.bar as a hosted zone.\u003cbr /\u003eDNSZone will probably be a suffix of the MasterPublicName and MasterInternalName\u003cbr /\u003eNote that DNSZone can either by the host name of the zone (containing dots),\u003cbr /\u003eor can be an identifier for the zone.\n"
                    },
                    "docker": {
                        "$ref": "#/types/kops:index/ClusterDocker:ClusterDocker",
                        "description": "- docker_config\n"
                    },
                    "egressProxy": {
                        "$ref": "#/types/kops:index/ClusterEgressProxy:ClusterEgressProxy",
                        "description": "- egress_proxy_spec - HTTPProxy defines connection information to support use of a private cluster behind an forward HTTP Proxy.\n"
                    },
                    "encryptionConfig": {
                        "type": "boolean",
                        "description": "- Bool - EncryptionConfig controls if encryption is enabled.\n"
                    },
                    "etcdClusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterEtcdCluster:ClusterEtcdCluster"
                        },
                        "description": "- List(etcd_cluster_spec) - EtcdClusters stores the configuration for each cluster.\n"
                    },
                    "externalCloudControllerManager": {
                        "$ref": "#/types/kops:index/ClusterExternalCloudControllerManager:ClusterExternalCloudControllerManager",
                        "description": "- cloud_controller_manager_config\n"
                    },
                    "externalDns": {
                        "$ref": "#/types/kops:index/ClusterExternalDns:ClusterExternalDns",
                        "description": "- external_dns_config\n"
                    },
                    "externalPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterExternalPolicy:ClusterExternalPolicy"
                        },
                        "description": "- Map(List(String)) - ExternalPolicies allows the insertion of pre-existing managed policies on IG Roles.\n"
                    },
                    "fileAssets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterFileAsset:ClusterFileAsset"
                        },
                        "description": "- List(file_asset_spec) - A collection of files assets for deployed cluster wide.\n"
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterHook:ClusterHook"
                        },
                        "description": "- List(hook_spec) - Hooks for custom actions e.g. on first installation.\n"
                    },
                    "iam": {
                        "$ref": "#/types/kops:index/ClusterIam:ClusterIam",
                        "description": "- (Computed) - iam_spec - IAM field adds control over the IAM security policies applied to resources.\n"
                    },
                    "isolateMasters": {
                        "type": "boolean",
                        "description": "- Bool - IsolateMasters determines whether we should lock down masters so that they are not on the pod network.\u003cbr /\u003etrue is the kube-up behaviour, but it is very surprising: it means that daemonsets only work on the master\u003cbr /\u003eif they have hostNetwork=true.\u003cbr /\u003efalse is now the default, and it will:\u003cbr /\u003e * give the master a normal PodCIDR\u003cbr /\u003e * run kube-proxy on the master\u003cbr /\u003e * enable debugging handlers on the master, so kubectl logs works.\n"
                    },
                    "karpenter": {
                        "$ref": "#/types/kops:index/ClusterKarpenter:ClusterKarpenter",
                        "description": "- karpenter_config - Karpenter defines the Karpenter configuration.\n"
                    },
                    "keyStore": {
                        "type": "string",
                        "description": "- String - KeyStore is the VFS path to where SSL keys and certificates are stored.\n"
                    },
                    "kubeApiServer": {
                        "$ref": "#/types/kops:index/ClusterKubeApiServer:ClusterKubeApiServer",
                        "description": "- kube_api_server_config\n"
                    },
                    "kubeControllerManager": {
                        "$ref": "#/types/kops:index/ClusterKubeControllerManager:ClusterKubeControllerManager",
                        "description": "- kube_controller_manager_config\n"
                    },
                    "kubeDns": {
                        "$ref": "#/types/kops:index/ClusterKubeDns:ClusterKubeDns",
                        "description": "- kube_dns_config\n"
                    },
                    "kubeProxy": {
                        "$ref": "#/types/kops:index/ClusterKubeProxy:ClusterKubeProxy",
                        "description": "- kube_proxy_config\n"
                    },
                    "kubeScheduler": {
                        "$ref": "#/types/kops:index/ClusterKubeScheduler:ClusterKubeScheduler",
                        "description": "- kube_scheduler_config\n"
                    },
                    "kubelet": {
                        "$ref": "#/types/kops:index/ClusterKubelet:ClusterKubelet",
                        "description": "- kubelet_config_spec - Kubelet is the kubelet configuration for nodes not belonging to the control plane.\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                    },
                    "kubernetesApiAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - KubernetesAPIAccess is a list of the CIDRs that can access the Kubernetes API endpoint (master HTTPS).\n"
                    },
                    "kubernetesVersion": {
                        "type": "string",
                        "description": "- String - The version of kubernetes to install (optional, and can be a \"spec\" like stable).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                    },
                    "masterInternalName": {
                        "type": "string",
                        "description": "- (Computed) - String - MasterInternalName is the internal DNS name for the master nodes.\n"
                    },
                    "masterKubelet": {
                        "$ref": "#/types/kops:index/ClusterMasterKubelet:ClusterMasterKubelet",
                        "description": "- kubelet_config_spec - MasterKubelet is the kubelet configuration for nodes belonging to the control plane\u003cbr /\u003eIt can be overridden by the kubelet configuration specified in the instance group.\n"
                    },
                    "masterPublicName": {
                        "type": "string",
                        "description": "- (Computed) - String - MasterPublicName is the external DNS name for the master nodes.\n"
                    },
                    "metricsServer": {
                        "$ref": "#/types/kops:index/ClusterMetricsServer:ClusterMetricsServer",
                        "description": "- metrics_server_config - MetricsServer determines the metrics server configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "- (Force new) - String - Name defines the cluster name.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "- (Computed) - String - NetworkCIDR is the CIDR used for the AWS VPC / DO/ GCE Network, or otherwise allocated to k8s\u003cbr /\u003eThis is a real CIDR, not the internal k8s network\u003cbr /\u003eOn AWS, it maps to the VPC CIDR.  It is not required on GCE.\u003cbr /\u003eOn DO, it maps to the VPC CIDR.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "- String - NetworkID is an identifier of a network, if we want to reuse/share an existing network (e.g. an AWS VPC).\n"
                    },
                    "networking": {
                        "$ref": "#/types/kops:index/ClusterNetworking:ClusterNetworking",
                        "description": "- networking_spec - Networking configuration.\n"
                    },
                    "nodeAuthorization": {
                        "$ref": "#/types/kops:index/ClusterNodeAuthorization:ClusterNodeAuthorization",
                        "description": "- node_authorization_spec - NodeAuthorization defined the custom node authorization configuration.\n"
                    },
                    "nodePortAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - NodePortAccess is a list of the CIDRs that can access the node ports range (30000-32767).\n"
                    },
                    "nodeProblemDetector": {
                        "$ref": "#/types/kops:index/ClusterNodeProblemDetector:ClusterNodeProblemDetector",
                        "description": "- node_problem_detector_config - NodeProblemDetector determines the node problem detector configuration.\n"
                    },
                    "nodeTerminationHandler": {
                        "$ref": "#/types/kops:index/ClusterNodeTerminationHandler:ClusterNodeTerminationHandler",
                        "description": "- node_termination_handler_config - NodeTerminationHandler determines the node termination handler configuration.\n"
                    },
                    "nonMasqueradeCidr": {
                        "type": "string",
                        "description": "- (Computed) - String - NonMasqueradeCIDR is the CIDR for the internal k8s network (on which pods \u0026 services live)\u003cbr /\u003eIt cannot overlap ServiceClusterIPRange.\n"
                    },
                    "ntp": {
                        "$ref": "#/types/kops:index/ClusterNtp:ClusterNtp",
                        "description": "- ntp_config\n"
                    },
                    "podCidr": {
                        "type": "string",
                        "description": "- String - PodCIDR is the CIDR from which we allocate IPs for pods.\n"
                    },
                    "podIdentityWebhook": {
                        "$ref": "#/types/kops:index/ClusterPodIdentityWebhook:ClusterPodIdentityWebhook",
                        "description": "- pod_identity_webhook_config - PodIdentityWebhook determines the EKS Pod Identity Webhook configuration.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "- String - Project is the cloud project we should use, required on GCE.\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                    },
                    "rollingUpdate": {
                        "$ref": "#/types/kops:index/ClusterRollingUpdate:ClusterRollingUpdate",
                        "description": "- rolling_update - RollingUpdate defines the default rolling-update settings for instance groups.\n"
                    },
                    "secretStore": {
                        "type": "string",
                        "description": "- String - SecretStore is the VFS path to where secrets are stored.\n"
                    },
                    "secrets": {
                        "$ref": "#/types/kops:index/ClusterSecrets:ClusterSecrets",
                        "description": "- cluster_secrets - Secrets defines the cluster secret.\n"
                    },
                    "serviceAccountIssuerDiscovery": {
                        "$ref": "#/types/kops:index/ClusterServiceAccountIssuerDiscovery:ClusterServiceAccountIssuerDiscovery",
                        "description": "- service_account_issuer_discovery_config - ServiceAccountIssuerDiscovery configures the OIDC Issuer for ServiceAccounts.\n"
                    },
                    "serviceClusterIpRange": {
                        "type": "string",
                        "description": "- String - ServiceClusterIPRange is the CIDR, from the internal network, where we allocate IPs for services.\n"
                    },
                    "snapshotController": {
                        "$ref": "#/types/kops:index/ClusterSnapshotController:ClusterSnapshotController",
                        "description": "- snapshot_controller_config - SnapshotController defines the CSI Snapshot Controller configuration.\n"
                    },
                    "sshAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - SSHAccess is a list of the CIDRs that can access SSH.\n"
                    },
                    "sshKeyName": {
                        "type": "string",
                        "description": "- String - SSHKeyName specifies a preexisting SSH key to use.\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/ClusterSubnet:ClusterSubnet"
                        },
                        "description": "- List(cluster_subnet_spec) - Configuration of subnets we are targeting.\n"
                    },
                    "sysctlParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                    },
                    "tagSubnets": {
                        "$ref": "#/types/kops:index/ClusterTagSubnets:ClusterTagSubnets",
                        "description": "- Bool(Nullable) - TagSubnets controls if tags are added to subnets to enable use by load balancers (AWS only). Default: true.\n"
                    },
                    "topology": {
                        "$ref": "#/types/kops:index/ClusterTopology:ClusterTopology",
                        "description": "- topology_spec - Topology defines the type of network topology to use on the cluster - default public\u003cbr /\u003eThis is heavily weighted towards AWS for the time being, but should also be agnostic enough\u003cbr /\u003eto port out to GCE later if needed.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                    },
                    "useHostCertificates": {
                        "type": "boolean",
                        "description": "- Bool - UseHostCertificates will mount /etc/ssl/certs to inside needed containers.\u003cbr /\u003eThis is needed if some APIs do have self-signed certs.\n"
                    },
                    "warmPool": {
                        "$ref": "#/types/kops:index/ClusterWarmPool:ClusterWarmPool",
                        "description": "- warm_pool_spec - WarmPool defines the default warm pool settings for instance groups (AWS only).\n"
                    }
                },
                "type": "object"
            }
        },
        "kops:index/clusterUpdater:ClusterUpdater": {
            "description": "## # kops.ClusterUpdater\n\nThis resource applies the cluster state on the target cloud provider and performs a rolling update.\n\nThe rolling update and cluster validation can be disabled and/or configured through resource attributes.\n\n\u003e This resource will trigger based on the `keepers` map attribute.\nThats is, if something changes in the attribute, the resource update handler will fire and an apply/rolling update/validate cycle will run.\nA good candidate for `keepers` is to use the `revision` coming from `kops.Cluster` and `kops.InstanceGroup` resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as kops from \"@pulumi/kops\";\n\nconst cluster = new kops.Cluster(\"cluster\", {});\n// ....\nconst master_0 = new kops.InstanceGroup(\"master-0\", {\n    clusterName: cluster.name,\n    role: \"Master\",\n    minSize: 1,\n    maxSize: 1,\n    machineType: \"t3.medium\",\n    subnets: [\"private-0\"],\n}, {\n    dependsOn: [cluster],\n});\nconst master_1 = new kops.InstanceGroup(\"master-1\", {\n    clusterName: cluster.name,\n    role: \"Master\",\n    minSize: 1,\n    maxSize: 1,\n    machineType: \"t3.medium\",\n    subnets: [\"private-1\"],\n}, {\n    dependsOn: [cluster],\n});\nconst master_2 = new kops.InstanceGroup(\"master-2\", {\n    clusterName: cluster.name,\n    role: \"Master\",\n    minSize: 1,\n    maxSize: 1,\n    machineType: \"t3.medium\",\n    subnets: [\"private-2\"],\n}, {\n    dependsOn: [cluster],\n});\nconst updater = new kops.ClusterUpdater(\"updater\", {\n    clusterName: cluster.name,\n    keepers: {\n        cluster: cluster.revision,\n        \"master-0\": master_0.revision,\n        \"master-1\": master_1.revision,\n        \"master-2\": master_2.revision,\n    },\n    rollingUpdate: {\n        skip: false,\n        failOnDrainError: true,\n        failOnValidate: true,\n        validateCount: 1,\n    },\n    validate: {\n        skip: false,\n    },\n}, {\n    dependsOn: [\n        cluster,\n        master_0,\n        master_1,\n        master_2,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_kops as kops\n\ncluster = kops.Cluster(\"cluster\")\n# ....\nmaster_0 = kops.InstanceGroup(\"master-0\",\n    cluster_name=cluster.name,\n    role=\"Master\",\n    min_size=1,\n    max_size=1,\n    machine_type=\"t3.medium\",\n    subnets=[\"private-0\"],\n    opts=pulumi.ResourceOptions(depends_on=[cluster]))\nmaster_1 = kops.InstanceGroup(\"master-1\",\n    cluster_name=cluster.name,\n    role=\"Master\",\n    min_size=1,\n    max_size=1,\n    machine_type=\"t3.medium\",\n    subnets=[\"private-1\"],\n    opts=pulumi.ResourceOptions(depends_on=[cluster]))\nmaster_2 = kops.InstanceGroup(\"master-2\",\n    cluster_name=cluster.name,\n    role=\"Master\",\n    min_size=1,\n    max_size=1,\n    machine_type=\"t3.medium\",\n    subnets=[\"private-2\"],\n    opts=pulumi.ResourceOptions(depends_on=[cluster]))\nupdater = kops.ClusterUpdater(\"updater\",\n    cluster_name=cluster.name,\n    keepers={\n        \"cluster\": cluster.revision,\n        \"master-0\": master_0.revision,\n        \"master-1\": master_1.revision,\n        \"master-2\": master_2.revision,\n    },\n    rolling_update=kops.ClusterUpdaterRollingUpdateArgs(\n        skip=False,\n        fail_on_drain_error=True,\n        fail_on_validate=True,\n        validate_count=1,\n    ),\n    validate=kops.ClusterUpdaterValidateArgs(\n        skip=False,\n    ),\n    opts=pulumi.ResourceOptions(depends_on=[\n            cluster,\n            master_0,\n            master_1,\n            master_2,\n        ]))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Kops = Pulumi.Kops;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster = new Kops.Cluster(\"cluster\");\n\n    // ....\n    var master_0 = new Kops.InstanceGroup(\"master-0\", new()\n    {\n        ClusterName = cluster.Name,\n        Role = \"Master\",\n        MinSize = 1,\n        MaxSize = 1,\n        MachineType = \"t3.medium\",\n        Subnets = new[]\n        {\n            \"private-0\",\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            cluster,\n        },\n    });\n\n    var master_1 = new Kops.InstanceGroup(\"master-1\", new()\n    {\n        ClusterName = cluster.Name,\n        Role = \"Master\",\n        MinSize = 1,\n        MaxSize = 1,\n        MachineType = \"t3.medium\",\n        Subnets = new[]\n        {\n            \"private-1\",\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            cluster,\n        },\n    });\n\n    var master_2 = new Kops.InstanceGroup(\"master-2\", new()\n    {\n        ClusterName = cluster.Name,\n        Role = \"Master\",\n        MinSize = 1,\n        MaxSize = 1,\n        MachineType = \"t3.medium\",\n        Subnets = new[]\n        {\n            \"private-2\",\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            cluster,\n        },\n    });\n\n    var updater = new Kops.ClusterUpdater(\"updater\", new()\n    {\n        ClusterName = cluster.Name,\n        Keepers = \n        {\n            { \"cluster\", cluster.Revision },\n            { \"master-0\", master_0.Revision },\n            { \"master-1\", master_1.Revision },\n            { \"master-2\", master_2.Revision },\n        },\n        RollingUpdate = new Kops.Inputs.ClusterUpdaterRollingUpdateArgs\n        {\n            Skip = false,\n            FailOnDrainError = true,\n            FailOnValidate = true,\n            ValidateCount = 1,\n        },\n        Validate = new Kops.Inputs.ClusterUpdaterValidateArgs\n        {\n            Skip = false,\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            cluster,\n            master_0,\n            master_1,\n            master_2,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-kops/sdk/go/kops\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcluster, err := kops.NewCluster(ctx, \"cluster\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = kops.NewInstanceGroup(ctx, \"master-0\", \u0026kops.InstanceGroupArgs{\n\t\t\tClusterName: cluster.Name,\n\t\t\tRole:        pulumi.String(\"Master\"),\n\t\t\tMinSize:     pulumi.Int(1),\n\t\t\tMaxSize:     pulumi.Int(1),\n\t\t\tMachineType: pulumi.String(\"t3.medium\"),\n\t\t\tSubnets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"private-0\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tcluster,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = kops.NewInstanceGroup(ctx, \"master-1\", \u0026kops.InstanceGroupArgs{\n\t\t\tClusterName: cluster.Name,\n\t\t\tRole:        pulumi.String(\"Master\"),\n\t\t\tMinSize:     pulumi.Int(1),\n\t\t\tMaxSize:     pulumi.Int(1),\n\t\t\tMachineType: pulumi.String(\"t3.medium\"),\n\t\t\tSubnets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"private-1\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tcluster,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = kops.NewInstanceGroup(ctx, \"master-2\", \u0026kops.InstanceGroupArgs{\n\t\t\tClusterName: cluster.Name,\n\t\t\tRole:        pulumi.String(\"Master\"),\n\t\t\tMinSize:     pulumi.Int(1),\n\t\t\tMaxSize:     pulumi.Int(1),\n\t\t\tMachineType: pulumi.String(\"t3.medium\"),\n\t\t\tSubnets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"private-2\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tcluster,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = kops.NewClusterUpdater(ctx, \"updater\", \u0026kops.ClusterUpdaterArgs{\n\t\t\tClusterName: cluster.Name,\n\t\t\tKeepers: pulumi.StringMap{\n\t\t\t\t\"cluster\":  cluster.Revision,\n\t\t\t\t\"master-0\": master_0.Revision,\n\t\t\t\t\"master-1\": master_1.Revision,\n\t\t\t\t\"master-2\": master_2.Revision,\n\t\t\t},\n\t\t\tRollingUpdate: \u0026ClusterUpdaterRollingUpdateArgs{\n\t\t\t\tSkip:             pulumi.Bool(false),\n\t\t\t\tFailOnDrainError: pulumi.Bool(true),\n\t\t\t\tFailOnValidate:   pulumi.Bool(true),\n\t\t\t\tValidateCount:    pulumi.Int(1),\n\t\t\t},\n\t\t\tValidate: \u0026ClusterUpdaterValidateArgs{\n\t\t\t\tSkip: pulumi.Bool(false),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tcluster,\n\t\t\tmaster_0,\n\t\t\tmaster_1,\n\t\t\tmaster_2,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.kops.Cluster;\nimport com.pulumi.kops.InstanceGroup;\nimport com.pulumi.kops.InstanceGroupArgs;\nimport com.pulumi.kops.ClusterUpdater;\nimport com.pulumi.kops.ClusterUpdaterArgs;\nimport com.pulumi.kops.inputs.ClusterUpdaterRollingUpdateArgs;\nimport com.pulumi.kops.inputs.ClusterUpdaterValidateArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cluster = new Cluster(\"cluster\");\n\n        var master_0 = new InstanceGroup(\"master-0\", InstanceGroupArgs.builder()        \n            .clusterName(cluster.name())\n            .role(\"Master\")\n            .minSize(1)\n            .maxSize(1)\n            .machineType(\"t3.medium\")\n            .subnets(\"private-0\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(cluster)\n                .build());\n\n        var master_1 = new InstanceGroup(\"master-1\", InstanceGroupArgs.builder()        \n            .clusterName(cluster.name())\n            .role(\"Master\")\n            .minSize(1)\n            .maxSize(1)\n            .machineType(\"t3.medium\")\n            .subnets(\"private-1\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(cluster)\n                .build());\n\n        var master_2 = new InstanceGroup(\"master-2\", InstanceGroupArgs.builder()        \n            .clusterName(cluster.name())\n            .role(\"Master\")\n            .minSize(1)\n            .maxSize(1)\n            .machineType(\"t3.medium\")\n            .subnets(\"private-2\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(cluster)\n                .build());\n\n        var updater = new ClusterUpdater(\"updater\", ClusterUpdaterArgs.builder()        \n            .clusterName(cluster.name())\n            .keepers(Map.ofEntries(\n                Map.entry(\"cluster\", cluster.revision()),\n                Map.entry(\"master-0\", master_0.revision()),\n                Map.entry(\"master-1\", master_1.revision()),\n                Map.entry(\"master-2\", master_2.revision())\n            ))\n            .rollingUpdate(ClusterUpdaterRollingUpdateArgs.builder()\n                .skip(false)\n                .failOnDrainError(true)\n                .failOnValidate(true)\n                .validateCount(1)\n                .build())\n            .validate(ClusterUpdaterValidateArgs.builder()\n                .skip(false)\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    cluster,\n                    master_0,\n                    master_1,\n                    master_2)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cluster:\n    type: kops:Cluster\n  master-0:\n    type: kops:InstanceGroup\n    properties:\n      clusterName: ${cluster.name}\n      role: Master\n      minSize: 1\n      maxSize: 1\n      machineType: t3.medium\n      subnets:\n        - private-0\n    options:\n      dependson:\n        - ${cluster}\n  master-1:\n    type: kops:InstanceGroup\n    properties:\n      clusterName: ${cluster.name}\n      role: Master\n      minSize: 1\n      maxSize: 1\n      machineType: t3.medium\n      subnets:\n        - private-1\n    options:\n      dependson:\n        - ${cluster}\n  master-2:\n    type: kops:InstanceGroup\n    properties:\n      clusterName: ${cluster.name}\n      role: Master\n      minSize: 1\n      maxSize: 1\n      machineType: t3.medium\n      subnets:\n        - private-2\n    options:\n      dependson:\n        - ${cluster}\n  updater:\n    type: kops:ClusterUpdater\n    properties:\n      clusterName: ${cluster.name}\n      keepers:\n        cluster: ${cluster.revision}\n        master-0: ${[\"master-0\"].revision}\n        master-1: ${[\"master-1\"].revision}\n        master-2: ${[\"master-2\"].revision}\n      rollingUpdate:\n        skip: false\n        failOnDrainError: true\n        failOnValidate: true\n        validateCount: 1\n      validate:\n        skip: false\n    options:\n      dependson:\n        - ${cluster}\n        - ${[\"master-0\"]}\n        - ${[\"master-1\"]}\n        - ${[\"master-2\"]}\n```\n{{% /example %}}\n{{% /examples %}}\n## Nested resources\n\n### apply_options\n\n#### Argument Reference\n\nThe following arguments are supported:\n\n- `skip` - (Optional) - Bool - Skip allows skipping cluster apply.\n- `allow_kops_downgrade` - (Optional) - Bool - AllowKopsDowngrade permits applying with a kops version older than what was last used to apply to the cluster.\n- `lifecycle_overrides` - (Optional) - Map(String) - LifecycleOverrides is passed in to override the lifecycle for one of more tasks.\u003cbr /\u003eThe key value is the task name such as InternetGateway and the value is the fi.Lifecycle\u003cbr /\u003ethat is re-mapped.\n\n### rolling_update_options\n\n#### Argument Reference\n\nThe following arguments are supported:\n\n- `skip` - (Optional) - Bool - Skip allows skipping cluster rolling update.\n- `master_interval` - (Optional) - Duration - MasterInterval is the amount of time to wait after stopping a master instance.\n- `node_interval` - (Optional) - Duration - NodeInterval is the amount of time to wait after stopping a non-master instance.\n- `bastion_interval` - (Optional) - Duration - BastionInterval is the amount of time to wait after stopping a bastion instance.\n- `fail_on_drain_error` - (Optional) - Bool - FailOnDrainError will fail when a drain error occurs.\n- `fail_on_validate` - (Optional) - Bool - FailOnValidate will fail when a validation error occurs.\n- `post_drain_delay` - (Optional) - Duration - PostDrainDelay is the duration we wait after draining each node.\n- `validation_timeout` - (Optional) - Duration - ValidationTimeout is the maximum time to wait for the cluster to validate, once we start validation.\n- `validate_count` - (Optional) - Int - ValidateCount is the amount of time that a cluster needs to be validated after single node update.\n- `cloud_only` - (Optional) - Bool - CloudOnly perform rolling update without confirming progress with k8s.\n- `force` - (Optional) - Bool - Force forces a rolling update.\n\n### validate_options\n\n#### Argument Reference\n\nThe following arguments are supported:\n\n- `skip` - (Optional) - Bool - Skip allows skipping cluster validation.\n- `timeout` - (Optional) - Duration - Timeout defines the maximum time to wait until the cluster becomes valid.\n- `poll_interval` - (Optional) - Duration - PollInterval defines the interval between validation attempts.\n",
            "properties": {
                "apply": {
                    "$ref": "#/types/kops:index/ClusterUpdaterApply:ClusterUpdaterApply",
                    "description": "- apply_options - Apply holds cluster apply options.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "- String - ClusterName is the target cluster name.\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Keepers contains arbitrary strings used to update the resource when one changes.\n"
                },
                "providerVersion": {
                    "type": "string",
                    "description": "- String - ProviderVersion is set to the currently running provider version, this will trigger cluster updater on version changes.\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/ClusterUpdaterRollingUpdate:ClusterUpdaterRollingUpdate",
                    "description": "- rolling_update_options - RollingUpdate holds cluster rolling update options.\n"
                },
                "validate": {
                    "$ref": "#/types/kops:index/ClusterUpdaterValidate:ClusterUpdaterValidate",
                    "description": "- validate_options - Validate holds cluster validation options.\n"
                }
            },
            "required": [
                "clusterName",
                "providerVersion",
                "revision"
            ],
            "inputProperties": {
                "apply": {
                    "$ref": "#/types/kops:index/ClusterUpdaterApply:ClusterUpdaterApply",
                    "description": "- apply_options - Apply holds cluster apply options.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "- String - ClusterName is the target cluster name.\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Keepers contains arbitrary strings used to update the resource when one changes.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/ClusterUpdaterRollingUpdate:ClusterUpdaterRollingUpdate",
                    "description": "- rolling_update_options - RollingUpdate holds cluster rolling update options.\n"
                },
                "validate": {
                    "$ref": "#/types/kops:index/ClusterUpdaterValidate:ClusterUpdaterValidate",
                    "description": "- validate_options - Validate holds cluster validation options.\n"
                }
            },
            "requiredInputs": [
                "clusterName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClusterUpdater resources.\n",
                "properties": {
                    "apply": {
                        "$ref": "#/types/kops:index/ClusterUpdaterApply:ClusterUpdaterApply",
                        "description": "- apply_options - Apply holds cluster apply options.\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "- String - ClusterName is the target cluster name.\n"
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Keepers contains arbitrary strings used to update the resource when one changes.\n"
                    },
                    "providerVersion": {
                        "type": "string",
                        "description": "- String - ProviderVersion is set to the currently running provider version, this will trigger cluster updater on version changes.\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                    },
                    "rollingUpdate": {
                        "$ref": "#/types/kops:index/ClusterUpdaterRollingUpdate:ClusterUpdaterRollingUpdate",
                        "description": "- rolling_update_options - RollingUpdate holds cluster rolling update options.\n"
                    },
                    "validate": {
                        "$ref": "#/types/kops:index/ClusterUpdaterValidate:ClusterUpdaterValidate",
                        "description": "- validate_options - Validate holds cluster validation options.\n"
                    }
                },
                "type": "object"
            }
        },
        "kops:index/instanceGroup:InstanceGroup": {
            "description": "\n\n\n## Import\n\nYou can import an existing cluster by creating a `kops_instance_group` configuration\n\n```sh\n $ pulumi import kops:index/instanceGroup:InstanceGroup and running the `terraform import` command\n```\n\n 1. Create a terraform configuration:\n\n\n\n hcl\n\n\n\n provider \"kops\" {\n\n\n\n\n\n state_store = \"s3://cluster.example.com\"\n\n\n\n }\n\n\n\n resource \"kops_instance_group\" \"ig-0\" {\n\n\n\n\n\n cluster_name = \"cluster.example.com\"\n\n\n\n\n\n name\n\n\n\n\n\n\n\n = \"ig-0\"\n\n\n\n\n\n // ....\n\n\n\n }\n\n```sh\n $ pulumi import kops:index/instanceGroup:InstanceGroup\n\nRun `terraform import`\n```\n\n\n\n```sh\n $ pulumi import kops:index/instanceGroup:InstanceGroup kops_instance_group.ig-0 cluster.example.com/ig-0\n```\n\n ~\u003e The id of the instance group to be imported must be given in the\n\n`cluster name/instance group name` format. ",
            "properties": {
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).\n"
                },
                "additionalUserDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupAdditionalUserData:InstanceGroupAdditionalUserData"
                    },
                    "description": "- List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                },
                "associatePublicIp": {
                    "type": "boolean",
                    "description": "- Bool - AssociatePublicIP is true if we want instances to have a public IP.\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "- Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.\n"
                },
                "cloudLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "- (Force new) - String - ClusterName defines the cluster name the instance group belongs to.\n"
                },
                "compressUserData": {
                    "type": "boolean",
                    "description": "- Bool - CompressUserData compresses parts of the user data to save space.\n"
                },
                "containerd": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerd:InstanceGroupContainerd",
                    "description": "- containerd_config - Containerd specifies override configuration for instance group.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "- String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).\n"
                },
                "detailedInstanceMonitoring": {
                    "type": "boolean",
                    "description": "- Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).\n"
                },
                "externalLoadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupExternalLoadBalancer:InstanceGroupExternalLoadBalancer"
                    },
                    "description": "- List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.\n"
                },
                "fileAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupFileAsset:InstanceGroupFileAsset"
                    },
                    "description": "- List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.\n"
                },
                "gcpProvisioningModel": {
                    "type": "string",
                    "description": "- String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.\u003cbr /\u003eValid values:\u003cbr /\u003e  'STANDARD': (default) standard provisioning with user controlled run time, no discounts\u003cbr /\u003e  'SPOT': heavily discounted, no guaranteed run time.\n"
                },
                "guestAccelerators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupGuestAccelerator:InstanceGroupGuestAccelerator"
                    },
                    "description": "- List(accelerator_config) - GuestAccelerators configures additional accelerators.\n"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupHook:InstanceGroupHook"
                    },
                    "description": "- List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.\n"
                },
                "iam": {
                    "$ref": "#/types/kops:index/InstanceGroupIam:InstanceGroupIam",
                    "description": "- iam_profile_spec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).\n"
                },
                "image": {
                    "type": "string",
                    "description": "- (Computed) - String - Image is the instance (ami etc) we should use.\n"
                },
                "instanceInterruptionBehavior": {
                    "type": "string",
                    "description": "- String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,\u003cbr /\u003eor stopped after interruption.\n"
                },
                "instanceMetadata": {
                    "$ref": "#/types/kops:index/InstanceGroupInstanceMetadata:InstanceGroupInstanceMetadata",
                    "description": "- instance_metadata_options - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).\n"
                },
                "instanceProtection": {
                    "type": "boolean",
                    "description": "- Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.\n"
                },
                "kubelet": {
                    "$ref": "#/types/kops:index/InstanceGroupKubelet:InstanceGroupKubelet",
                    "description": "- (Computed) - kubelet_config_spec - Kubelet overrides kubelet config from the ClusterSpec.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                },
                "machineType": {
                    "type": "string",
                    "description": "- String - MachineType is the instance class.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "- (Computed) - String - Manager determines what is managing the node lifecycle.\n"
                },
                "maxInstanceLifetime": {
                    "type": "string",
                    "description": "- Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.\u003cbr /\u003eValue expected must be in form of duration (\"ms\", \"s\", \"m\", \"h\").\n"
                },
                "maxPrice": {
                    "type": "string",
                    "description": "- String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "- Int - MaxSize is the maximum size of the pool.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "- Int - MinSize is the minimum size of the pool.\n"
                },
                "mixedInstancesPolicy": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicy:InstanceGroupMixedInstancesPolicy",
                    "description": "- mixed_instances_policy_spec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).\n"
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the instance group name.\n"
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                },
                "role": {
                    "type": "string",
                    "description": "- String - Type determines the role of instances in this instance group: masters or nodes.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/InstanceGroupRollingUpdate:InstanceGroupRollingUpdate",
                    "description": "- rolling_update - RollingUpdate defines the rolling-update behavior.\n"
                },
                "rootVolumeEncryption": {
                    "type": "boolean",
                    "description": "- Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.\n"
                },
                "rootVolumeEncryptionKey": {
                    "type": "string",
                    "description": "- String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.\n"
                },
                "rootVolumeIops": {
                    "type": "integer",
                    "description": "- Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).\n"
                },
                "rootVolumeOptimization": {
                    "type": "boolean",
                    "description": "- Bool - RootVolumeOptimization enables EBS optimization for an instance.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "- Int - RootVolumeSize is the size of the EBS root volume to use, in GB.\n"
                },
                "rootVolumeThroughput": {
                    "type": "integer",
                    "description": "- Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "- String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).\n"
                },
                "securityGroupOverride": {
                    "type": "string",
                    "description": "- String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).\n"
                },
                "spotDurationInMinutes": {
                    "type": "integer",
                    "description": "- Int - SpotDurationInMinutes reserves a spot block for the period specified.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.\n"
                },
                "suspendProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SuspendProcesses disables the listed Scaling Policies.\n"
                },
                "sysctlParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Taints indicates the kubernetes taints for nodes in this instance group.\n"
                },
                "tenancy": {
                    "type": "string",
                    "description": "- String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eIf specified, this value overrides a value specified in the Cluster's \"spec.updatePolicy\" field.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                },
                "volumeMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupVolumeMount:InstanceGroupVolumeMount"
                    },
                    "description": "- List(volume_mount_spec) - VolumeMounts a collection of volume mounts.\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupVolume:InstanceGroupVolume"
                    },
                    "description": "- List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.\n"
                },
                "warmPool": {
                    "$ref": "#/types/kops:index/InstanceGroupWarmPool:InstanceGroupWarmPool",
                    "description": "- warm_pool_spec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Zones is the names of the Zones where machines in this instance group should be placed\u003cbr /\u003eThis is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.\n"
                }
            },
            "required": [
                "clusterName",
                "image",
                "kubelet",
                "machineType",
                "manager",
                "maxSize",
                "minSize",
                "name",
                "revision",
                "role",
                "subnets"
            ],
            "inputProperties": {
                "additionalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).\n"
                },
                "additionalUserDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupAdditionalUserData:InstanceGroupAdditionalUserData"
                    },
                    "description": "- List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                },
                "associatePublicIp": {
                    "type": "boolean",
                    "description": "- Bool - AssociatePublicIP is true if we want instances to have a public IP.\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "- Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.\n"
                },
                "cloudLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "- (Force new) - String - ClusterName defines the cluster name the instance group belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "compressUserData": {
                    "type": "boolean",
                    "description": "- Bool - CompressUserData compresses parts of the user data to save space.\n"
                },
                "containerd": {
                    "$ref": "#/types/kops:index/InstanceGroupContainerd:InstanceGroupContainerd",
                    "description": "- containerd_config - Containerd specifies override configuration for instance group.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "- String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).\n"
                },
                "detailedInstanceMonitoring": {
                    "type": "boolean",
                    "description": "- Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).\n"
                },
                "externalLoadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupExternalLoadBalancer:InstanceGroupExternalLoadBalancer"
                    },
                    "description": "- List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.\n"
                },
                "fileAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupFileAsset:InstanceGroupFileAsset"
                    },
                    "description": "- List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.\n"
                },
                "gcpProvisioningModel": {
                    "type": "string",
                    "description": "- String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.\u003cbr /\u003eValid values:\u003cbr /\u003e  'STANDARD': (default) standard provisioning with user controlled run time, no discounts\u003cbr /\u003e  'SPOT': heavily discounted, no guaranteed run time.\n"
                },
                "guestAccelerators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupGuestAccelerator:InstanceGroupGuestAccelerator"
                    },
                    "description": "- List(accelerator_config) - GuestAccelerators configures additional accelerators.\n"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupHook:InstanceGroupHook"
                    },
                    "description": "- List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.\n"
                },
                "iam": {
                    "$ref": "#/types/kops:index/InstanceGroupIam:InstanceGroupIam",
                    "description": "- iam_profile_spec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).\n"
                },
                "image": {
                    "type": "string",
                    "description": "- (Computed) - String - Image is the instance (ami etc) we should use.\n"
                },
                "instanceInterruptionBehavior": {
                    "type": "string",
                    "description": "- String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,\u003cbr /\u003eor stopped after interruption.\n"
                },
                "instanceMetadata": {
                    "$ref": "#/types/kops:index/InstanceGroupInstanceMetadata:InstanceGroupInstanceMetadata",
                    "description": "- instance_metadata_options - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).\n"
                },
                "instanceProtection": {
                    "type": "boolean",
                    "description": "- Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.\n"
                },
                "kubelet": {
                    "$ref": "#/types/kops:index/InstanceGroupKubelet:InstanceGroupKubelet",
                    "description": "- (Computed) - kubelet_config_spec - Kubelet overrides kubelet config from the ClusterSpec.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                },
                "machineType": {
                    "type": "string",
                    "description": "- String - MachineType is the instance class.\n"
                },
                "manager": {
                    "type": "string",
                    "description": "- (Computed) - String - Manager determines what is managing the node lifecycle.\n"
                },
                "maxInstanceLifetime": {
                    "type": "string",
                    "description": "- Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.\u003cbr /\u003eValue expected must be in form of duration (\"ms\", \"s\", \"m\", \"h\").\n"
                },
                "maxPrice": {
                    "type": "string",
                    "description": "- String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "- Int - MaxSize is the maximum size of the pool.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "- Int - MinSize is the minimum size of the pool.\n"
                },
                "mixedInstancesPolicy": {
                    "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicy:InstanceGroupMixedInstancesPolicy",
                    "description": "- mixed_instances_policy_spec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).\n"
                },
                "name": {
                    "type": "string",
                    "description": "- (Force new) - String - Name defines the instance group name.\n",
                    "willReplaceOnChanges": true
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Packages specifies additional packages to be installed.\n"
                },
                "role": {
                    "type": "string",
                    "description": "- String - Type determines the role of instances in this instance group: masters or nodes.\n"
                },
                "rollingUpdate": {
                    "$ref": "#/types/kops:index/InstanceGroupRollingUpdate:InstanceGroupRollingUpdate",
                    "description": "- rolling_update - RollingUpdate defines the rolling-update behavior.\n"
                },
                "rootVolumeEncryption": {
                    "type": "boolean",
                    "description": "- Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.\n"
                },
                "rootVolumeEncryptionKey": {
                    "type": "string",
                    "description": "- String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.\n"
                },
                "rootVolumeIops": {
                    "type": "integer",
                    "description": "- Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).\n"
                },
                "rootVolumeOptimization": {
                    "type": "boolean",
                    "description": "- Bool - RootVolumeOptimization enables EBS optimization for an instance.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "- Int - RootVolumeSize is the size of the EBS root volume to use, in GB.\n"
                },
                "rootVolumeThroughput": {
                    "type": "integer",
                    "description": "- Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "- String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).\n"
                },
                "securityGroupOverride": {
                    "type": "string",
                    "description": "- String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).\n"
                },
                "spotDurationInMinutes": {
                    "type": "integer",
                    "description": "- Int - SpotDurationInMinutes reserves a spot block for the period specified.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.\n"
                },
                "suspendProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SuspendProcesses disables the listed Scaling Policies.\n"
                },
                "sysctlParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Taints indicates the kubernetes taints for nodes in this instance group.\n"
                },
                "tenancy": {
                    "type": "string",
                    "description": "- String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eIf specified, this value overrides a value specified in the Cluster's \"spec.updatePolicy\" field.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                },
                "volumeMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupVolumeMount:InstanceGroupVolumeMount"
                    },
                    "description": "- List(volume_mount_spec) - VolumeMounts a collection of volume mounts.\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kops:index/InstanceGroupVolume:InstanceGroupVolume"
                    },
                    "description": "- List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.\n"
                },
                "warmPool": {
                    "$ref": "#/types/kops:index/InstanceGroupWarmPool:InstanceGroupWarmPool",
                    "description": "- warm_pool_spec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List(String) - Zones is the names of the Zones where machines in this instance group should be placed\u003cbr /\u003eThis is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.\n"
                }
            },
            "requiredInputs": [
                "clusterName",
                "machineType",
                "maxSize",
                "minSize",
                "role",
                "subnets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceGroup resources.\n",
                "properties": {
                    "additionalSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).\n"
                    },
                    "additionalUserDatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupAdditionalUserData:InstanceGroupAdditionalUserData"
                        },
                        "description": "- List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.\n"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Annotations is an unstructured key value map stored with a resource that may be\u003cbr /\u003eset by external tools to store and retrieve arbitrary metadata. They are not\u003cbr /\u003equeryable and should be preserved when modifying objects.\n"
                    },
                    "associatePublicIp": {
                        "type": "boolean",
                        "description": "- Bool - AssociatePublicIP is true if we want instances to have a public IP.\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "- Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.\n"
                    },
                    "cloudLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "- (Force new) - String - ClusterName defines the cluster name the instance group belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "compressUserData": {
                        "type": "boolean",
                        "description": "- Bool - CompressUserData compresses parts of the user data to save space.\n"
                    },
                    "containerd": {
                        "$ref": "#/types/kops:index/InstanceGroupContainerd:InstanceGroupContainerd",
                        "description": "- containerd_config - Containerd specifies override configuration for instance group.\n"
                    },
                    "cpuCredits": {
                        "type": "string",
                        "description": "- String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).\n"
                    },
                    "detailedInstanceMonitoring": {
                        "type": "boolean",
                        "description": "- Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).\n"
                    },
                    "externalLoadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupExternalLoadBalancer:InstanceGroupExternalLoadBalancer"
                        },
                        "description": "- List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.\n"
                    },
                    "fileAssets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupFileAsset:InstanceGroupFileAsset"
                        },
                        "description": "- List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.\n"
                    },
                    "gcpProvisioningModel": {
                        "type": "string",
                        "description": "- String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.\u003cbr /\u003eValid values:\u003cbr /\u003e  'STANDARD': (default) standard provisioning with user controlled run time, no discounts\u003cbr /\u003e  'SPOT': heavily discounted, no guaranteed run time.\n"
                    },
                    "guestAccelerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupGuestAccelerator:InstanceGroupGuestAccelerator"
                        },
                        "description": "- List(accelerator_config) - GuestAccelerators configures additional accelerators.\n"
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupHook:InstanceGroupHook"
                        },
                        "description": "- List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.\n"
                    },
                    "iam": {
                        "$ref": "#/types/kops:index/InstanceGroupIam:InstanceGroupIam",
                        "description": "- iam_profile_spec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).\n"
                    },
                    "image": {
                        "type": "string",
                        "description": "- (Computed) - String - Image is the instance (ami etc) we should use.\n"
                    },
                    "instanceInterruptionBehavior": {
                        "type": "string",
                        "description": "- String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,\u003cbr /\u003eor stopped after interruption.\n"
                    },
                    "instanceMetadata": {
                        "$ref": "#/types/kops:index/InstanceGroupInstanceMetadata:InstanceGroupInstanceMetadata",
                        "description": "- instance_metadata_options - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).\n"
                    },
                    "instanceProtection": {
                        "type": "boolean",
                        "description": "- Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.\n"
                    },
                    "kubelet": {
                        "$ref": "#/types/kops:index/InstanceGroupKubelet:InstanceGroupKubelet",
                        "description": "- (Computed) - kubelet_config_spec - Kubelet overrides kubelet config from the ClusterSpec.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - Map of string keys and values that can be used to organize and categorize\u003cbr /\u003e(scope and select) objects. May match selectors of replication controllers\u003cbr /\u003eand services.\n"
                    },
                    "machineType": {
                        "type": "string",
                        "description": "- String - MachineType is the instance class.\n"
                    },
                    "manager": {
                        "type": "string",
                        "description": "- (Computed) - String - Manager determines what is managing the node lifecycle.\n"
                    },
                    "maxInstanceLifetime": {
                        "type": "string",
                        "description": "- Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.\u003cbr /\u003eValue expected must be in form of duration (\"ms\", \"s\", \"m\", \"h\").\n"
                    },
                    "maxPrice": {
                        "type": "string",
                        "description": "- String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "- Int - MaxSize is the maximum size of the pool.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "- Int - MinSize is the minimum size of the pool.\n"
                    },
                    "mixedInstancesPolicy": {
                        "$ref": "#/types/kops:index/InstanceGroupMixedInstancesPolicy:InstanceGroupMixedInstancesPolicy",
                        "description": "- mixed_instances_policy_spec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "- (Force new) - String - Name defines the instance group name.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "- Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.\n"
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - Packages specifies additional packages to be installed.\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "- Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "- String - Type determines the role of instances in this instance group: masters or nodes.\n"
                    },
                    "rollingUpdate": {
                        "$ref": "#/types/kops:index/InstanceGroupRollingUpdate:InstanceGroupRollingUpdate",
                        "description": "- rolling_update - RollingUpdate defines the rolling-update behavior.\n"
                    },
                    "rootVolumeEncryption": {
                        "type": "boolean",
                        "description": "- Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.\n"
                    },
                    "rootVolumeEncryptionKey": {
                        "type": "string",
                        "description": "- String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.\n"
                    },
                    "rootVolumeIops": {
                        "type": "integer",
                        "description": "- Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).\n"
                    },
                    "rootVolumeOptimization": {
                        "type": "boolean",
                        "description": "- Bool - RootVolumeOptimization enables EBS optimization for an instance.\n"
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "- Int - RootVolumeSize is the size of the EBS root volume to use, in GB.\n"
                    },
                    "rootVolumeThroughput": {
                        "type": "integer",
                        "description": "- Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).\n"
                    },
                    "rootVolumeType": {
                        "type": "string",
                        "description": "- String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).\n"
                    },
                    "securityGroupOverride": {
                        "type": "string",
                        "description": "- String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).\n"
                    },
                    "spotDurationInMinutes": {
                        "type": "integer",
                        "description": "- Int - SpotDurationInMinutes reserves a spot block for the period specified.\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.\n"
                    },
                    "suspendProcesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - SuspendProcesses disables the listed Scaling Policies.\n"
                    },
                    "sysctlParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When\u003cbr /\u003especified, each parameter must follow the form variable=value, the way\u003cbr /\u003eit would appear in sysctl.conf.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - Taints indicates the kubernetes taints for nodes in this instance group.\n"
                    },
                    "tenancy": {
                        "type": "string",
                        "description": "- String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "- String - UpdatePolicy determines the policy for applying upgrades automatically.\u003cbr /\u003eIf specified, this value overrides a value specified in the Cluster's \"spec.updatePolicy\" field.\u003cbr /\u003eValid values:\u003cbr /\u003e  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)\u003cbr /\u003e  'external': do not apply updates automatically; they are applied manually or by an external system.\n"
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupVolumeMount:InstanceGroupVolumeMount"
                        },
                        "description": "- List(volume_mount_spec) - VolumeMounts a collection of volume mounts.\n"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/InstanceGroupVolume:InstanceGroupVolume"
                        },
                        "description": "- List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.\n"
                    },
                    "warmPool": {
                        "$ref": "#/types/kops:index/InstanceGroupWarmPool:InstanceGroupWarmPool",
                        "description": "- warm_pool_spec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "- List(String) - Zones is the names of the Zones where machines in this instance group should be placed\u003cbr /\u003eThis is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "kops:index/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "externalPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterExternalPolicy:getClusterExternalPolicy"
                        },
                        "description": "- Map(List(String)) - ExternalPolicies allows the insertion of pre-existing managed policies on IG Roles.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "- String - Name defines the cluster name.\n"
                    },
                    "tagSubnets": {
                        "$ref": "#/types/kops:index/getClusterTagSubnets:getClusterTagSubnets",
                        "description": "- Bool(Nullable) - TagSubnets controls if tags are added to subnets to enable use by load balancers (AWS only). Default: true.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "additionalNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalPolicies": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "additionalSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterAddon:getClusterAddon"
                        }
                    },
                    "adminSshKey": {
                        "type": "string"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "apis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterApi:getClusterApi"
                        }
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterAsset:getClusterAsset"
                        }
                    },
                    "authentications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterAuthentication:getClusterAuthentication"
                        }
                    },
                    "authorizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterAuthorization:getClusterAuthorization"
                        }
                    },
                    "awsLoadBalancerControllers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterAwsLoadBalancerController:getClusterAwsLoadBalancerController"
                        }
                    },
                    "certManagers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterCertManager:getClusterCertManager"
                        }
                    },
                    "channel": {
                        "type": "string"
                    },
                    "cloudConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterCloudConfig:getClusterCloudConfig"
                        }
                    },
                    "cloudLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "cloudProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterCloudProvider:getClusterCloudProvider"
                        }
                    },
                    "clusterAutoscalers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterClusterAutoscaler:getClusterClusterAutoscaler"
                        }
                    },
                    "clusterDnsDomain": {
                        "type": "string"
                    },
                    "configBase": {
                        "type": "string"
                    },
                    "configStore": {
                        "type": "string"
                    },
                    "containerRuntime": {
                        "type": "string"
                    },
                    "containerds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterContainerd:getClusterContainerd"
                        }
                    },
                    "dnsZone": {
                        "type": "string"
                    },
                    "dockers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterDocker:getClusterDocker"
                        }
                    },
                    "egressProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterEgressProxy:getClusterEgressProxy"
                        }
                    },
                    "encryptionConfig": {
                        "type": "boolean"
                    },
                    "etcdClusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterEtcdCluster:getClusterEtcdCluster"
                        }
                    },
                    "externalCloudControllerManagers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterExternalCloudControllerManager:getClusterExternalCloudControllerManager"
                        }
                    },
                    "externalDns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterExternalDn:getClusterExternalDn"
                        }
                    },
                    "externalPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterExternalPolicy:getClusterExternalPolicy"
                        }
                    },
                    "fileAssets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterFileAsset:getClusterFileAsset"
                        }
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterHook:getClusterHook"
                        }
                    },
                    "iams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterIam:getClusterIam"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isolateMasters": {
                        "type": "boolean"
                    },
                    "karpenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKarpenter:getClusterKarpenter"
                        }
                    },
                    "keyStore": {
                        "type": "string"
                    },
                    "kubeApiServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubeApiServer:getClusterKubeApiServer"
                        }
                    },
                    "kubeControllerManagers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubeControllerManager:getClusterKubeControllerManager"
                        }
                    },
                    "kubeDns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubeDn:getClusterKubeDn"
                        }
                    },
                    "kubeProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubeProxy:getClusterKubeProxy"
                        }
                    },
                    "kubeSchedulers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubeScheduler:getClusterKubeScheduler"
                        }
                    },
                    "kubelets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterKubelet:getClusterKubelet"
                        }
                    },
                    "kubernetesApiAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubernetesVersion": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "masterInternalName": {
                        "type": "string"
                    },
                    "masterKubelets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterMasterKubelet:getClusterMasterKubelet"
                        }
                    },
                    "masterPublicName": {
                        "type": "string"
                    },
                    "metricsServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterMetricsServer:getClusterMetricsServer"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkCidr": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "networkings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterNetworking:getClusterNetworking"
                        }
                    },
                    "nodeAuthorizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterNodeAuthorization:getClusterNodeAuthorization"
                        }
                    },
                    "nodePortAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nodeProblemDetectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterNodeProblemDetector:getClusterNodeProblemDetector"
                        }
                    },
                    "nodeTerminationHandlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterNodeTerminationHandler:getClusterNodeTerminationHandler"
                        }
                    },
                    "nonMasqueradeCidr": {
                        "type": "string"
                    },
                    "ntps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterNtp:getClusterNtp"
                        }
                    },
                    "podCidr": {
                        "type": "string"
                    },
                    "podIdentityWebhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterPodIdentityWebhook:getClusterPodIdentityWebhook"
                        }
                    },
                    "project": {
                        "type": "string"
                    },
                    "rollingUpdates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterRollingUpdate:getClusterRollingUpdate"
                        }
                    },
                    "secretStore": {
                        "type": "string"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterSecret:getClusterSecret"
                        }
                    },
                    "serviceAccountIssuerDiscoveries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterServiceAccountIssuerDiscovery:getClusterServiceAccountIssuerDiscovery"
                        }
                    },
                    "serviceClusterIpRange": {
                        "type": "string"
                    },
                    "snapshotControllers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterSnapshotController:getClusterSnapshotController"
                        }
                    },
                    "sshAccesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sshKeyName": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterSubnet:getClusterSubnet"
                        }
                    },
                    "sysctlParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagSubnets": {
                        "$ref": "#/types/kops:index/getClusterTagSubnets:getClusterTagSubnets"
                    },
                    "topologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterTopology:getClusterTopology"
                        }
                    },
                    "updatePolicy": {
                        "type": "string"
                    },
                    "useHostCertificates": {
                        "type": "boolean"
                    },
                    "warmPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getClusterWarmPool:getClusterWarmPool"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "additionalNetworkCidrs",
                    "additionalPolicies",
                    "additionalSans",
                    "addons",
                    "adminSshKey",
                    "annotations",
                    "apis",
                    "assets",
                    "authentications",
                    "authorizations",
                    "awsLoadBalancerControllers",
                    "certManagers",
                    "channel",
                    "cloudConfigs",
                    "cloudLabels",
                    "cloudProviders",
                    "clusterAutoscalers",
                    "clusterDnsDomain",
                    "configBase",
                    "configStore",
                    "containerRuntime",
                    "containerds",
                    "dnsZone",
                    "dockers",
                    "egressProxies",
                    "encryptionConfig",
                    "etcdClusters",
                    "externalCloudControllerManagers",
                    "externalDns",
                    "externalPolicies",
                    "fileAssets",
                    "hooks",
                    "iams",
                    "isolateMasters",
                    "karpenters",
                    "keyStore",
                    "kubeApiServers",
                    "kubeControllerManagers",
                    "kubeDns",
                    "kubeProxies",
                    "kubeSchedulers",
                    "kubelets",
                    "kubernetesApiAccesses",
                    "kubernetesVersion",
                    "labels",
                    "masterInternalName",
                    "masterKubelets",
                    "masterPublicName",
                    "metricsServers",
                    "name",
                    "networkCidr",
                    "networkId",
                    "networkings",
                    "nodeAuthorizations",
                    "nodePortAccesses",
                    "nodeProblemDetectors",
                    "nodeTerminationHandlers",
                    "nonMasqueradeCidr",
                    "ntps",
                    "podCidr",
                    "podIdentityWebhooks",
                    "project",
                    "rollingUpdates",
                    "secretStore",
                    "secrets",
                    "serviceAccountIssuerDiscoveries",
                    "serviceClusterIpRange",
                    "snapshotControllers",
                    "sshAccesses",
                    "sshKeyName",
                    "subnets",
                    "sysctlParameters",
                    "topologies",
                    "updatePolicy",
                    "useHostCertificates",
                    "warmPools",
                    "id"
                ]
            }
        },
        "kops:index/getClusterStatus:getClusterStatus": {
            "description": "## # kops.getClusterStatus\n\nProvides a kOps cluster status data source.\n\nThis data source assumes the cluster has been applied (or updated) see [kops.ClusterUpdater](https://www.terraform.io/docs/resources/cluster_updater).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClusterStatus.\n",
                "properties": {
                    "clusterName": {
                        "type": "string",
                        "description": "- String - ClusterName defines the target cluster name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClusterStatus.\n",
                "properties": {
                    "clusterName": {
                        "type": "string"
                    },
                    "exists": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isValid": {
                        "type": "boolean"
                    },
                    "needsUpdate": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clusterName",
                    "exists",
                    "instanceGroups",
                    "isValid",
                    "needsUpdate",
                    "id"
                ]
            }
        },
        "kops:index/getInstanceGroup:getInstanceGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceGroup.\n",
                "properties": {
                    "clusterName": {
                        "type": "string",
                        "description": "- String - ClusterName defines the cluster name the instance group belongs to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "- String - Name defines the instance group name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterName",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceGroup.\n",
                "properties": {
                    "additionalSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalUserDatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupAdditionalUserData:getInstanceGroupAdditionalUserData"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "associatePublicIp": {
                        "type": "boolean"
                    },
                    "autoscale": {
                        "type": "boolean"
                    },
                    "cloudLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "clusterName": {
                        "type": "string"
                    },
                    "compressUserData": {
                        "type": "boolean"
                    },
                    "containerds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupContainerd:getInstanceGroupContainerd"
                        }
                    },
                    "cpuCredits": {
                        "type": "string"
                    },
                    "detailedInstanceMonitoring": {
                        "type": "boolean"
                    },
                    "externalLoadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupExternalLoadBalancer:getInstanceGroupExternalLoadBalancer"
                        }
                    },
                    "fileAssets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupFileAsset:getInstanceGroupFileAsset"
                        }
                    },
                    "gcpProvisioningModel": {
                        "type": "string"
                    },
                    "guestAccelerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupGuestAccelerator:getInstanceGroupGuestAccelerator"
                        }
                    },
                    "hooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupHook:getInstanceGroupHook"
                        }
                    },
                    "iams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupIam:getInstanceGroupIam"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "image": {
                        "type": "string"
                    },
                    "instanceInterruptionBehavior": {
                        "type": "string"
                    },
                    "instanceMetadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupInstanceMetadata:getInstanceGroupInstanceMetadata"
                        }
                    },
                    "instanceProtection": {
                        "type": "boolean"
                    },
                    "kubelets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupKubelet:getInstanceGroupKubelet"
                        }
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "machineType": {
                        "type": "string"
                    },
                    "manager": {
                        "type": "string"
                    },
                    "maxInstanceLifetime": {
                        "type": "string"
                    },
                    "maxPrice": {
                        "type": "string"
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "mixedInstancesPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupMixedInstancesPolicy:getInstanceGroupMixedInstancesPolicy"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "type": "string"
                    },
                    "rollingUpdates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupRollingUpdate:getInstanceGroupRollingUpdate"
                        }
                    },
                    "rootVolumeEncryption": {
                        "type": "boolean"
                    },
                    "rootVolumeEncryptionKey": {
                        "type": "string"
                    },
                    "rootVolumeIops": {
                        "type": "integer"
                    },
                    "rootVolumeOptimization": {
                        "type": "boolean"
                    },
                    "rootVolumeSize": {
                        "type": "integer"
                    },
                    "rootVolumeThroughput": {
                        "type": "integer"
                    },
                    "rootVolumeType": {
                        "type": "string"
                    },
                    "securityGroupOverride": {
                        "type": "string"
                    },
                    "spotDurationInMinutes": {
                        "type": "integer"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "suspendProcesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sysctlParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenancy": {
                        "type": "string"
                    },
                    "updatePolicy": {
                        "type": "string"
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupVolumeMount:getInstanceGroupVolumeMount"
                        }
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupVolume:getInstanceGroupVolume"
                        }
                    },
                    "warmPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kops:index/getInstanceGroupWarmPool:getInstanceGroupWarmPool"
                        }
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "additionalSecurityGroups",
                    "additionalUserDatas",
                    "annotations",
                    "associatePublicIp",
                    "autoscale",
                    "cloudLabels",
                    "clusterName",
                    "compressUserData",
                    "containerds",
                    "cpuCredits",
                    "detailedInstanceMonitoring",
                    "externalLoadBalancers",
                    "fileAssets",
                    "gcpProvisioningModel",
                    "guestAccelerators",
                    "hooks",
                    "iams",
                    "image",
                    "instanceInterruptionBehavior",
                    "instanceMetadatas",
                    "instanceProtection",
                    "kubelets",
                    "labels",
                    "machineType",
                    "manager",
                    "maxInstanceLifetime",
                    "maxPrice",
                    "maxSize",
                    "minSize",
                    "mixedInstancesPolicies",
                    "name",
                    "nodeLabels",
                    "packages",
                    "role",
                    "rollingUpdates",
                    "rootVolumeEncryption",
                    "rootVolumeEncryptionKey",
                    "rootVolumeIops",
                    "rootVolumeOptimization",
                    "rootVolumeSize",
                    "rootVolumeThroughput",
                    "rootVolumeType",
                    "securityGroupOverride",
                    "spotDurationInMinutes",
                    "subnets",
                    "suspendProcesses",
                    "sysctlParameters",
                    "taints",
                    "tenancy",
                    "updatePolicy",
                    "volumeMounts",
                    "volumes",
                    "warmPools",
                    "zones",
                    "id"
                ]
            }
        },
        "kops:index/getKubeConfig:getKubeConfig": {
            "description": "## # kops.getKubeConfig\n\nProvides a kOps kube config data source.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as kops from \"@pulumi/kops\";\n\nconst kubeConfig = kops.getKubeConfig({\n    clusterName: \"cluster.example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_kops as kops\n\nkube_config = kops.get_kube_config(cluster_name=\"cluster.example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Kops = Pulumi.Kops;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kubeConfig = Kops.GetKubeConfig.Invoke(new()\n    {\n        ClusterName = \"cluster.example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-kops/sdk/go/kops\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := kops.GetKubeConfig(ctx, \u0026GetKubeConfigArgs{\n\t\t\tClusterName: \"cluster.example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.kops.KopsFunctions;\nimport com.pulumi.kops.inputs.GetKubeConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kubeConfig = KopsFunctions.getKubeConfig(GetKubeConfigArgs.builder()\n            .clusterName(\"cluster.example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kubeConfig: # then you can configure another provider based on the kube_config data source\n    Fn::Invoke:\n      Function: kops:getKubeConfig\n      Arguments:\n        clusterName: cluster.example.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeConfig.\n",
                "properties": {
                    "admin": {
                        "type": "integer",
                        "description": "- (Computed) - Int - Admin is the cluster admin user credential lifetime.\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "- String - The cluster name.\n"
                    },
                    "internal": {
                        "type": "boolean",
                        "description": "- (Computed) - Bool - Internal use the cluster's internal DNS name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeConfig.\n",
                "properties": {
                    "admin": {
                        "type": "integer"
                    },
                    "caCerts": {
                        "type": "string"
                    },
                    "clientCert": {
                        "type": "string"
                    },
                    "clientKey": {
                        "type": "string"
                    },
                    "clusterName": {
                        "type": "string"
                    },
                    "context": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "internal": {
                        "type": "boolean"
                    },
                    "kubePassword": {
                        "type": "string"
                    },
                    "kubeUser": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "admin",
                    "caCerts",
                    "clientCert",
                    "clientKey",
                    "clusterName",
                    "context",
                    "internal",
                    "kubePassword",
                    "kubeUser",
                    "namespace",
                    "server",
                    "id"
                ]
            }
        }
    }
}