// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # getClusterStatus
//
// Provides a kOps cluster status data source.
//
// This data source assumes the cluster has been applied (or updated) see [ClusterUpdater](https://www.terraform.io/docs/resources/cluster_updater).
func GetClusterStatus(ctx *pulumi.Context, args *GetClusterStatusArgs, opts ...pulumi.InvokeOption) (*GetClusterStatusResult, error) {
	var rv GetClusterStatusResult
	err := ctx.Invoke("kops:index/getClusterStatus:getClusterStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterStatus.
type GetClusterStatusArgs struct {
	// - String - ClusterName defines the target cluster name.
	ClusterName string `pulumi:"clusterName"`
}

// A collection of values returned by getClusterStatus.
type GetClusterStatusResult struct {
	ClusterName string `pulumi:"clusterName"`
	Exists      bool   `pulumi:"exists"`
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	InstanceGroups []string `pulumi:"instanceGroups"`
	IsValid        bool     `pulumi:"isValid"`
	NeedsUpdate    bool     `pulumi:"needsUpdate"`
}

func GetClusterStatusOutput(ctx *pulumi.Context, args GetClusterStatusOutputArgs, opts ...pulumi.InvokeOption) GetClusterStatusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterStatusResult, error) {
			args := v.(GetClusterStatusArgs)
			r, err := GetClusterStatus(ctx, &args, opts...)
			var s GetClusterStatusResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClusterStatusResultOutput)
}

// A collection of arguments for invoking getClusterStatus.
type GetClusterStatusOutputArgs struct {
	// - String - ClusterName defines the target cluster name.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
}

func (GetClusterStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStatusArgs)(nil)).Elem()
}

// A collection of values returned by getClusterStatus.
type GetClusterStatusResultOutput struct{ *pulumi.OutputState }

func (GetClusterStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStatusResult)(nil)).Elem()
}

func (o GetClusterStatusResultOutput) ToGetClusterStatusResultOutput() GetClusterStatusResultOutput {
	return o
}

func (o GetClusterStatusResultOutput) ToGetClusterStatusResultOutputWithContext(ctx context.Context) GetClusterStatusResultOutput {
	return o
}

func (o GetClusterStatusResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterStatusResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClusterStatusResultOutput) Exists() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterStatusResult) bool { return v.Exists }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterStatusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterStatusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterStatusResultOutput) InstanceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterStatusResult) []string { return v.InstanceGroups }).(pulumi.StringArrayOutput)
}

func (o GetClusterStatusResultOutput) IsValid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterStatusResult) bool { return v.IsValid }).(pulumi.BoolOutput)
}

func (o GetClusterStatusResultOutput) NeedsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterStatusResult) bool { return v.NeedsUpdate }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterStatusResultOutput{})
}
