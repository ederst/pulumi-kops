// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * You can import an existing cluster by creating a `kops_instance_group` configuration
 *
 * ```sh
 *  $ pulumi import kops:index/instanceGroup:InstanceGroup and running the `terraform import` command
 * ```
 *
 *  1. Create a terraform configuration:
 *
 *  hcl
 *
 *  provider "kops" {
 *
 *  state_store = "s3://cluster.example.com"
 *
 *  }
 *
 *  resource "kops_instance_group" "ig-0" {
 *
 *  cluster_name = "cluster.example.com"
 *
 *  name
 *
 *  = "ig-0"
 *
 *  // ....
 *
 *  }
 *
 * ```sh
 *  $ pulumi import kops:index/instanceGroup:InstanceGroup
 *
 * Run `terraform import`
 * ```
 *
 * ```sh
 *  $ pulumi import kops:index/instanceGroup:InstanceGroup kops_instance_group.ig-0 cluster.example.com/ig-0
 * ```
 *
 *  ~> The id of the instance group to be imported must be given in the
 *
 * `cluster name/instance group name` format.
 */
export class InstanceGroup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceGroupState, opts?: pulumi.CustomResourceOptions): InstanceGroup {
        return new InstanceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kops:index/instanceGroup:InstanceGroup';

    /**
     * Returns true if the given object is an instance of InstanceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceGroup.__pulumiType;
    }

    /**
     * - List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).
     */
    public readonly additionalSecurityGroups!: pulumi.Output<string[] | undefined>;
    /**
     * - List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.
     */
    public readonly additionalUserDatas!: pulumi.Output<outputs.InstanceGroupAdditionalUserData[] | undefined>;
    /**
     * - Map(String) - Annotations is an unstructured key value map stored with a resource that may be<br />set by external tools to store and retrieve arbitrary metadata. They are not<br />queryable and should be preserved when modifying objects.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * - Bool - AssociatePublicIP is true if we want instances to have a public IP.
     */
    public readonly associatePublicIp!: pulumi.Output<boolean | undefined>;
    /**
     * - Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.
     */
    public readonly autoscale!: pulumi.Output<boolean | undefined>;
    /**
     * - Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.
     */
    public readonly cloudLabels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * - (Force new) - String - ClusterName defines the cluster name the instance group belongs to.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * - Bool - CompressUserData compresses parts of the user data to save space.
     */
    public readonly compressUserData!: pulumi.Output<boolean | undefined>;
    /**
     * - containerdConfig - Containerd specifies override configuration for instance group.
     */
    public readonly containerd!: pulumi.Output<outputs.InstanceGroupContainerd | undefined>;
    /**
     * - String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).
     */
    public readonly cpuCredits!: pulumi.Output<string | undefined>;
    /**
     * - Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).
     */
    public readonly detailedInstanceMonitoring!: pulumi.Output<boolean | undefined>;
    /**
     * - List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.
     */
    public readonly externalLoadBalancers!: pulumi.Output<outputs.InstanceGroupExternalLoadBalancer[] | undefined>;
    /**
     * - List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.
     */
    public readonly fileAssets!: pulumi.Output<outputs.InstanceGroupFileAsset[] | undefined>;
    /**
     * - String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.<br />Valid values:<br />  'STANDARD': (default) standard provisioning with user controlled run time, no discounts<br />  'SPOT': heavily discounted, no guaranteed run time.
     */
    public readonly gcpProvisioningModel!: pulumi.Output<string | undefined>;
    /**
     * - List(accelerator_config) - GuestAccelerators configures additional accelerators.
     */
    public readonly guestAccelerators!: pulumi.Output<outputs.InstanceGroupGuestAccelerator[] | undefined>;
    /**
     * - List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.
     */
    public readonly hooks!: pulumi.Output<outputs.InstanceGroupHook[] | undefined>;
    /**
     * - iamProfileSpec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).
     */
    public readonly iam!: pulumi.Output<outputs.InstanceGroupIam | undefined>;
    /**
     * - (Computed) - String - Image is the instance (ami etc) we should use.
     */
    public readonly image!: pulumi.Output<string>;
    /**
     * - String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,<br />or stopped after interruption.
     */
    public readonly instanceInterruptionBehavior!: pulumi.Output<string | undefined>;
    /**
     * - instanceMetadataOptions - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).
     */
    public readonly instanceMetadata!: pulumi.Output<outputs.InstanceGroupInstanceMetadata | undefined>;
    /**
     * - Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.
     */
    public readonly instanceProtection!: pulumi.Output<boolean | undefined>;
    /**
     * - (Computed) - kubeletConfigSpec - Kubelet overrides kubelet config from the ClusterSpec.
     */
    public readonly kubelet!: pulumi.Output<outputs.InstanceGroupKubelet>;
    /**
     * - Map(String) - Map of string keys and values that can be used to organize and categorize<br />(scope and select) objects. May match selectors of replication controllers<br />and services.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * - String - MachineType is the instance class.
     */
    public readonly machineType!: pulumi.Output<string>;
    /**
     * - (Computed) - String - Manager determines what is managing the node lifecycle.
     */
    public readonly manager!: pulumi.Output<string>;
    /**
     * - Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.<br />Value expected must be in form of duration ("ms", "s", "m", "h").
     */
    public readonly maxInstanceLifetime!: pulumi.Output<string | undefined>;
    /**
     * - String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.
     */
    public readonly maxPrice!: pulumi.Output<string | undefined>;
    /**
     * - Int - MaxSize is the maximum size of the pool.
     */
    public readonly maxSize!: pulumi.Output<number>;
    /**
     * - Int - MinSize is the minimum size of the pool.
     */
    public readonly minSize!: pulumi.Output<number>;
    /**
     * - mixedInstancesPolicySpec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).
     */
    public readonly mixedInstancesPolicy!: pulumi.Output<outputs.InstanceGroupMixedInstancesPolicy | undefined>;
    /**
     * - (Force new) - String - Name defines the instance group name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * - Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.
     */
    public readonly nodeLabels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * - List(String) - Packages specifies additional packages to be installed.
     */
    public readonly packages!: pulumi.Output<string[] | undefined>;
    /**
     * - Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * - String - Type determines the role of instances in this instance group: masters or nodes.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * - rollingUpdate - RollingUpdate defines the rolling-update behavior.
     */
    public readonly rollingUpdate!: pulumi.Output<outputs.InstanceGroupRollingUpdate | undefined>;
    /**
     * - Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.
     */
    public readonly rootVolumeEncryption!: pulumi.Output<boolean | undefined>;
    /**
     * - String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.
     */
    public readonly rootVolumeEncryptionKey!: pulumi.Output<string | undefined>;
    /**
     * - Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).
     */
    public readonly rootVolumeIops!: pulumi.Output<number | undefined>;
    /**
     * - Bool - RootVolumeOptimization enables EBS optimization for an instance.
     */
    public readonly rootVolumeOptimization!: pulumi.Output<boolean | undefined>;
    /**
     * - Int - RootVolumeSize is the size of the EBS root volume to use, in GB.
     */
    public readonly rootVolumeSize!: pulumi.Output<number | undefined>;
    /**
     * - Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).
     */
    public readonly rootVolumeThroughput!: pulumi.Output<number | undefined>;
    /**
     * - String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).
     */
    public readonly rootVolumeType!: pulumi.Output<string | undefined>;
    /**
     * - String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).
     */
    public readonly securityGroupOverride!: pulumi.Output<string | undefined>;
    /**
     * - Int - SpotDurationInMinutes reserves a spot block for the period specified.
     */
    public readonly spotDurationInMinutes!: pulumi.Output<number | undefined>;
    /**
     * - List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.
     */
    public readonly subnets!: pulumi.Output<string[]>;
    /**
     * - List(String) - SuspendProcesses disables the listed Scaling Policies.
     */
    public readonly suspendProcesses!: pulumi.Output<string[] | undefined>;
    /**
     * - List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When<br />specified, each parameter must follow the form variable=value, the way<br />it would appear in sysctl.conf.
     */
    public readonly sysctlParameters!: pulumi.Output<string[] | undefined>;
    /**
     * - List(String) - Taints indicates the kubernetes taints for nodes in this instance group.
     */
    public readonly taints!: pulumi.Output<string[] | undefined>;
    /**
     * - String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.
     */
    public readonly tenancy!: pulumi.Output<string | undefined>;
    /**
     * - String - UpdatePolicy determines the policy for applying upgrades automatically.<br />If specified, this value overrides a value specified in the Cluster's "spec.updatePolicy" field.<br />Valid values:<br />  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)<br />  'external': do not apply updates automatically; they are applied manually or by an external system.
     */
    public readonly updatePolicy!: pulumi.Output<string | undefined>;
    /**
     * - List(volume_mount_spec) - VolumeMounts a collection of volume mounts.
     */
    public readonly volumeMounts!: pulumi.Output<outputs.InstanceGroupVolumeMount[] | undefined>;
    /**
     * - List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.
     */
    public readonly volumes!: pulumi.Output<outputs.InstanceGroupVolume[] | undefined>;
    /**
     * - warmPoolSpec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).
     */
    public readonly warmPool!: pulumi.Output<outputs.InstanceGroupWarmPool | undefined>;
    /**
     * - List(String) - Zones is the names of the Zones where machines in this instance group should be placed<br />This is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a InstanceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceGroupArgs | InstanceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceGroupState | undefined;
            resourceInputs["additionalSecurityGroups"] = state ? state.additionalSecurityGroups : undefined;
            resourceInputs["additionalUserDatas"] = state ? state.additionalUserDatas : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["associatePublicIp"] = state ? state.associatePublicIp : undefined;
            resourceInputs["autoscale"] = state ? state.autoscale : undefined;
            resourceInputs["cloudLabels"] = state ? state.cloudLabels : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["compressUserData"] = state ? state.compressUserData : undefined;
            resourceInputs["containerd"] = state ? state.containerd : undefined;
            resourceInputs["cpuCredits"] = state ? state.cpuCredits : undefined;
            resourceInputs["detailedInstanceMonitoring"] = state ? state.detailedInstanceMonitoring : undefined;
            resourceInputs["externalLoadBalancers"] = state ? state.externalLoadBalancers : undefined;
            resourceInputs["fileAssets"] = state ? state.fileAssets : undefined;
            resourceInputs["gcpProvisioningModel"] = state ? state.gcpProvisioningModel : undefined;
            resourceInputs["guestAccelerators"] = state ? state.guestAccelerators : undefined;
            resourceInputs["hooks"] = state ? state.hooks : undefined;
            resourceInputs["iam"] = state ? state.iam : undefined;
            resourceInputs["image"] = state ? state.image : undefined;
            resourceInputs["instanceInterruptionBehavior"] = state ? state.instanceInterruptionBehavior : undefined;
            resourceInputs["instanceMetadata"] = state ? state.instanceMetadata : undefined;
            resourceInputs["instanceProtection"] = state ? state.instanceProtection : undefined;
            resourceInputs["kubelet"] = state ? state.kubelet : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["machineType"] = state ? state.machineType : undefined;
            resourceInputs["manager"] = state ? state.manager : undefined;
            resourceInputs["maxInstanceLifetime"] = state ? state.maxInstanceLifetime : undefined;
            resourceInputs["maxPrice"] = state ? state.maxPrice : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["minSize"] = state ? state.minSize : undefined;
            resourceInputs["mixedInstancesPolicy"] = state ? state.mixedInstancesPolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeLabels"] = state ? state.nodeLabels : undefined;
            resourceInputs["packages"] = state ? state.packages : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["rollingUpdate"] = state ? state.rollingUpdate : undefined;
            resourceInputs["rootVolumeEncryption"] = state ? state.rootVolumeEncryption : undefined;
            resourceInputs["rootVolumeEncryptionKey"] = state ? state.rootVolumeEncryptionKey : undefined;
            resourceInputs["rootVolumeIops"] = state ? state.rootVolumeIops : undefined;
            resourceInputs["rootVolumeOptimization"] = state ? state.rootVolumeOptimization : undefined;
            resourceInputs["rootVolumeSize"] = state ? state.rootVolumeSize : undefined;
            resourceInputs["rootVolumeThroughput"] = state ? state.rootVolumeThroughput : undefined;
            resourceInputs["rootVolumeType"] = state ? state.rootVolumeType : undefined;
            resourceInputs["securityGroupOverride"] = state ? state.securityGroupOverride : undefined;
            resourceInputs["spotDurationInMinutes"] = state ? state.spotDurationInMinutes : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
            resourceInputs["suspendProcesses"] = state ? state.suspendProcesses : undefined;
            resourceInputs["sysctlParameters"] = state ? state.sysctlParameters : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["tenancy"] = state ? state.tenancy : undefined;
            resourceInputs["updatePolicy"] = state ? state.updatePolicy : undefined;
            resourceInputs["volumeMounts"] = state ? state.volumeMounts : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
            resourceInputs["warmPool"] = state ? state.warmPool : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as InstanceGroupArgs | undefined;
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.machineType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineType'");
            }
            if ((!args || args.maxSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxSize'");
            }
            if ((!args || args.minSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minSize'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            if ((!args || args.subnets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnets'");
            }
            resourceInputs["additionalSecurityGroups"] = args ? args.additionalSecurityGroups : undefined;
            resourceInputs["additionalUserDatas"] = args ? args.additionalUserDatas : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["associatePublicIp"] = args ? args.associatePublicIp : undefined;
            resourceInputs["autoscale"] = args ? args.autoscale : undefined;
            resourceInputs["cloudLabels"] = args ? args.cloudLabels : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["compressUserData"] = args ? args.compressUserData : undefined;
            resourceInputs["containerd"] = args ? args.containerd : undefined;
            resourceInputs["cpuCredits"] = args ? args.cpuCredits : undefined;
            resourceInputs["detailedInstanceMonitoring"] = args ? args.detailedInstanceMonitoring : undefined;
            resourceInputs["externalLoadBalancers"] = args ? args.externalLoadBalancers : undefined;
            resourceInputs["fileAssets"] = args ? args.fileAssets : undefined;
            resourceInputs["gcpProvisioningModel"] = args ? args.gcpProvisioningModel : undefined;
            resourceInputs["guestAccelerators"] = args ? args.guestAccelerators : undefined;
            resourceInputs["hooks"] = args ? args.hooks : undefined;
            resourceInputs["iam"] = args ? args.iam : undefined;
            resourceInputs["image"] = args ? args.image : undefined;
            resourceInputs["instanceInterruptionBehavior"] = args ? args.instanceInterruptionBehavior : undefined;
            resourceInputs["instanceMetadata"] = args ? args.instanceMetadata : undefined;
            resourceInputs["instanceProtection"] = args ? args.instanceProtection : undefined;
            resourceInputs["kubelet"] = args ? args.kubelet : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["machineType"] = args ? args.machineType : undefined;
            resourceInputs["manager"] = args ? args.manager : undefined;
            resourceInputs["maxInstanceLifetime"] = args ? args.maxInstanceLifetime : undefined;
            resourceInputs["maxPrice"] = args ? args.maxPrice : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["minSize"] = args ? args.minSize : undefined;
            resourceInputs["mixedInstancesPolicy"] = args ? args.mixedInstancesPolicy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeLabels"] = args ? args.nodeLabels : undefined;
            resourceInputs["packages"] = args ? args.packages : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["rollingUpdate"] = args ? args.rollingUpdate : undefined;
            resourceInputs["rootVolumeEncryption"] = args ? args.rootVolumeEncryption : undefined;
            resourceInputs["rootVolumeEncryptionKey"] = args ? args.rootVolumeEncryptionKey : undefined;
            resourceInputs["rootVolumeIops"] = args ? args.rootVolumeIops : undefined;
            resourceInputs["rootVolumeOptimization"] = args ? args.rootVolumeOptimization : undefined;
            resourceInputs["rootVolumeSize"] = args ? args.rootVolumeSize : undefined;
            resourceInputs["rootVolumeThroughput"] = args ? args.rootVolumeThroughput : undefined;
            resourceInputs["rootVolumeType"] = args ? args.rootVolumeType : undefined;
            resourceInputs["securityGroupOverride"] = args ? args.securityGroupOverride : undefined;
            resourceInputs["spotDurationInMinutes"] = args ? args.spotDurationInMinutes : undefined;
            resourceInputs["subnets"] = args ? args.subnets : undefined;
            resourceInputs["suspendProcesses"] = args ? args.suspendProcesses : undefined;
            resourceInputs["sysctlParameters"] = args ? args.sysctlParameters : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["tenancy"] = args ? args.tenancy : undefined;
            resourceInputs["updatePolicy"] = args ? args.updatePolicy : undefined;
            resourceInputs["volumeMounts"] = args ? args.volumeMounts : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["warmPool"] = args ? args.warmPool : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceGroup resources.
 */
export interface InstanceGroupState {
    /**
     * - List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).
     */
    additionalSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.
     */
    additionalUserDatas?: pulumi.Input<pulumi.Input<inputs.InstanceGroupAdditionalUserData>[]>;
    /**
     * - Map(String) - Annotations is an unstructured key value map stored with a resource that may be<br />set by external tools to store and retrieve arbitrary metadata. They are not<br />queryable and should be preserved when modifying objects.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - Bool - AssociatePublicIP is true if we want instances to have a public IP.
     */
    associatePublicIp?: pulumi.Input<boolean>;
    /**
     * - Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * - Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.
     */
    cloudLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Force new) - String - ClusterName defines the cluster name the instance group belongs to.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * - Bool - CompressUserData compresses parts of the user data to save space.
     */
    compressUserData?: pulumi.Input<boolean>;
    /**
     * - containerdConfig - Containerd specifies override configuration for instance group.
     */
    containerd?: pulumi.Input<inputs.InstanceGroupContainerd>;
    /**
     * - String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).
     */
    cpuCredits?: pulumi.Input<string>;
    /**
     * - Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).
     */
    detailedInstanceMonitoring?: pulumi.Input<boolean>;
    /**
     * - List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.
     */
    externalLoadBalancers?: pulumi.Input<pulumi.Input<inputs.InstanceGroupExternalLoadBalancer>[]>;
    /**
     * - List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.
     */
    fileAssets?: pulumi.Input<pulumi.Input<inputs.InstanceGroupFileAsset>[]>;
    /**
     * - String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.<br />Valid values:<br />  'STANDARD': (default) standard provisioning with user controlled run time, no discounts<br />  'SPOT': heavily discounted, no guaranteed run time.
     */
    gcpProvisioningModel?: pulumi.Input<string>;
    /**
     * - List(accelerator_config) - GuestAccelerators configures additional accelerators.
     */
    guestAccelerators?: pulumi.Input<pulumi.Input<inputs.InstanceGroupGuestAccelerator>[]>;
    /**
     * - List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.
     */
    hooks?: pulumi.Input<pulumi.Input<inputs.InstanceGroupHook>[]>;
    /**
     * - iamProfileSpec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).
     */
    iam?: pulumi.Input<inputs.InstanceGroupIam>;
    /**
     * - (Computed) - String - Image is the instance (ami etc) we should use.
     */
    image?: pulumi.Input<string>;
    /**
     * - String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,<br />or stopped after interruption.
     */
    instanceInterruptionBehavior?: pulumi.Input<string>;
    /**
     * - instanceMetadataOptions - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).
     */
    instanceMetadata?: pulumi.Input<inputs.InstanceGroupInstanceMetadata>;
    /**
     * - Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.
     */
    instanceProtection?: pulumi.Input<boolean>;
    /**
     * - (Computed) - kubeletConfigSpec - Kubelet overrides kubelet config from the ClusterSpec.
     */
    kubelet?: pulumi.Input<inputs.InstanceGroupKubelet>;
    /**
     * - Map(String) - Map of string keys and values that can be used to organize and categorize<br />(scope and select) objects. May match selectors of replication controllers<br />and services.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - String - MachineType is the instance class.
     */
    machineType?: pulumi.Input<string>;
    /**
     * - (Computed) - String - Manager determines what is managing the node lifecycle.
     */
    manager?: pulumi.Input<string>;
    /**
     * - Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.<br />Value expected must be in form of duration ("ms", "s", "m", "h").
     */
    maxInstanceLifetime?: pulumi.Input<string>;
    /**
     * - String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.
     */
    maxPrice?: pulumi.Input<string>;
    /**
     * - Int - MaxSize is the maximum size of the pool.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * - Int - MinSize is the minimum size of the pool.
     */
    minSize?: pulumi.Input<number>;
    /**
     * - mixedInstancesPolicySpec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).
     */
    mixedInstancesPolicy?: pulumi.Input<inputs.InstanceGroupMixedInstancesPolicy>;
    /**
     * - (Force new) - String - Name defines the instance group name.
     */
    name?: pulumi.Input<string>;
    /**
     * - Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.
     */
    nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - List(String) - Packages specifies additional packages to be installed.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - Int - Revision is incremented every time the resource changes, this is useful for triggering cluster updater.
     */
    revision?: pulumi.Input<number>;
    /**
     * - String - Type determines the role of instances in this instance group: masters or nodes.
     */
    role?: pulumi.Input<string>;
    /**
     * - rollingUpdate - RollingUpdate defines the rolling-update behavior.
     */
    rollingUpdate?: pulumi.Input<inputs.InstanceGroupRollingUpdate>;
    /**
     * - Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.
     */
    rootVolumeEncryption?: pulumi.Input<boolean>;
    /**
     * - String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.
     */
    rootVolumeEncryptionKey?: pulumi.Input<string>;
    /**
     * - Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).
     */
    rootVolumeIops?: pulumi.Input<number>;
    /**
     * - Bool - RootVolumeOptimization enables EBS optimization for an instance.
     */
    rootVolumeOptimization?: pulumi.Input<boolean>;
    /**
     * - Int - RootVolumeSize is the size of the EBS root volume to use, in GB.
     */
    rootVolumeSize?: pulumi.Input<number>;
    /**
     * - Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).
     */
    rootVolumeThroughput?: pulumi.Input<number>;
    /**
     * - String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).
     */
    rootVolumeType?: pulumi.Input<string>;
    /**
     * - String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).
     */
    securityGroupOverride?: pulumi.Input<string>;
    /**
     * - Int - SpotDurationInMinutes reserves a spot block for the period specified.
     */
    spotDurationInMinutes?: pulumi.Input<number>;
    /**
     * - List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - SuspendProcesses disables the listed Scaling Policies.
     */
    suspendProcesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When<br />specified, each parameter must follow the form variable=value, the way<br />it would appear in sysctl.conf.
     */
    sysctlParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - Taints indicates the kubernetes taints for nodes in this instance group.
     */
    taints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.
     */
    tenancy?: pulumi.Input<string>;
    /**
     * - String - UpdatePolicy determines the policy for applying upgrades automatically.<br />If specified, this value overrides a value specified in the Cluster's "spec.updatePolicy" field.<br />Valid values:<br />  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)<br />  'external': do not apply updates automatically; they are applied manually or by an external system.
     */
    updatePolicy?: pulumi.Input<string>;
    /**
     * - List(volume_mount_spec) - VolumeMounts a collection of volume mounts.
     */
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.InstanceGroupVolumeMount>[]>;
    /**
     * - List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.InstanceGroupVolume>[]>;
    /**
     * - warmPoolSpec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).
     */
    warmPool?: pulumi.Input<inputs.InstanceGroupWarmPool>;
    /**
     * - List(String) - Zones is the names of the Zones where machines in this instance group should be placed<br />This is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a InstanceGroup resource.
 */
export interface InstanceGroupArgs {
    /**
     * - List(String) - AdditionalSecurityGroups attaches additional security groups (e.g. i-123456).
     */
    additionalSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(user_data) - AdditionalUserData is any additional user-data to be passed to the host.
     */
    additionalUserDatas?: pulumi.Input<pulumi.Input<inputs.InstanceGroupAdditionalUserData>[]>;
    /**
     * - Map(String) - Annotations is an unstructured key value map stored with a resource that may be<br />set by external tools to store and retrieve arbitrary metadata. They are not<br />queryable and should be preserved when modifying objects.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - Bool - AssociatePublicIP is true if we want instances to have a public IP.
     */
    associatePublicIp?: pulumi.Input<boolean>;
    /**
     * - Bool - Autoscale determines if autoscaling will be enabled for this instance group if cluster autoscaler is enabled.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * - Map(String) - CloudLabels defines additional tags or labels on cloud provider resources.
     */
    cloudLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Force new) - String - ClusterName defines the cluster name the instance group belongs to.
     */
    clusterName: pulumi.Input<string>;
    /**
     * - Bool - CompressUserData compresses parts of the user data to save space.
     */
    compressUserData?: pulumi.Input<boolean>;
    /**
     * - containerdConfig - Containerd specifies override configuration for instance group.
     */
    containerd?: pulumi.Input<inputs.InstanceGroupContainerd>;
    /**
     * - String - CPUCredits is the credit option for CPU Usage on burstable instance types (AWS only).
     */
    cpuCredits?: pulumi.Input<string>;
    /**
     * - Bool - DetailedInstanceMonitoring defines if detailed-monitoring is enabled (AWS only).
     */
    detailedInstanceMonitoring?: pulumi.Input<boolean>;
    /**
     * - List(load_balancer) - ExternalLoadBalancers define loadbalancers that should be attached to this instance group.
     */
    externalLoadBalancers?: pulumi.Input<pulumi.Input<inputs.InstanceGroupExternalLoadBalancer>[]>;
    /**
     * - List(file_asset_spec) - FileAssets is a collection of file assets for this instance group.
     */
    fileAssets?: pulumi.Input<pulumi.Input<inputs.InstanceGroupFileAsset>[]>;
    /**
     * - String - GCPProvisioningModel: Specifies the provisioning model of the GCP instance.<br />Valid values:<br />  'STANDARD': (default) standard provisioning with user controlled run time, no discounts<br />  'SPOT': heavily discounted, no guaranteed run time.
     */
    gcpProvisioningModel?: pulumi.Input<string>;
    /**
     * - List(accelerator_config) - GuestAccelerators configures additional accelerators.
     */
    guestAccelerators?: pulumi.Input<pulumi.Input<inputs.InstanceGroupGuestAccelerator>[]>;
    /**
     * - List(hook_spec) - Hooks is a list of hooks for this instance group, note: these can override the cluster wide ones if required.
     */
    hooks?: pulumi.Input<pulumi.Input<inputs.InstanceGroupHook>[]>;
    /**
     * - iamProfileSpec - IAMProfileSpec defines the identity of the cloud group IAM profile (AWS only).
     */
    iam?: pulumi.Input<inputs.InstanceGroupIam>;
    /**
     * - (Computed) - String - Image is the instance (ami etc) we should use.
     */
    image?: pulumi.Input<string>;
    /**
     * - String - InstanceInterruptionBehavior defines if a spot instance should be terminated, hibernated,<br />or stopped after interruption.
     */
    instanceInterruptionBehavior?: pulumi.Input<string>;
    /**
     * - instanceMetadataOptions - InstanceMetadata defines the EC2 instance metadata service options (AWS Only).
     */
    instanceMetadata?: pulumi.Input<inputs.InstanceGroupInstanceMetadata>;
    /**
     * - Bool - InstanceProtection makes new instances in an autoscaling group protected from scale in.
     */
    instanceProtection?: pulumi.Input<boolean>;
    /**
     * - (Computed) - kubeletConfigSpec - Kubelet overrides kubelet config from the ClusterSpec.
     */
    kubelet?: pulumi.Input<inputs.InstanceGroupKubelet>;
    /**
     * - Map(String) - Map of string keys and values that can be used to organize and categorize<br />(scope and select) objects. May match selectors of replication controllers<br />and services.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - String - MachineType is the instance class.
     */
    machineType: pulumi.Input<string>;
    /**
     * - (Computed) - String - Manager determines what is managing the node lifecycle.
     */
    manager?: pulumi.Input<string>;
    /**
     * - Duration - MaxInstanceLifetime to the maximum amount of time, in seconds, that an instance can be in service.<br />Value expected must be in form of duration ("ms", "s", "m", "h").
     */
    maxInstanceLifetime?: pulumi.Input<string>;
    /**
     * - String - MaxPrice indicates this is a spot-pricing group, with the specified value as our max-price bid.
     */
    maxPrice?: pulumi.Input<string>;
    /**
     * - Int - MaxSize is the maximum size of the pool.
     */
    maxSize: pulumi.Input<number>;
    /**
     * - Int - MinSize is the minimum size of the pool.
     */
    minSize: pulumi.Input<number>;
    /**
     * - mixedInstancesPolicySpec - MixedInstancesPolicy defined a optional backing of an AWS ASG by a EC2 Fleet (AWS Only).
     */
    mixedInstancesPolicy?: pulumi.Input<inputs.InstanceGroupMixedInstancesPolicy>;
    /**
     * - (Force new) - String - Name defines the instance group name.
     */
    name?: pulumi.Input<string>;
    /**
     * - Map(String) - NodeLabels indicates the kubernetes labels for nodes in this instance group.
     */
    nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - List(String) - Packages specifies additional packages to be installed.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - String - Type determines the role of instances in this instance group: masters or nodes.
     */
    role: pulumi.Input<string>;
    /**
     * - rollingUpdate - RollingUpdate defines the rolling-update behavior.
     */
    rollingUpdate?: pulumi.Input<inputs.InstanceGroupRollingUpdate>;
    /**
     * - Bool - RootVolumeEncryption enables EBS root volume encryption for an instance.
     */
    rootVolumeEncryption?: pulumi.Input<boolean>;
    /**
     * - String - RootVolumeEncryptionKey provides the key identifier for root volume encryption.
     */
    rootVolumeEncryptionKey?: pulumi.Input<string>;
    /**
     * - Int - RootVolumeIOPS is the provisioned IOPS when the volume type is io1, io2 or gp3 (AWS only).
     */
    rootVolumeIops?: pulumi.Input<number>;
    /**
     * - Bool - RootVolumeOptimization enables EBS optimization for an instance.
     */
    rootVolumeOptimization?: pulumi.Input<boolean>;
    /**
     * - Int - RootVolumeSize is the size of the EBS root volume to use, in GB.
     */
    rootVolumeSize?: pulumi.Input<number>;
    /**
     * - Int - RootVolumeThroughput is the volume throughput in MBps when the volume type is gp3 (AWS only).
     */
    rootVolumeThroughput?: pulumi.Input<number>;
    /**
     * - String - RootVolumeType is the type of the EBS root volume to use (e.g. gp2).
     */
    rootVolumeType?: pulumi.Input<string>;
    /**
     * - String - SecurityGroupOverride overrides the default security group created by Kops for this IG (AWS only).
     */
    securityGroupOverride?: pulumi.Input<string>;
    /**
     * - Int - SpotDurationInMinutes reserves a spot block for the period specified.
     */
    spotDurationInMinutes?: pulumi.Input<number>;
    /**
     * - List(String) - Subnets is the names of the Subnets (as specified in the Cluster) where machines in this instance group should be placed.
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - SuspendProcesses disables the listed Scaling Policies.
     */
    suspendProcesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - SysctlParameters will configure kernel parameters using sysctl(8). When<br />specified, each parameter must follow the form variable=value, the way<br />it would appear in sysctl.conf.
     */
    sysctlParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List(String) - Taints indicates the kubernetes taints for nodes in this instance group.
     */
    taints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - String - Describes the tenancy of this instance group. Can be either default or dedicated. Currently only applies to AWS.
     */
    tenancy?: pulumi.Input<string>;
    /**
     * - String - UpdatePolicy determines the policy for applying upgrades automatically.<br />If specified, this value overrides a value specified in the Cluster's "spec.updatePolicy" field.<br />Valid values:<br />  'automatic' (default): apply updates automatically (apply OS security upgrades, avoiding rebooting when possible)<br />  'external': do not apply updates automatically; they are applied manually or by an external system.
     */
    updatePolicy?: pulumi.Input<string>;
    /**
     * - List(volume_mount_spec) - VolumeMounts a collection of volume mounts.
     */
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.InstanceGroupVolumeMount>[]>;
    /**
     * - List(volume_spec) - Volumes is a collection of additional volumes to create for instances within this instance group.
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.InstanceGroupVolume>[]>;
    /**
     * - warmPoolSpec - WarmPool specifies a pool of pre-warmed instances for later use (AWS only).
     */
    warmPool?: pulumi.Input<inputs.InstanceGroupWarmPool>;
    /**
     * - List(String) - Zones is the names of the Zones where machines in this instance group should be placed<br />This is needed for regional subnets (e.g. GCE), to restrict placement to particular zones.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
