// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # kops.getClusterStatus
 *
 * Provides a kOps cluster status data source.
 *
 * This data source assumes the cluster has been applied (or updated) see [kops.ClusterUpdater](https://www.terraform.io/docs/resources/cluster_updater).
 */
export function getClusterStatus(args: GetClusterStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterStatusResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("kops:index/getClusterStatus:getClusterStatus", {
        "clusterName": args.clusterName,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterStatus.
 */
export interface GetClusterStatusArgs {
    /**
     * - String - ClusterName defines the target cluster name.
     */
    clusterName: string;
}

/**
 * A collection of values returned by getClusterStatus.
 */
export interface GetClusterStatusResult {
    readonly clusterName: string;
    readonly exists: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceGroups: string[];
    readonly isValid: boolean;
    readonly needsUpdate: boolean;
}

export function getClusterStatusOutput(args: GetClusterStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterStatusResult> {
    return pulumi.output(args).apply(a => getClusterStatus(a, opts))
}

/**
 * A collection of arguments for invoking getClusterStatus.
 */
export interface GetClusterStatusOutputArgs {
    /**
     * - String - ClusterName defines the target cluster name.
     */
    clusterName: pulumi.Input<string>;
}
