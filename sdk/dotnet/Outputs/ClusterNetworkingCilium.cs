// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kops.Outputs
{

    [OutputType]
    public sealed class ClusterNetworkingCilium
    {
        public readonly ImmutableDictionary<string, string>? AgentPodAnnotations;
        public readonly int? AgentPrometheusPort;
        public readonly bool? AutoDirectNodeRoutes;
        public readonly int? BpfNeighGlobalMax;
        public readonly int? BpfPolicyMapMax;
        public readonly int? BpfctGlobalAnyMax;
        public readonly int? BpfctGlobalTcpMax;
        public readonly string? BpflbAlgorithm;
        public readonly string? BpflbMaglevTableSize;
        public readonly int? BpflbMapMax;
        public readonly bool? BpflbSockHostNsOnly;
        public readonly int? BpfnatGlobalMax;
        public readonly string? ChainingMode;
        public readonly string? ClusterName;
        public readonly string? CpuRequest;
        public readonly bool? Debug;
        public readonly bool? DisableCnpStatusUpdates;
        public readonly bool? DisableEndpointCrd;
        public readonly bool? EnableBpfMasquerade;
        public readonly bool? EnableEncryption;
        public readonly bool? EnableEndpointHealthChecking;
        public readonly bool? EnableHostReachableServices;
        public readonly bool? EnableL7Proxy;
        public readonly bool? EnableNodePort;
        public readonly string? EnablePolicy;
        public readonly bool? EnablePrometheusMetrics;
        public readonly bool EnableRemoteNodeIdentity;
        public readonly bool? EnableServiceTopology;
        public readonly string? EncryptionType;
        public readonly bool? EtcdManaged;
        public readonly Outputs.ClusterNetworkingCiliumHubble? Hubble;
        public readonly string? IdentityAllocationMode;
        public readonly string? IdentityChangeGracePeriod;
        public readonly bool? InstallIptablesRules;
        public readonly string? Ipam;
        public readonly bool? Masquerade;
        public readonly string? MemoryRequest;
        public readonly ImmutableArray<string> Metrics;
        public readonly string? MonitorAggregation;
        public readonly bool PreallocateBpfMaps;
        public readonly string? SidecarIstioProxyImage;
        public readonly string? ToFqdnsDnsRejectResponseCode;
        public readonly bool? ToFqdnsEnablePoller;
        public readonly string? Tunnel;
        public readonly string? Version;

        [OutputConstructor]
        private ClusterNetworkingCilium(
            ImmutableDictionary<string, string>? agentPodAnnotations,

            int? agentPrometheusPort,

            bool? autoDirectNodeRoutes,

            int? bpfNeighGlobalMax,

            int? bpfPolicyMapMax,

            int? bpfctGlobalAnyMax,

            int? bpfctGlobalTcpMax,

            string? bpflbAlgorithm,

            string? bpflbMaglevTableSize,

            int? bpflbMapMax,

            bool? bpflbSockHostNsOnly,

            int? bpfnatGlobalMax,

            string? chainingMode,

            string? clusterName,

            string? cpuRequest,

            bool? debug,

            bool? disableCnpStatusUpdates,

            bool? disableEndpointCrd,

            bool? enableBpfMasquerade,

            bool? enableEncryption,

            bool? enableEndpointHealthChecking,

            bool? enableHostReachableServices,

            bool? enableL7Proxy,

            bool? enableNodePort,

            string? enablePolicy,

            bool? enablePrometheusMetrics,

            bool enableRemoteNodeIdentity,

            bool? enableServiceTopology,

            string? encryptionType,

            bool? etcdManaged,

            Outputs.ClusterNetworkingCiliumHubble? hubble,

            string? identityAllocationMode,

            string? identityChangeGracePeriod,

            bool? installIptablesRules,

            string? ipam,

            bool? masquerade,

            string? memoryRequest,

            ImmutableArray<string> metrics,

            string? monitorAggregation,

            bool preallocateBpfMaps,

            string? sidecarIstioProxyImage,

            string? toFqdnsDnsRejectResponseCode,

            bool? toFqdnsEnablePoller,

            string? tunnel,

            string? version)
        {
            AgentPodAnnotations = agentPodAnnotations;
            AgentPrometheusPort = agentPrometheusPort;
            AutoDirectNodeRoutes = autoDirectNodeRoutes;
            BpfNeighGlobalMax = bpfNeighGlobalMax;
            BpfPolicyMapMax = bpfPolicyMapMax;
            BpfctGlobalAnyMax = bpfctGlobalAnyMax;
            BpfctGlobalTcpMax = bpfctGlobalTcpMax;
            BpflbAlgorithm = bpflbAlgorithm;
            BpflbMaglevTableSize = bpflbMaglevTableSize;
            BpflbMapMax = bpflbMapMax;
            BpflbSockHostNsOnly = bpflbSockHostNsOnly;
            BpfnatGlobalMax = bpfnatGlobalMax;
            ChainingMode = chainingMode;
            ClusterName = clusterName;
            CpuRequest = cpuRequest;
            Debug = debug;
            DisableCnpStatusUpdates = disableCnpStatusUpdates;
            DisableEndpointCrd = disableEndpointCrd;
            EnableBpfMasquerade = enableBpfMasquerade;
            EnableEncryption = enableEncryption;
            EnableEndpointHealthChecking = enableEndpointHealthChecking;
            EnableHostReachableServices = enableHostReachableServices;
            EnableL7Proxy = enableL7Proxy;
            EnableNodePort = enableNodePort;
            EnablePolicy = enablePolicy;
            EnablePrometheusMetrics = enablePrometheusMetrics;
            EnableRemoteNodeIdentity = enableRemoteNodeIdentity;
            EnableServiceTopology = enableServiceTopology;
            EncryptionType = encryptionType;
            EtcdManaged = etcdManaged;
            Hubble = hubble;
            IdentityAllocationMode = identityAllocationMode;
            IdentityChangeGracePeriod = identityChangeGracePeriod;
            InstallIptablesRules = installIptablesRules;
            Ipam = ipam;
            Masquerade = masquerade;
            MemoryRequest = memoryRequest;
            Metrics = metrics;
            MonitorAggregation = monitorAggregation;
            PreallocateBpfMaps = preallocateBpfMaps;
            SidecarIstioProxyImage = sidecarIstioProxyImage;
            ToFqdnsDnsRejectResponseCode = toFqdnsDnsRejectResponseCode;
            ToFqdnsEnablePoller = toFqdnsEnablePoller;
            Tunnel = tunnel;
            Version = version;
        }
    }
}
