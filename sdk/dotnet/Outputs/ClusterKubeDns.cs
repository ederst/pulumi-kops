// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kops.Outputs
{

    [OutputType]
    public sealed class ClusterKubeDns
    {
        public readonly Outputs.ClusterKubeDnsAffinity? Affinity;
        public readonly int? CacheMaxConcurrent;
        public readonly int? CacheMaxSize;
        public readonly string? CoreDnsImage;
        public readonly string? CpaImage;
        public readonly string? CpuRequest;
        public readonly string? Domain;
        public readonly string? ExternalCoreFile;
        public readonly string? MemoryLimit;
        public readonly string? MemoryRequest;
        public readonly Outputs.ClusterKubeDnsNodeLocalDns? NodeLocalDns;
        public readonly string? Provider;
        public readonly string? ServerIp;
        public readonly ImmutableArray<Outputs.ClusterKubeDnsStubDomain> StubDomains;
        public readonly ImmutableArray<Outputs.ClusterKubeDnsToleration> Tolerations;
        public readonly ImmutableArray<string> UpstreamNameservers;

        [OutputConstructor]
        private ClusterKubeDns(
            Outputs.ClusterKubeDnsAffinity? affinity,

            int? cacheMaxConcurrent,

            int? cacheMaxSize,

            string? coreDnsImage,

            string? cpaImage,

            string? cpuRequest,

            string? domain,

            string? externalCoreFile,

            string? memoryLimit,

            string? memoryRequest,

            Outputs.ClusterKubeDnsNodeLocalDns? nodeLocalDns,

            string? provider,

            string? serverIp,

            ImmutableArray<Outputs.ClusterKubeDnsStubDomain> stubDomains,

            ImmutableArray<Outputs.ClusterKubeDnsToleration> tolerations,

            ImmutableArray<string> upstreamNameservers)
        {
            Affinity = affinity;
            CacheMaxConcurrent = cacheMaxConcurrent;
            CacheMaxSize = cacheMaxSize;
            CoreDnsImage = coreDnsImage;
            CpaImage = cpaImage;
            CpuRequest = cpuRequest;
            Domain = domain;
            ExternalCoreFile = externalCoreFile;
            MemoryLimit = memoryLimit;
            MemoryRequest = memoryRequest;
            NodeLocalDns = nodeLocalDns;
            Provider = provider;
            ServerIp = serverIp;
            StubDomains = stubDomains;
            Tolerations = tolerations;
            UpstreamNameservers = upstreamNameservers;
        }
    }
}
